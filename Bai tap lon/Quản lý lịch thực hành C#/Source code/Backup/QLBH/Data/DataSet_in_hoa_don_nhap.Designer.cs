//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QLBH.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet_in_hoa_don_nhap")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet_in_hoa_don_nhap : global::System.Data.DataSet {
        
        private CHI_TIET_NHAPDataTable tableCHI_TIET_NHAP;
        
        private HANG_HOADataTable tableHANG_HOA;
        
        private global::System.Data.DataRelation relationFK_CHI_TIET_CON_HANG_HOA;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet_in_hoa_don_nhap() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet_in_hoa_don_nhap(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CHI_TIET_NHAP"] != null)) {
                    base.Tables.Add(new CHI_TIET_NHAPDataTable(ds.Tables["CHI_TIET_NHAP"]));
                }
                if ((ds.Tables["HANG_HOA"] != null)) {
                    base.Tables.Add(new HANG_HOADataTable(ds.Tables["HANG_HOA"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHI_TIET_NHAPDataTable CHI_TIET_NHAP {
            get {
                return this.tableCHI_TIET_NHAP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HANG_HOADataTable HANG_HOA {
            get {
                return this.tableHANG_HOA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet_in_hoa_don_nhap cln = ((DataSet_in_hoa_don_nhap)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CHI_TIET_NHAP"] != null)) {
                    base.Tables.Add(new CHI_TIET_NHAPDataTable(ds.Tables["CHI_TIET_NHAP"]));
                }
                if ((ds.Tables["HANG_HOA"] != null)) {
                    base.Tables.Add(new HANG_HOADataTable(ds.Tables["HANG_HOA"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCHI_TIET_NHAP = ((CHI_TIET_NHAPDataTable)(base.Tables["CHI_TIET_NHAP"]));
            if ((initTable == true)) {
                if ((this.tableCHI_TIET_NHAP != null)) {
                    this.tableCHI_TIET_NHAP.InitVars();
                }
            }
            this.tableHANG_HOA = ((HANG_HOADataTable)(base.Tables["HANG_HOA"]));
            if ((initTable == true)) {
                if ((this.tableHANG_HOA != null)) {
                    this.tableHANG_HOA.InitVars();
                }
            }
            this.relationFK_CHI_TIET_CON_HANG_HOA = this.Relations["FK_CHI_TIET_CON_HANG_HOA"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet_in_hoa_don_nhap";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet_in_hoa_don_nhap.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCHI_TIET_NHAP = new CHI_TIET_NHAPDataTable();
            base.Tables.Add(this.tableCHI_TIET_NHAP);
            this.tableHANG_HOA = new HANG_HOADataTable();
            base.Tables.Add(this.tableHANG_HOA);
            this.relationFK_CHI_TIET_CON_HANG_HOA = new global::System.Data.DataRelation("FK_CHI_TIET_CON_HANG_HOA", new global::System.Data.DataColumn[] {
                        this.tableHANG_HOA.MAHANGColumn,
                        this.tableHANG_HOA.MALOAIColumn}, new global::System.Data.DataColumn[] {
                        this.tableCHI_TIET_NHAP.MAHANGColumn,
                        this.tableCHI_TIET_NHAP.MALOAIColumn}, false);
            this.Relations.Add(this.relationFK_CHI_TIET_CON_HANG_HOA);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCHI_TIET_NHAP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHANG_HOA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet_in_hoa_don_nhap ds = new DataSet_in_hoa_don_nhap();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CHI_TIET_NHAPRowChangeEventHandler(object sender, CHI_TIET_NHAPRowChangeEvent e);
        
        public delegate void HANG_HOARowChangeEventHandler(object sender, HANG_HOARowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHI_TIET_NHAPDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMALOAI;
            
            private global::System.Data.DataColumn columnMAHANG;
            
            private global::System.Data.DataColumn columnSOHDN;
            
            private global::System.Data.DataColumn columnSOLUONGN;
            
            private global::System.Data.DataColumn columnDONGIAN;
            
            private global::System.Data.DataColumn columnHANSUDUNG;
            
            private global::System.Data.DataColumn columnNGAYSX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_NHAPDataTable() {
                this.TableName = "CHI_TIET_NHAP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHI_TIET_NHAPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CHI_TIET_NHAPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MALOAIColumn {
                get {
                    return this.columnMALOAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAHANGColumn {
                get {
                    return this.columnMAHANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOHDNColumn {
                get {
                    return this.columnSOHDN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOLUONGNColumn {
                get {
                    return this.columnSOLUONGN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DONGIANColumn {
                get {
                    return this.columnDONGIAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HANSUDUNGColumn {
                get {
                    return this.columnHANSUDUNG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYSXColumn {
                get {
                    return this.columnNGAYSX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_NHAPRow this[int index] {
                get {
                    return ((CHI_TIET_NHAPRow)(this.Rows[index]));
                }
            }
            
            public event CHI_TIET_NHAPRowChangeEventHandler CHI_TIET_NHAPRowChanging;
            
            public event CHI_TIET_NHAPRowChangeEventHandler CHI_TIET_NHAPRowChanged;
            
            public event CHI_TIET_NHAPRowChangeEventHandler CHI_TIET_NHAPRowDeleting;
            
            public event CHI_TIET_NHAPRowChangeEventHandler CHI_TIET_NHAPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCHI_TIET_NHAPRow(CHI_TIET_NHAPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_NHAPRow AddCHI_TIET_NHAPRow(string MALOAI, string MAHANG, decimal SOHDN, decimal SOLUONGN, decimal DONGIAN, decimal HANSUDUNG, System.DateTime NGAYSX) {
                CHI_TIET_NHAPRow rowCHI_TIET_NHAPRow = ((CHI_TIET_NHAPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MALOAI,
                        MAHANG,
                        SOHDN,
                        SOLUONGN,
                        DONGIAN,
                        HANSUDUNG,
                        NGAYSX};
                rowCHI_TIET_NHAPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCHI_TIET_NHAPRow);
                return rowCHI_TIET_NHAPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_NHAPRow FindByMALOAIMAHANGSOHDN(string MALOAI, string MAHANG, decimal SOHDN) {
                return ((CHI_TIET_NHAPRow)(this.Rows.Find(new object[] {
                            MALOAI,
                            MAHANG,
                            SOHDN})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CHI_TIET_NHAPDataTable cln = ((CHI_TIET_NHAPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CHI_TIET_NHAPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMALOAI = base.Columns["MALOAI"];
                this.columnMAHANG = base.Columns["MAHANG"];
                this.columnSOHDN = base.Columns["SOHDN"];
                this.columnSOLUONGN = base.Columns["SOLUONGN"];
                this.columnDONGIAN = base.Columns["DONGIAN"];
                this.columnHANSUDUNG = base.Columns["HANSUDUNG"];
                this.columnNGAYSX = base.Columns["NGAYSX"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMALOAI = new global::System.Data.DataColumn("MALOAI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMALOAI);
                this.columnMAHANG = new global::System.Data.DataColumn("MAHANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAHANG);
                this.columnSOHDN = new global::System.Data.DataColumn("SOHDN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOHDN);
                this.columnSOLUONGN = new global::System.Data.DataColumn("SOLUONGN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOLUONGN);
                this.columnDONGIAN = new global::System.Data.DataColumn("DONGIAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDONGIAN);
                this.columnHANSUDUNG = new global::System.Data.DataColumn("HANSUDUNG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHANSUDUNG);
                this.columnNGAYSX = new global::System.Data.DataColumn("NGAYSX", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYSX);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMALOAI,
                                this.columnMAHANG,
                                this.columnSOHDN}, true));
                this.columnMALOAI.AllowDBNull = false;
                this.columnMALOAI.MaxLength = 2;
                this.columnMAHANG.AllowDBNull = false;
                this.columnMAHANG.MaxLength = 5;
                this.columnSOHDN.AllowDBNull = false;
                this.columnSOLUONGN.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_NHAPRow NewCHI_TIET_NHAPRow() {
                return ((CHI_TIET_NHAPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CHI_TIET_NHAPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CHI_TIET_NHAPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHI_TIET_NHAPRowChanged != null)) {
                    this.CHI_TIET_NHAPRowChanged(this, new CHI_TIET_NHAPRowChangeEvent(((CHI_TIET_NHAPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHI_TIET_NHAPRowChanging != null)) {
                    this.CHI_TIET_NHAPRowChanging(this, new CHI_TIET_NHAPRowChangeEvent(((CHI_TIET_NHAPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHI_TIET_NHAPRowDeleted != null)) {
                    this.CHI_TIET_NHAPRowDeleted(this, new CHI_TIET_NHAPRowChangeEvent(((CHI_TIET_NHAPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHI_TIET_NHAPRowDeleting != null)) {
                    this.CHI_TIET_NHAPRowDeleting(this, new CHI_TIET_NHAPRowChangeEvent(((CHI_TIET_NHAPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCHI_TIET_NHAPRow(CHI_TIET_NHAPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_in_hoa_don_nhap ds = new DataSet_in_hoa_don_nhap();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHI_TIET_NHAPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HANG_HOADataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMALOAI;
            
            private global::System.Data.DataColumn columnMAHANG;
            
            private global::System.Data.DataColumn columnTENHANG;
            
            private global::System.Data.DataColumn columnDONVITINH;
            
            private global::System.Data.DataColumn columnTENNHASX;
            
            private global::System.Data.DataColumn columnGIADENGHI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_HOADataTable() {
                this.TableName = "HANG_HOA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HANG_HOADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HANG_HOADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MALOAIColumn {
                get {
                    return this.columnMALOAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAHANGColumn {
                get {
                    return this.columnMAHANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENHANGColumn {
                get {
                    return this.columnTENHANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DONVITINHColumn {
                get {
                    return this.columnDONVITINH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENNHASXColumn {
                get {
                    return this.columnTENNHASX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GIADENGHIColumn {
                get {
                    return this.columnGIADENGHI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_HOARow this[int index] {
                get {
                    return ((HANG_HOARow)(this.Rows[index]));
                }
            }
            
            public event HANG_HOARowChangeEventHandler HANG_HOARowChanging;
            
            public event HANG_HOARowChangeEventHandler HANG_HOARowChanged;
            
            public event HANG_HOARowChangeEventHandler HANG_HOARowDeleting;
            
            public event HANG_HOARowChangeEventHandler HANG_HOARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHANG_HOARow(HANG_HOARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_HOARow AddHANG_HOARow(string MALOAI, string MAHANG, string TENHANG, string DONVITINH, string TENNHASX, decimal GIADENGHI) {
                HANG_HOARow rowHANG_HOARow = ((HANG_HOARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MALOAI,
                        MAHANG,
                        TENHANG,
                        DONVITINH,
                        TENNHASX,
                        GIADENGHI};
                rowHANG_HOARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHANG_HOARow);
                return rowHANG_HOARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_HOARow FindByMALOAIMAHANG(string MALOAI, string MAHANG) {
                return ((HANG_HOARow)(this.Rows.Find(new object[] {
                            MALOAI,
                            MAHANG})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HANG_HOADataTable cln = ((HANG_HOADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HANG_HOADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMALOAI = base.Columns["MALOAI"];
                this.columnMAHANG = base.Columns["MAHANG"];
                this.columnTENHANG = base.Columns["TENHANG"];
                this.columnDONVITINH = base.Columns["DONVITINH"];
                this.columnTENNHASX = base.Columns["TENNHASX"];
                this.columnGIADENGHI = base.Columns["GIADENGHI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMALOAI = new global::System.Data.DataColumn("MALOAI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMALOAI);
                this.columnMAHANG = new global::System.Data.DataColumn("MAHANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAHANG);
                this.columnTENHANG = new global::System.Data.DataColumn("TENHANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENHANG);
                this.columnDONVITINH = new global::System.Data.DataColumn("DONVITINH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDONVITINH);
                this.columnTENNHASX = new global::System.Data.DataColumn("TENNHASX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENNHASX);
                this.columnGIADENGHI = new global::System.Data.DataColumn("GIADENGHI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGIADENGHI);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMALOAI,
                                this.columnMAHANG}, true));
                this.columnMALOAI.AllowDBNull = false;
                this.columnMALOAI.MaxLength = 2;
                this.columnMAHANG.AllowDBNull = false;
                this.columnMAHANG.MaxLength = 5;
                this.columnTENHANG.MaxLength = 50;
                this.columnDONVITINH.MaxLength = 8;
                this.columnTENNHASX.MaxLength = 50;
                this.columnGIADENGHI.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_HOARow NewHANG_HOARow() {
                return ((HANG_HOARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HANG_HOARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HANG_HOARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HANG_HOARowChanged != null)) {
                    this.HANG_HOARowChanged(this, new HANG_HOARowChangeEvent(((HANG_HOARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HANG_HOARowChanging != null)) {
                    this.HANG_HOARowChanging(this, new HANG_HOARowChangeEvent(((HANG_HOARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HANG_HOARowDeleted != null)) {
                    this.HANG_HOARowDeleted(this, new HANG_HOARowChangeEvent(((HANG_HOARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HANG_HOARowDeleting != null)) {
                    this.HANG_HOARowDeleting(this, new HANG_HOARowChangeEvent(((HANG_HOARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHANG_HOARow(HANG_HOARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_in_hoa_don_nhap ds = new DataSet_in_hoa_don_nhap();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HANG_HOADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CHI_TIET_NHAPRow : global::System.Data.DataRow {
            
            private CHI_TIET_NHAPDataTable tableCHI_TIET_NHAP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHI_TIET_NHAPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHI_TIET_NHAP = ((CHI_TIET_NHAPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MALOAI {
                get {
                    return ((string)(this[this.tableCHI_TIET_NHAP.MALOAIColumn]));
                }
                set {
                    this[this.tableCHI_TIET_NHAP.MALOAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAHANG {
                get {
                    return ((string)(this[this.tableCHI_TIET_NHAP.MAHANGColumn]));
                }
                set {
                    this[this.tableCHI_TIET_NHAP.MAHANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SOHDN {
                get {
                    return ((decimal)(this[this.tableCHI_TIET_NHAP.SOHDNColumn]));
                }
                set {
                    this[this.tableCHI_TIET_NHAP.SOHDNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SOLUONGN {
                get {
                    return ((decimal)(this[this.tableCHI_TIET_NHAP.SOLUONGNColumn]));
                }
                set {
                    this[this.tableCHI_TIET_NHAP.SOLUONGNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DONGIAN {
                get {
                    try {
                        return ((decimal)(this[this.tableCHI_TIET_NHAP.DONGIANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DONGIAN\' in table \'CHI_TIET_NHAP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_NHAP.DONGIANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HANSUDUNG {
                get {
                    try {
                        return ((decimal)(this[this.tableCHI_TIET_NHAP.HANSUDUNGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HANSUDUNG\' in table \'CHI_TIET_NHAP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_NHAP.HANSUDUNGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NGAYSX {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCHI_TIET_NHAP.NGAYSXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYSX\' in table \'CHI_TIET_NHAP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_NHAP.NGAYSXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_HOARow HANG_HOARowParent {
                get {
                    return ((HANG_HOARow)(this.GetParentRow(this.Table.ParentRelations["FK_CHI_TIET_CON_HANG_HOA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CHI_TIET_CON_HANG_HOA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDONGIANNull() {
                return this.IsNull(this.tableCHI_TIET_NHAP.DONGIANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDONGIANNull() {
                this[this.tableCHI_TIET_NHAP.DONGIANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHANSUDUNGNull() {
                return this.IsNull(this.tableCHI_TIET_NHAP.HANSUDUNGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHANSUDUNGNull() {
                this[this.tableCHI_TIET_NHAP.HANSUDUNGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYSXNull() {
                return this.IsNull(this.tableCHI_TIET_NHAP.NGAYSXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYSXNull() {
                this[this.tableCHI_TIET_NHAP.NGAYSXColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HANG_HOARow : global::System.Data.DataRow {
            
            private HANG_HOADataTable tableHANG_HOA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HANG_HOARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHANG_HOA = ((HANG_HOADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MALOAI {
                get {
                    return ((string)(this[this.tableHANG_HOA.MALOAIColumn]));
                }
                set {
                    this[this.tableHANG_HOA.MALOAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAHANG {
                get {
                    return ((string)(this[this.tableHANG_HOA.MAHANGColumn]));
                }
                set {
                    this[this.tableHANG_HOA.MAHANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENHANG {
                get {
                    try {
                        return ((string)(this[this.tableHANG_HOA.TENHANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENHANG\' in table \'HANG_HOA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHANG_HOA.TENHANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DONVITINH {
                get {
                    try {
                        return ((string)(this[this.tableHANG_HOA.DONVITINHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DONVITINH\' in table \'HANG_HOA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHANG_HOA.DONVITINHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENNHASX {
                get {
                    try {
                        return ((string)(this[this.tableHANG_HOA.TENNHASXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENNHASX\' in table \'HANG_HOA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHANG_HOA.TENNHASXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GIADENGHI {
                get {
                    return ((decimal)(this[this.tableHANG_HOA.GIADENGHIColumn]));
                }
                set {
                    this[this.tableHANG_HOA.GIADENGHIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENHANGNull() {
                return this.IsNull(this.tableHANG_HOA.TENHANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENHANGNull() {
                this[this.tableHANG_HOA.TENHANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDONVITINHNull() {
                return this.IsNull(this.tableHANG_HOA.DONVITINHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDONVITINHNull() {
                this[this.tableHANG_HOA.DONVITINHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENNHASXNull() {
                return this.IsNull(this.tableHANG_HOA.TENNHASXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENNHASXNull() {
                this[this.tableHANG_HOA.TENNHASXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_NHAPRow[] GetCHI_TIET_NHAPRows() {
                if ((this.Table.ChildRelations["FK_CHI_TIET_CON_HANG_HOA"] == null)) {
                    return new CHI_TIET_NHAPRow[0];
                }
                else {
                    return ((CHI_TIET_NHAPRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CHI_TIET_CON_HANG_HOA"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CHI_TIET_NHAPRowChangeEvent : global::System.EventArgs {
            
            private CHI_TIET_NHAPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_NHAPRowChangeEvent(CHI_TIET_NHAPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_NHAPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HANG_HOARowChangeEvent : global::System.EventArgs {
            
            private HANG_HOARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_HOARowChangeEvent(HANG_HOARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANG_HOARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace QLBH.Data.DataSet_in_hoa_don_nhapTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CHI_TIET_NHAPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CHI_TIET_NHAPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CHI_TIET_NHAP";
            tableMapping.ColumnMappings.Add("MALOAI", "MALOAI");
            tableMapping.ColumnMappings.Add("MAHANG", "MAHANG");
            tableMapping.ColumnMappings.Add("SOHDN", "SOHDN");
            tableMapping.ColumnMappings.Add("SOLUONGN", "SOLUONGN");
            tableMapping.ColumnMappings.Add("DONGIAN", "DONGIAN");
            tableMapping.ColumnMappings.Add("HANSUDUNG", "HANSUDUNG");
            tableMapping.ColumnMappings.Add("NGAYSX", "NGAYSX");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""QLBH"".""CHI_TIET_NHAP"" WHERE ((""MALOAI"" = :Original_MALOAI) AND (""MAHANG"" = :Original_MAHANG) AND (""SOHDN"" = :Original_SOHDN) AND (""SOLUONGN"" = :Original_SOLUONGN) AND ((:IsNull_DONGIAN = 1 AND ""DONGIAN"" IS NULL) OR (""DONGIAN"" = :Original_DONGIAN)) AND ((:IsNull_HANSUDUNG = 1 AND ""HANSUDUNG"" IS NULL) OR (""HANSUDUNG"" = :Original_HANSUDUNG)) AND ((:IsNull_NGAYSX = 1 AND ""NGAYSX"" IS NULL) OR (""NGAYSX"" = :Original_NGAYSX)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MALOAI", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MALOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MAHANG", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MAHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SOHDN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SOHDN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SOLUONGN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SOLUONGN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DONGIAN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DONGIAN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DONGIAN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DONGIAN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_HANSUDUNG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "HANSUDUNG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_HANSUDUNG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HANSUDUNG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NGAYSX", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NGAYSX", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NGAYSX", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "NGAYSX", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"QLBH\".\"CHI_TIET_NHAP\" (\"MALOAI\", \"MAHANG\", \"SOHDN\", \"SOLUONGN\", \"DON" +
                "GIAN\", \"HANSUDUNG\", \"NGAYSX\") VALUES (:MALOAI, :MAHANG, :SOHDN, :SOLUONGN, :DONG" +
                "IAN, :HANSUDUNG, :NGAYSX)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MALOAI", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MALOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MAHANG", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MAHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SOHDN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SOHDN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SOLUONGN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SOLUONGN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DONGIAN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DONGIAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HANSUDUNG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HANSUDUNG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NGAYSX", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "NGAYSX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""QLBH"".""CHI_TIET_NHAP"" SET ""MALOAI"" = :MALOAI, ""MAHANG"" = :MAHANG, ""SOHDN"" = :SOHDN, ""SOLUONGN"" = :SOLUONGN, ""DONGIAN"" = :DONGIAN, ""HANSUDUNG"" = :HANSUDUNG, ""NGAYSX"" = :NGAYSX WHERE ((""MALOAI"" = :Original_MALOAI) AND (""MAHANG"" = :Original_MAHANG) AND (""SOHDN"" = :Original_SOHDN) AND (""SOLUONGN"" = :Original_SOLUONGN) AND ((:IsNull_DONGIAN = 1 AND ""DONGIAN"" IS NULL) OR (""DONGIAN"" = :Original_DONGIAN)) AND ((:IsNull_HANSUDUNG = 1 AND ""HANSUDUNG"" IS NULL) OR (""HANSUDUNG"" = :Original_HANSUDUNG)) AND ((:IsNull_NGAYSX = 1 AND ""NGAYSX"" IS NULL) OR (""NGAYSX"" = :Original_NGAYSX)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MALOAI", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MALOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MAHANG", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MAHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SOHDN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SOHDN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SOLUONGN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SOLUONGN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DONGIAN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DONGIAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HANSUDUNG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HANSUDUNG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NGAYSX", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "NGAYSX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MALOAI", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MALOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MAHANG", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MAHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SOHDN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SOHDN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SOLUONGN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SOLUONGN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DONGIAN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DONGIAN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DONGIAN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DONGIAN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_HANSUDUNG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "HANSUDUNG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_HANSUDUNG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HANSUDUNG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NGAYSX", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NGAYSX", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NGAYSX", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "NGAYSX", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::QLBH.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MALOAI, MAHANG, SOHDN, SOLUONGN, DONGIAN, HANSUDUNG, NGAYSX FROM QLBH.CHI_" +
                "TIET_NHAP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_in_hoa_don_nhap.CHI_TIET_NHAPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_in_hoa_don_nhap.CHI_TIET_NHAPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_in_hoa_don_nhap.CHI_TIET_NHAPDataTable dataTable = new DataSet_in_hoa_don_nhap.CHI_TIET_NHAPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_in_hoa_don_nhap.CHI_TIET_NHAPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_in_hoa_don_nhap dataSet) {
            return this.Adapter.Update(dataSet, "CHI_TIET_NHAP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MALOAI, string Original_MAHANG, decimal Original_SOHDN, decimal Original_SOLUONGN, global::System.Nullable<decimal> Original_DONGIAN, global::System.Nullable<decimal> Original_HANSUDUNG, global::System.Nullable<global::System.DateTime> Original_NGAYSX) {
            if ((Original_MALOAI == null)) {
                throw new global::System.ArgumentNullException("Original_MALOAI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MALOAI));
            }
            if ((Original_MAHANG == null)) {
                throw new global::System.ArgumentNullException("Original_MAHANG");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MAHANG));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_SOHDN));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_SOLUONGN));
            if ((Original_DONGIAN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_DONGIAN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_HANSUDUNG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_HANSUDUNG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_NGAYSX.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_NGAYSX.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MALOAI, string MAHANG, decimal SOHDN, decimal SOLUONGN, global::System.Nullable<decimal> DONGIAN, global::System.Nullable<decimal> HANSUDUNG, global::System.Nullable<global::System.DateTime> NGAYSX) {
            if ((MALOAI == null)) {
                throw new global::System.ArgumentNullException("MALOAI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MALOAI));
            }
            if ((MAHANG == null)) {
                throw new global::System.ArgumentNullException("MAHANG");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MAHANG));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(SOHDN));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(SOLUONGN));
            if ((DONGIAN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(DONGIAN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((HANSUDUNG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(HANSUDUNG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((NGAYSX.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(NGAYSX.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MALOAI, string MAHANG, decimal SOHDN, decimal SOLUONGN, global::System.Nullable<decimal> DONGIAN, global::System.Nullable<decimal> HANSUDUNG, global::System.Nullable<global::System.DateTime> NGAYSX, string Original_MALOAI, string Original_MAHANG, decimal Original_SOHDN, decimal Original_SOLUONGN, global::System.Nullable<decimal> Original_DONGIAN, global::System.Nullable<decimal> Original_HANSUDUNG, global::System.Nullable<global::System.DateTime> Original_NGAYSX) {
            if ((MALOAI == null)) {
                throw new global::System.ArgumentNullException("MALOAI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MALOAI));
            }
            if ((MAHANG == null)) {
                throw new global::System.ArgumentNullException("MAHANG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MAHANG));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(SOHDN));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(SOLUONGN));
            if ((DONGIAN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(DONGIAN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((HANSUDUNG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(HANSUDUNG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((NGAYSX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(NGAYSX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_MALOAI == null)) {
                throw new global::System.ArgumentNullException("Original_MALOAI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MALOAI));
            }
            if ((Original_MAHANG == null)) {
                throw new global::System.ArgumentNullException("Original_MAHANG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_MAHANG));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_SOHDN));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_SOLUONGN));
            if ((Original_DONGIAN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_DONGIAN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_HANSUDUNG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_HANSUDUNG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_NGAYSX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_NGAYSX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal SOLUONGN, global::System.Nullable<decimal> DONGIAN, global::System.Nullable<decimal> HANSUDUNG, global::System.Nullable<global::System.DateTime> NGAYSX, string Original_MALOAI, string Original_MAHANG, decimal Original_SOHDN, decimal Original_SOLUONGN, global::System.Nullable<decimal> Original_DONGIAN, global::System.Nullable<decimal> Original_HANSUDUNG, global::System.Nullable<global::System.DateTime> Original_NGAYSX) {
            return this.Update(Original_MALOAI, Original_MAHANG, Original_SOHDN, SOLUONGN, DONGIAN, HANSUDUNG, NGAYSX, Original_MALOAI, Original_MAHANG, Original_SOHDN, Original_SOLUONGN, Original_DONGIAN, Original_HANSUDUNG, Original_NGAYSX);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HANG_HOATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HANG_HOATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HANG_HOA";
            tableMapping.ColumnMappings.Add("MALOAI", "MALOAI");
            tableMapping.ColumnMappings.Add("MAHANG", "MAHANG");
            tableMapping.ColumnMappings.Add("TENHANG", "TENHANG");
            tableMapping.ColumnMappings.Add("DONVITINH", "DONVITINH");
            tableMapping.ColumnMappings.Add("TENNHASX", "TENNHASX");
            tableMapping.ColumnMappings.Add("GIADENGHI", "GIADENGHI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""QLBH"".""HANG_HOA"" WHERE ((""MALOAI"" = :Original_MALOAI) AND (""MAHANG"" = :Original_MAHANG) AND ((:IsNull_TENHANG = 1 AND ""TENHANG"" IS NULL) OR (""TENHANG"" = :Original_TENHANG)) AND ((:IsNull_DONVITINH = 1 AND ""DONVITINH"" IS NULL) OR (""DONVITINH"" = :Original_DONVITINH)) AND ((:IsNull_TENNHASX = 1 AND ""TENNHASX"" IS NULL) OR (""TENNHASX"" = :Original_TENNHASX)) AND (""GIADENGHI"" = :Original_GIADENGHI))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MALOAI", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MALOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MAHANG", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MAHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TENHANG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TENHANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TENHANG", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TENHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DONVITINH", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DONVITINH", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DONVITINH", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "DONVITINH", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TENNHASX", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TENNHASX", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TENNHASX", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TENNHASX", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GIADENGHI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GIADENGHI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"QLBH\".\"HANG_HOA\" (\"MALOAI\", \"MAHANG\", \"TENHANG\", \"DONVITINH\", \"TENNH" +
                "ASX\", \"GIADENGHI\") VALUES (:MALOAI, :MAHANG, :TENHANG, :DONVITINH, :TENNHASX, :G" +
                "IADENGHI)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MALOAI", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MALOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MAHANG", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MAHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TENHANG", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TENHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DONVITINH", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "DONVITINH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TENNHASX", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TENNHASX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GIADENGHI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GIADENGHI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""QLBH"".""HANG_HOA"" SET ""MALOAI"" = :MALOAI, ""MAHANG"" = :MAHANG, ""TENHANG"" = :TENHANG, ""DONVITINH"" = :DONVITINH, ""TENNHASX"" = :TENNHASX, ""GIADENGHI"" = :GIADENGHI WHERE ((""MALOAI"" = :Original_MALOAI) AND (""MAHANG"" = :Original_MAHANG) AND ((:IsNull_TENHANG = 1 AND ""TENHANG"" IS NULL) OR (""TENHANG"" = :Original_TENHANG)) AND ((:IsNull_DONVITINH = 1 AND ""DONVITINH"" IS NULL) OR (""DONVITINH"" = :Original_DONVITINH)) AND ((:IsNull_TENNHASX = 1 AND ""TENNHASX"" IS NULL) OR (""TENNHASX"" = :Original_TENNHASX)) AND (""GIADENGHI"" = :Original_GIADENGHI))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MALOAI", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MALOAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MAHANG", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MAHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TENHANG", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TENHANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DONVITINH", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "DONVITINH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TENNHASX", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TENNHASX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GIADENGHI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GIADENGHI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MALOAI", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MALOAI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MAHANG", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MAHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TENHANG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TENHANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TENHANG", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TENHANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DONVITINH", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DONVITINH", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DONVITINH", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "DONVITINH", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TENNHASX", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TENNHASX", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TENNHASX", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TENNHASX", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GIADENGHI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GIADENGHI", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::QLBH.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MALOAI, MAHANG, TENHANG, DONVITINH, TENNHASX, GIADENGHI FROM QLBH.HANG_HOA" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_in_hoa_don_nhap.HANG_HOADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_in_hoa_don_nhap.HANG_HOADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_in_hoa_don_nhap.HANG_HOADataTable dataTable = new DataSet_in_hoa_don_nhap.HANG_HOADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_in_hoa_don_nhap.HANG_HOADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_in_hoa_don_nhap dataSet) {
            return this.Adapter.Update(dataSet, "HANG_HOA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MALOAI, string Original_MAHANG, string Original_TENHANG, string Original_DONVITINH, string Original_TENNHASX, decimal Original_GIADENGHI) {
            if ((Original_MALOAI == null)) {
                throw new global::System.ArgumentNullException("Original_MALOAI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MALOAI));
            }
            if ((Original_MAHANG == null)) {
                throw new global::System.ArgumentNullException("Original_MAHANG");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MAHANG));
            }
            if ((Original_TENHANG == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_TENHANG));
            }
            if ((Original_DONVITINH == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_DONVITINH));
            }
            if ((Original_TENNHASX == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_TENNHASX));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_GIADENGHI));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MALOAI, string MAHANG, string TENHANG, string DONVITINH, string TENNHASX, decimal GIADENGHI) {
            if ((MALOAI == null)) {
                throw new global::System.ArgumentNullException("MALOAI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MALOAI));
            }
            if ((MAHANG == null)) {
                throw new global::System.ArgumentNullException("MAHANG");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MAHANG));
            }
            if ((TENHANG == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TENHANG));
            }
            if ((DONVITINH == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DONVITINH));
            }
            if ((TENNHASX == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(TENNHASX));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(GIADENGHI));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MALOAI, string MAHANG, string TENHANG, string DONVITINH, string TENNHASX, decimal GIADENGHI, string Original_MALOAI, string Original_MAHANG, string Original_TENHANG, string Original_DONVITINH, string Original_TENNHASX, decimal Original_GIADENGHI) {
            if ((MALOAI == null)) {
                throw new global::System.ArgumentNullException("MALOAI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MALOAI));
            }
            if ((MAHANG == null)) {
                throw new global::System.ArgumentNullException("MAHANG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MAHANG));
            }
            if ((TENHANG == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TENHANG));
            }
            if ((DONVITINH == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DONVITINH));
            }
            if ((TENNHASX == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(TENNHASX));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(GIADENGHI));
            if ((Original_MALOAI == null)) {
                throw new global::System.ArgumentNullException("Original_MALOAI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MALOAI));
            }
            if ((Original_MAHANG == null)) {
                throw new global::System.ArgumentNullException("Original_MAHANG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MAHANG));
            }
            if ((Original_TENHANG == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_TENHANG));
            }
            if ((Original_DONVITINH == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_DONVITINH));
            }
            if ((Original_TENNHASX == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_TENNHASX));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_GIADENGHI));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TENHANG, string DONVITINH, string TENNHASX, decimal GIADENGHI, string Original_MALOAI, string Original_MAHANG, string Original_TENHANG, string Original_DONVITINH, string Original_TENNHASX, decimal Original_GIADENGHI) {
            return this.Update(Original_MALOAI, Original_MAHANG, TENHANG, DONVITINH, TENNHASX, GIADENGHI, Original_MALOAI, Original_MAHANG, Original_TENHANG, Original_DONVITINH, Original_TENNHASX, Original_GIADENGHI);
        }
    }
}

#pragma warning restore 1591