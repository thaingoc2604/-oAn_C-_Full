<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>209, 17</value>
  </metadata>
  <metadata name="toolStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>311, 17</value>
  </metadata>
  <metadata name="statusStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="ToolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>121, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>51</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>