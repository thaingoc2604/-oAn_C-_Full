#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManagementSASI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="SDGHY")]
	public partial class ManagementSASIDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertTrain(Train instance);
    partial void UpdateTrain(Train instance);
    partial void DeleteTrain(Train instance);
    partial void InsertTrainingInformation(TrainingInformation instance);
    partial void UpdateTrainingInformation(TrainingInformation instance);
    partial void DeleteTrainingInformation(TrainingInformation instance);
    partial void InsertTeacher(Teacher instance);
    partial void UpdateTeacher(Teacher instance);
    partial void DeleteTeacher(Teacher instance);
    partial void InsertSubjectTrain(SubjectTrain instance);
    partial void UpdateSubjectTrain(SubjectTrain instance);
    partial void DeleteSubjectTrain(SubjectTrain instance);
    partial void InsertSubject(Subject instance);
    partial void UpdateSubject(Subject instance);
    partial void DeleteSubject(Subject instance);
    partial void InsertStudentToRegister(StudentToRegister instance);
    partial void UpdateStudentToRegister(StudentToRegister instance);
    partial void DeleteStudentToRegister(StudentToRegister instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertSettingSubjectSplit(SettingSubjectSplit instance);
    partial void UpdateSettingSubjectSplit(SettingSubjectSplit instance);
    partial void DeleteSettingSubjectSplit(SettingSubjectSplit instance);
    partial void InsertSettingMoneyRate(SettingMoneyRate instance);
    partial void UpdateSettingMoneyRate(SettingMoneyRate instance);
    partial void DeleteSettingMoneyRate(SettingMoneyRate instance);
    partial void InsertSASIClass(SASIClass instance);
    partial void UpdateSASIClass(SASIClass instance);
    partial void DeleteSASIClass(SASIClass instance);
    partial void InsertMoneyRatesByClassSASI(MoneyRatesByClassSASI instance);
    partial void UpdateMoneyRatesByClassSASI(MoneyRatesByClassSASI instance);
    partial void DeleteMoneyRatesByClassSASI(MoneyRatesByClassSASI instance);
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertConfig(Config instance);
    partial void UpdateConfig(Config instance);
    partial void DeleteConfig(Config instance);
    #endregion
		
		public ManagementSASIDataContext() : 
				base(global::ManagementSASI.Properties.Settings.Default.SDGHYConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public ManagementSASIDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ManagementSASIDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ManagementSASIDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ManagementSASIDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Class> Classes
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<Train> Trains
		{
			get
			{
				return this.GetTable<Train>();
			}
		}
		
		public System.Data.Linq.Table<TrainingInformation> TrainingInformations
		{
			get
			{
				return this.GetTable<TrainingInformation>();
			}
		}
		
		public System.Data.Linq.Table<Teacher> Teachers
		{
			get
			{
				return this.GetTable<Teacher>();
			}
		}
		
		public System.Data.Linq.Table<SubjectTrain> SubjectTrains
		{
			get
			{
				return this.GetTable<SubjectTrain>();
			}
		}
		
		public System.Data.Linq.Table<Subject> Subjects
		{
			get
			{
				return this.GetTable<Subject>();
			}
		}
		
		public System.Data.Linq.Table<StudentToRegister> StudentToRegisters
		{
			get
			{
				return this.GetTable<StudentToRegister>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<SettingSubjectSplit> SettingSubjectSplits
		{
			get
			{
				return this.GetTable<SettingSubjectSplit>();
			}
		}
		
		public System.Data.Linq.Table<SettingMoneyRate> SettingMoneyRates
		{
			get
			{
				return this.GetTable<SettingMoneyRate>();
			}
		}
		
		public System.Data.Linq.Table<SASIClass> SASIClasses
		{
			get
			{
				return this.GetTable<SASIClass>();
			}
		}
		
		public System.Data.Linq.Table<MoneyRatesByClassSASI> MoneyRatesByClassSASIs
		{
			get
			{
				return this.GetTable<MoneyRatesByClassSASI>();
			}
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Config> Configs
		{
			get
			{
				return this.GetTable<Config>();
			}
		}
		
		[Function(Name="dbo.CountSubjectTrainID")]
		public ISingleResult<CountSubjectTrainIDResult> CountSubjectTrainID([Parameter(Name="SASIClassID", DbType="Int")] System.Nullable<int> sASIClassID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sASIClassID);
			return ((ISingleResult<CountSubjectTrainIDResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.StudentTimeStudy")]
		public ISingleResult<StudentTimeStudyResult> StudentTimeStudy()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<StudentTimeStudyResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GeneralReceiptMoney")]
		public ISingleResult<GeneralReceiptMoneyResult> GeneralReceiptMoney([Parameter(Name="Semester", DbType="Int")] System.Nullable<int> semester, [Parameter(Name="ShoolYear", DbType="VarChar(50)")] string shoolYear, [Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), semester, shoolYear, endDate);
			return ((ISingleResult<GeneralReceiptMoneyResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GeneralReceiptMoneyQuater")]
		public ISingleResult<GeneralReceiptMoneyQuaterResult> GeneralReceiptMoneyQuater([Parameter(Name="Quater", DbType="Int")] System.Nullable<int> quater, [Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), quater, endDate);
			return ((ISingleResult<GeneralReceiptMoneyQuaterResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GeneraMoneySASIClass")]
		public ISingleResult<GeneraMoneySASIClassResult> GeneraMoneySASIClass([Parameter(Name="Semester", DbType="Int")] System.Nullable<int> semester, [Parameter(Name="ShoolYear", DbType="VarChar(50)")] string shoolYear, [Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), semester, shoolYear, endDate);
			return ((ISingleResult<GeneraMoneySASIClassResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GeneraMoneySASIClassQuater")]
		public ISingleResult<GeneraMoneySASIClassQuaterResult> GeneraMoneySASIClassQuater([Parameter(Name="Quater", DbType="Int")] System.Nullable<int> quater, [Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), quater, endDate);
			return ((ISingleResult<GeneraMoneySASIClassQuaterResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GeneraMoneySASITeacher")]
		public ISingleResult<GeneraMoneySASITeacherResult> GeneraMoneySASITeacher([Parameter(Name="MoneyProctor", DbType="Float")] System.Nullable<double> moneyProctor, [Parameter(Name="MoneyExam", DbType="Float")] System.Nullable<double> moneyExam, [Parameter(Name="Semester", DbType="Int")] System.Nullable<int> semester, [Parameter(Name="ShoolYear", DbType="VarChar(50)")] string shoolYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moneyProctor, moneyExam, semester, shoolYear);
			return ((ISingleResult<GeneraMoneySASITeacherResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetTrainName")]
		public ISingleResult<GetTrainNameResult> GetTrainName([Parameter(Name="SASIClassID", DbType="Int")] System.Nullable<int> sASIClassID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sASIClassID);
			return ((ISingleResult<GetTrainNameResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ListMoneySASI")]
		public ISingleResult<ListMoneySASIResult> ListMoneySASI([Parameter(Name="Semester", DbType="Int")] System.Nullable<int> semester, [Parameter(Name="ShoolYear", DbType="VarChar(50)")] string shoolYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), semester, shoolYear);
			return ((ISingleResult<ListMoneySASIResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ListStudentMoneySI")]
		public ISingleResult<ListStudentMoneySIResult> ListStudentMoneySI([Parameter(Name="Semester", DbType="Int")] System.Nullable<int> semester, [Parameter(Name="ShoolYear", DbType="VarChar(50)")] string shoolYear, [Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), semester, shoolYear, endDate);
			return ((ISingleResult<ListStudentMoneySIResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ListStudentMoneySILoadComboxSubject")]
		public ISingleResult<ListStudentMoneySILoadComboxSubjectResult> ListStudentMoneySILoadComboxSubject([Parameter(Name="ClassName", DbType="NVarChar(50)")] string className)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), className);
			return ((ISingleResult<ListStudentMoneySILoadComboxSubjectResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ListStudentMoneySIQuater")]
		public ISingleResult<ListStudentMoneySIQuaterResult> ListStudentMoneySIQuater([Parameter(Name="Quater", DbType="Int")] System.Nullable<int> quater, [Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), quater, endDate);
			return ((ISingleResult<ListStudentMoneySIQuaterResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ListStudentToClass")]
		public ISingleResult<ListStudentToClassResult> ListStudentToClass([Parameter(Name="Semester", DbType="Int")] System.Nullable<int> semester, [Parameter(Name="ShoolYear", DbType="VarChar(50)")] string shoolYear, [Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), semester, shoolYear, endDate);
			return ((ISingleResult<ListStudentToClassResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ListStudentToClassQuater")]
		public ISingleResult<ListStudentToClassQuaterResult> ListStudentToClassQuater([Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate, [Parameter(Name="Quater", DbType="Int")] System.Nullable<int> quater)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), endDate, quater);
			return ((ISingleResult<ListStudentToClassQuaterResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ListTakeATestSASI")]
		public ISingleResult<ListTakeATestSASIResult> ListTakeATestSASI([Parameter(Name="SASIClassName", DbType="NVarChar(50)")] string sASIClassName, [Parameter(Name="Semester", DbType="Int")] System.Nullable<int> semester, [Parameter(Name="ShoolYear", DbType="VarChar(50)")] string shoolYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sASIClassName, semester, shoolYear);
			return ((ISingleResult<ListTakeATestSASIResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.LoadlookUpEditSASIClass")]
		public ISingleResult<LoadlookUpEditSASIClassResult> LoadlookUpEditSASIClass()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LoadlookUpEditSASIClassResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.LoadSASIClassRetakeTest")]
		public ISingleResult<LoadSASIClassRetakeTestResult> LoadSASIClassRetakeTest()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LoadSASIClassRetakeTestResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.MoneySASITeacher")]
		public ISingleResult<MoneySASITeacherResult> MoneySASITeacher([Parameter(Name="MoneyProctor", DbType="Int")] System.Nullable<int> moneyProctor, [Parameter(Name="MoneyExam", DbType="Int")] System.Nullable<int> moneyExam, [Parameter(Name="Semester", DbType="Int")] System.Nullable<int> semester, [Parameter(Name="ShoolYear", DbType="VarChar(50)")] string shoolYear, [Parameter(Name="StarDate", DbType="DateTime")] System.Nullable<System.DateTime> starDate, [Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moneyProctor, moneyExam, semester, shoolYear, starDate, endDate);
			return ((ISingleResult<MoneySASITeacherResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Receipt")]
		public int Receipt([Parameter(Name="ClassName", DbType="NVarChar(70)")] string className, [Parameter(Name="SubjectName", DbType="NVarChar(70)")] string subjectName, [Parameter(Name="RegisterDay", DbType="DateTime")] System.Nullable<System.DateTime> registerDay, [Parameter(Name="StudentCode", DbType="VarChar(10)")] string studentCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), className, subjectName, registerDay, studentCode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ReceiptManyStudent")]
		public int ReceiptManyStudent([Parameter(Name="ClassName", DbType="NVarChar(70)")] string className, [Parameter(Name="SubjectName", DbType="NVarChar(70)")] string subjectName, [Parameter(Name="RegisterDay", DbType="DateTime")] System.Nullable<System.DateTime> registerDay)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), className, subjectName, registerDay);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.RetestList")]
		public ISingleResult<RetestListResult> RetestList([Parameter(Name="Semester", DbType="Int")] System.Nullable<int> semester, [Parameter(Name="ShoolYear", DbType="VarChar(50)")] string shoolYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), semester, shoolYear);
			return ((ISingleResult<RetestListResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SASIClassEnd")]
		public ISingleResult<SASIClassEndResult> SASIClassEnd()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SASIClassEndResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SearchStudentStudiesAgainsToSubjectName")]
		public int SearchStudentStudiesAgainsToSubjectName([Parameter(Name="SubjectName", DbType="NVarChar(50)")] string subjectName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subjectName);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SelectSASIStudentToSubjectName")]
		public int SelectSASIStudentToSubjectName([Parameter(Name="SubjectName", DbType="NVarChar(50)")] string subjectName, [Parameter(Name="SASIClassName", DbType="NVarChar(50)")] string sASIClassName, [Parameter(Name="StarDate", DbType="DateTime")] System.Nullable<System.DateTime> starDate, [Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subjectName, sASIClassName, starDate, endDate);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SelectStudentToRegister")]
		public ISingleResult<SelectStudentToRegisterResult> SelectStudentToRegister()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SelectStudentToRegisterResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SelectStudentToRegisterToSASIClassName")]
		public ISingleResult<SelectStudentToRegisterToSASIClassNameResult> SelectStudentToRegisterToSASIClassName([Parameter(Name="SASIClassName", DbType="NVarChar(50)")] string sASIClassName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sASIClassName);
			return ((ISingleResult<SelectStudentToRegisterToSASIClassNameResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SelectStudentToSubjectName")]
		public int SelectStudentToSubjectName([Parameter(Name="SubjectName", DbType="NVarChar(50)")] string subjectName, [Parameter(Name="StarDate", DbType="DateTime")] System.Nullable<System.DateTime> starDate, [Parameter(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subjectName, starDate, endDate);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ShowSASIClassesNotYet")]
		public ISingleResult<ShowSASIClassesNotYetResult> ShowSASIClassesNotYet()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ShowSASIClassesNotYetResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.LoadGridViewStudent")]
		public int LoadGridViewStudent()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.LoadGridViewStudent1")]
		public ISingleResult<LoadGridViewStudent1Result> LoadGridViewStudent1()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LoadGridViewStudent1Result>)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.Classes")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ClassCode;
		
		private string _DepartmentCode;
		
		private string _TrainCode;
		
		private string _ClassName;
		
		private System.Nullable<int> _StartYear;
		
		private System.Nullable<int> _EndYear;
		
		private System.Nullable<int> _Total;
		
		private string _Description;
		
		private EntitySet<StudentToRegister> _StudentToRegisters;
		
		private EntityRef<Train> _Train;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassCodeChanging(string value);
    partial void OnClassCodeChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnTrainCodeChanging(string value);
    partial void OnTrainCodeChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnStartYearChanging(System.Nullable<int> value);
    partial void OnStartYearChanged();
    partial void OnEndYearChanging(System.Nullable<int> value);
    partial void OnEndYearChanged();
    partial void OnTotalChanging(System.Nullable<int> value);
    partial void OnTotalChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Class()
		{
			this._StudentToRegisters = new EntitySet<StudentToRegister>(new Action<StudentToRegister>(this.attach_StudentToRegisters), new Action<StudentToRegister>(this.detach_StudentToRegisters));
			this._Train = default(EntityRef<Train>);
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[Column(Storage="_ClassCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ClassCode
		{
			get
			{
				return this._ClassCode;
			}
			set
			{
				if ((this._ClassCode != value))
				{
					this.OnClassCodeChanging(value);
					this.SendPropertyChanging();
					this._ClassCode = value;
					this.SendPropertyChanged("ClassCode");
					this.OnClassCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DepartmentCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TrainCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TrainCode
		{
			get
			{
				return this._TrainCode;
			}
			set
			{
				if ((this._TrainCode != value))
				{
					if (this._Train.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainCode = value;
					this.SendPropertyChanged("TrainCode");
					this.OnTrainCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._ClassName = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
		[Column(Storage="_StartYear", DbType="Int")]
		public System.Nullable<int> StartYear
		{
			get
			{
				return this._StartYear;
			}
			set
			{
				if ((this._StartYear != value))
				{
					this.OnStartYearChanging(value);
					this.SendPropertyChanging();
					this._StartYear = value;
					this.SendPropertyChanged("StartYear");
					this.OnStartYearChanged();
				}
			}
		}
		
		[Column(Storage="_EndYear", DbType="Int")]
		public System.Nullable<int> EndYear
		{
			get
			{
				return this._EndYear;
			}
			set
			{
				if ((this._EndYear != value))
				{
					this.OnEndYearChanging(value);
					this.SendPropertyChanging();
					this._EndYear = value;
					this.SendPropertyChanged("EndYear");
					this.OnEndYearChanged();
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Int")]
		public System.Nullable<int> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="Class_StudentToRegister", Storage="_StudentToRegisters", OtherKey="ClassCode")]
		public EntitySet<StudentToRegister> StudentToRegisters
		{
			get
			{
				return this._StudentToRegisters;
			}
			set
			{
				this._StudentToRegisters.Assign(value);
			}
		}
		
		[Association(Name="Train_Class", Storage="_Train", ThisKey="TrainCode", IsForeignKey=true)]
		public Train Train
		{
			get
			{
				return this._Train.Entity;
			}
			set
			{
				Train previousValue = this._Train.Entity;
				if (((previousValue != value) 
							|| (this._Train.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Train.Entity = null;
						previousValue.Classes.Remove(this);
					}
					this._Train.Entity = value;
					if ((value != null))
					{
						value.Classes.Add(this);
						this._TrainCode = value.TrainCode;
					}
					else
					{
						this._TrainCode = default(string);
					}
					this.SendPropertyChanged("Train");
				}
			}
		}
		
		[Association(Name="Department_Class", Storage="_Department", ThisKey="DepartmentCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Classes.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Classes.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentToRegisters(StudentToRegister entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_StudentToRegisters(StudentToRegister entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
	}
	
	[Table(Name="dbo.Trains")]
	public partial class Train : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainCode;
		
		private string _TrainName;
		
		private string _TrainType;
		
		private System.Nullable<int> _TotalClass;
		
		private string _Description;
		
		private EntitySet<Class> _Classes;
		
		private EntitySet<SubjectTrain> _SubjectTrains;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainCodeChanging(string value);
    partial void OnTrainCodeChanged();
    partial void OnTrainNameChanging(string value);
    partial void OnTrainNameChanged();
    partial void OnTrainTypeChanging(string value);
    partial void OnTrainTypeChanged();
    partial void OnTotalClassChanging(System.Nullable<int> value);
    partial void OnTotalClassChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Train()
		{
			this._Classes = new EntitySet<Class>(new Action<Class>(this.attach_Classes), new Action<Class>(this.detach_Classes));
			this._SubjectTrains = new EntitySet<SubjectTrain>(new Action<SubjectTrain>(this.attach_SubjectTrains), new Action<SubjectTrain>(this.detach_SubjectTrains));
			OnCreated();
		}
		
		[Column(Storage="_TrainCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainCode
		{
			get
			{
				return this._TrainCode;
			}
			set
			{
				if ((this._TrainCode != value))
				{
					this.OnTrainCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainCode = value;
					this.SendPropertyChanged("TrainCode");
					this.OnTrainCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TrainName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string TrainName
		{
			get
			{
				return this._TrainName;
			}
			set
			{
				if ((this._TrainName != value))
				{
					this.OnTrainNameChanging(value);
					this.SendPropertyChanging();
					this._TrainName = value;
					this.SendPropertyChanged("TrainName");
					this.OnTrainNameChanged();
				}
			}
		}
		
		[Column(Storage="_TrainType", DbType="NVarChar(30)")]
		public string TrainType
		{
			get
			{
				return this._TrainType;
			}
			set
			{
				if ((this._TrainType != value))
				{
					this.OnTrainTypeChanging(value);
					this.SendPropertyChanging();
					this._TrainType = value;
					this.SendPropertyChanged("TrainType");
					this.OnTrainTypeChanged();
				}
			}
		}
		
		[Column(Storage="_TotalClass", DbType="Int")]
		public System.Nullable<int> TotalClass
		{
			get
			{
				return this._TotalClass;
			}
			set
			{
				if ((this._TotalClass != value))
				{
					this.OnTotalClassChanging(value);
					this.SendPropertyChanging();
					this._TotalClass = value;
					this.SendPropertyChanged("TotalClass");
					this.OnTotalClassChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="Train_Class", Storage="_Classes", OtherKey="TrainCode")]
		public EntitySet<Class> Classes
		{
			get
			{
				return this._Classes;
			}
			set
			{
				this._Classes.Assign(value);
			}
		}
		
		[Association(Name="Train_SubjectTrain", Storage="_SubjectTrains", OtherKey="TrainCode")]
		public EntitySet<SubjectTrain> SubjectTrains
		{
			get
			{
				return this._SubjectTrains;
			}
			set
			{
				this._SubjectTrains.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Train = this;
		}
		
		private void detach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Train = null;
		}
		
		private void attach_SubjectTrains(SubjectTrain entity)
		{
			this.SendPropertyChanging();
			entity.Train = this;
		}
		
		private void detach_SubjectTrains(SubjectTrain entity)
		{
			this.SendPropertyChanging();
			entity.Train = null;
		}
	}
	
	[Table(Name="dbo.TrainingInformations")]
	public partial class TrainingInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InfoID;
		
		private string _InfoName;
		
		private string _TrainType;
		
		private string _TrainingType;
		
		private string _LearningType;
		
		private EntitySet<SettingMoneyRate> _SettingMoneyRates;
		
		private EntitySet<SASIClass> _SASIClasses;
		
		private EntitySet<MoneyRatesByClassSASI> _MoneyRatesByClassSASIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInfoIDChanging(int value);
    partial void OnInfoIDChanged();
    partial void OnInfoNameChanging(string value);
    partial void OnInfoNameChanged();
    partial void OnTrainTypeChanging(string value);
    partial void OnTrainTypeChanged();
    partial void OnTrainingTypeChanging(string value);
    partial void OnTrainingTypeChanged();
    partial void OnLearningTypeChanging(string value);
    partial void OnLearningTypeChanged();
    #endregion
		
		public TrainingInformation()
		{
			this._SettingMoneyRates = new EntitySet<SettingMoneyRate>(new Action<SettingMoneyRate>(this.attach_SettingMoneyRates), new Action<SettingMoneyRate>(this.detach_SettingMoneyRates));
			this._SASIClasses = new EntitySet<SASIClass>(new Action<SASIClass>(this.attach_SASIClasses), new Action<SASIClass>(this.detach_SASIClasses));
			this._MoneyRatesByClassSASIs = new EntitySet<MoneyRatesByClassSASI>(new Action<MoneyRatesByClassSASI>(this.attach_MoneyRatesByClassSASIs), new Action<MoneyRatesByClassSASI>(this.detach_MoneyRatesByClassSASIs));
			OnCreated();
		}
		
		[Column(Storage="_InfoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InfoID
		{
			get
			{
				return this._InfoID;
			}
			set
			{
				if ((this._InfoID != value))
				{
					this.OnInfoIDChanging(value);
					this.SendPropertyChanging();
					this._InfoID = value;
					this.SendPropertyChanged("InfoID");
					this.OnInfoIDChanged();
				}
			}
		}
		
		[Column(Storage="_InfoName", DbType="NVarChar(50)")]
		public string InfoName
		{
			get
			{
				return this._InfoName;
			}
			set
			{
				if ((this._InfoName != value))
				{
					this.OnInfoNameChanging(value);
					this.SendPropertyChanging();
					this._InfoName = value;
					this.SendPropertyChanged("InfoName");
					this.OnInfoNameChanged();
				}
			}
		}
		
		[Column(Storage="_TrainType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrainType
		{
			get
			{
				return this._TrainType;
			}
			set
			{
				if ((this._TrainType != value))
				{
					this.OnTrainTypeChanging(value);
					this.SendPropertyChanging();
					this._TrainType = value;
					this.SendPropertyChanged("TrainType");
					this.OnTrainTypeChanged();
				}
			}
		}
		
		[Column(Storage="_TrainingType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrainingType
		{
			get
			{
				return this._TrainingType;
			}
			set
			{
				if ((this._TrainingType != value))
				{
					this.OnTrainingTypeChanging(value);
					this.SendPropertyChanging();
					this._TrainingType = value;
					this.SendPropertyChanged("TrainingType");
					this.OnTrainingTypeChanged();
				}
			}
		}
		
		[Column(Storage="_LearningType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LearningType
		{
			get
			{
				return this._LearningType;
			}
			set
			{
				if ((this._LearningType != value))
				{
					this.OnLearningTypeChanging(value);
					this.SendPropertyChanging();
					this._LearningType = value;
					this.SendPropertyChanged("LearningType");
					this.OnLearningTypeChanged();
				}
			}
		}
		
		[Association(Name="TrainingInformation_SettingMoneyRate", Storage="_SettingMoneyRates", OtherKey="InfoID")]
		public EntitySet<SettingMoneyRate> SettingMoneyRates
		{
			get
			{
				return this._SettingMoneyRates;
			}
			set
			{
				this._SettingMoneyRates.Assign(value);
			}
		}
		
		[Association(Name="TrainingInformation_SASIClass", Storage="_SASIClasses", OtherKey="InfoID")]
		public EntitySet<SASIClass> SASIClasses
		{
			get
			{
				return this._SASIClasses;
			}
			set
			{
				this._SASIClasses.Assign(value);
			}
		}
		
		[Association(Name="TrainingInformation_MoneyRatesByClassSASI", Storage="_MoneyRatesByClassSASIs", OtherKey="InfoID")]
		public EntitySet<MoneyRatesByClassSASI> MoneyRatesByClassSASIs
		{
			get
			{
				return this._MoneyRatesByClassSASIs;
			}
			set
			{
				this._MoneyRatesByClassSASIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SettingMoneyRates(SettingMoneyRate entity)
		{
			this.SendPropertyChanging();
			entity.TrainingInformation = this;
		}
		
		private void detach_SettingMoneyRates(SettingMoneyRate entity)
		{
			this.SendPropertyChanging();
			entity.TrainingInformation = null;
		}
		
		private void attach_SASIClasses(SASIClass entity)
		{
			this.SendPropertyChanging();
			entity.TrainingInformation = this;
		}
		
		private void detach_SASIClasses(SASIClass entity)
		{
			this.SendPropertyChanging();
			entity.TrainingInformation = null;
		}
		
		private void attach_MoneyRatesByClassSASIs(MoneyRatesByClassSASI entity)
		{
			this.SendPropertyChanging();
			entity.TrainingInformation = this;
		}
		
		private void detach_MoneyRatesByClassSASIs(MoneyRatesByClassSASI entity)
		{
			this.SendPropertyChanging();
			entity.TrainingInformation = null;
		}
	}
	
	[Table(Name="dbo.Teachers")]
	public partial class Teacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TeacherCode;
		
		private string _DepartmentCode;
		
		private string _DegreeCode;
		
		private string _TeacherName;
		
		private string _PhoneNumber;
		
		private string _Birthday;
		
		private string _Gender;
		
		private string _Email;
		
		private string _HomeTown;
		
		private string _Description;
		
		private EntitySet<SASIClass> _SASIClasses;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeacherCodeChanging(string value);
    partial void OnTeacherCodeChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnDegreeCodeChanging(string value);
    partial void OnDegreeCodeChanged();
    partial void OnTeacherNameChanging(string value);
    partial void OnTeacherNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnBirthdayChanging(string value);
    partial void OnBirthdayChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHomeTownChanging(string value);
    partial void OnHomeTownChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Teacher()
		{
			this._SASIClasses = new EntitySet<SASIClass>(new Action<SASIClass>(this.attach_SASIClasses), new Action<SASIClass>(this.detach_SASIClasses));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[Column(Storage="_TeacherCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TeacherCode
		{
			get
			{
				return this._TeacherCode;
			}
			set
			{
				if ((this._TeacherCode != value))
				{
					this.OnTeacherCodeChanging(value);
					this.SendPropertyChanging();
					this._TeacherCode = value;
					this.SendPropertyChanged("TeacherCode");
					this.OnTeacherCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DepartmentCode", DbType="VarChar(10)")]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DegreeCode", DbType="VarChar(10)")]
		public string DegreeCode
		{
			get
			{
				return this._DegreeCode;
			}
			set
			{
				if ((this._DegreeCode != value))
				{
					this.OnDegreeCodeChanging(value);
					this.SendPropertyChanging();
					this._DegreeCode = value;
					this.SendPropertyChanged("DegreeCode");
					this.OnDegreeCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TeacherName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this.OnTeacherNameChanging(value);
					this.SendPropertyChanging();
					this._TeacherName = value;
					this.SendPropertyChanged("TeacherName");
					this.OnTeacherNameChanged();
				}
			}
		}
		
		[Column(Storage="_PhoneNumber", DbType="VarChar(15)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Birthday", DbType="VarChar(15)")]
		public string Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[Column(Storage="_Gender", DbType="NVarChar(5)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_HomeTown", DbType="NVarChar(200)")]
		public string HomeTown
		{
			get
			{
				return this._HomeTown;
			}
			set
			{
				if ((this._HomeTown != value))
				{
					this.OnHomeTownChanging(value);
					this.SendPropertyChanging();
					this._HomeTown = value;
					this.SendPropertyChanged("HomeTown");
					this.OnHomeTownChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="Teacher_SASIClass", Storage="_SASIClasses", OtherKey="TeacherCode")]
		public EntitySet<SASIClass> SASIClasses
		{
			get
			{
				return this._SASIClasses;
			}
			set
			{
				this._SASIClasses.Assign(value);
			}
		}
		
		[Association(Name="Department_Teacher", Storage="_Department", ThisKey="DepartmentCode", IsForeignKey=true, DeleteRule="CASCADE")]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Teachers.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Teachers.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SASIClasses(SASIClass entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_SASIClasses(SASIClass entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
	}
	
	[Table(Name="dbo.SubjectTrains")]
	public partial class SubjectTrain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubjectTrainID;
		
		private string _TrainCode;
		
		private string _SubjectCode;
		
		private System.Nullable<int> _TheoryNumber;
		
		private System.Nullable<int> _PracticeNumber;
		
		private System.Nullable<int> _SectionTheory;
		
		private System.Nullable<int> _SectionPractice;
		
		private string _SubjectSplitName;
		
		private EntityRef<Train> _Train;
		
		private EntityRef<Subject> _Subject;
		
		private EntityRef<SettingSubjectSplit> _SettingSubjectSplit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectTrainIDChanging(int value);
    partial void OnSubjectTrainIDChanged();
    partial void OnTrainCodeChanging(string value);
    partial void OnTrainCodeChanged();
    partial void OnSubjectCodeChanging(string value);
    partial void OnSubjectCodeChanged();
    partial void OnTheoryNumberChanging(System.Nullable<int> value);
    partial void OnTheoryNumberChanged();
    partial void OnPracticeNumberChanging(System.Nullable<int> value);
    partial void OnPracticeNumberChanged();
    partial void OnSectionTheoryChanging(System.Nullable<int> value);
    partial void OnSectionTheoryChanged();
    partial void OnSectionPracticeChanging(System.Nullable<int> value);
    partial void OnSectionPracticeChanged();
    partial void OnSubjectSplitNameChanging(string value);
    partial void OnSubjectSplitNameChanged();
    #endregion
		
		public SubjectTrain()
		{
			this._Train = default(EntityRef<Train>);
			this._Subject = default(EntityRef<Subject>);
			this._SettingSubjectSplit = default(EntityRef<SettingSubjectSplit>);
			OnCreated();
		}
		
		[Column(Storage="_SubjectTrainID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubjectTrainID
		{
			get
			{
				return this._SubjectTrainID;
			}
			set
			{
				if ((this._SubjectTrainID != value))
				{
					this.OnSubjectTrainIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectTrainID = value;
					this.SendPropertyChanged("SubjectTrainID");
					this.OnSubjectTrainIDChanged();
				}
			}
		}
		
		[Column(Storage="_TrainCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TrainCode
		{
			get
			{
				return this._TrainCode;
			}
			set
			{
				if ((this._TrainCode != value))
				{
					if (this._Train.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainCode = value;
					this.SendPropertyChanged("TrainCode");
					this.OnTrainCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SubjectCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SubjectCode
		{
			get
			{
				return this._SubjectCode;
			}
			set
			{
				if ((this._SubjectCode != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectCodeChanging(value);
					this.SendPropertyChanging();
					this._SubjectCode = value;
					this.SendPropertyChanged("SubjectCode");
					this.OnSubjectCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TheoryNumber", DbType="Int")]
		public System.Nullable<int> TheoryNumber
		{
			get
			{
				return this._TheoryNumber;
			}
			set
			{
				if ((this._TheoryNumber != value))
				{
					this.OnTheoryNumberChanging(value);
					this.SendPropertyChanging();
					this._TheoryNumber = value;
					this.SendPropertyChanged("TheoryNumber");
					this.OnTheoryNumberChanged();
				}
			}
		}
		
		[Column(Storage="_PracticeNumber", DbType="Int")]
		public System.Nullable<int> PracticeNumber
		{
			get
			{
				return this._PracticeNumber;
			}
			set
			{
				if ((this._PracticeNumber != value))
				{
					this.OnPracticeNumberChanging(value);
					this.SendPropertyChanging();
					this._PracticeNumber = value;
					this.SendPropertyChanged("PracticeNumber");
					this.OnPracticeNumberChanged();
				}
			}
		}
		
		[Column(Storage="_SectionTheory", DbType="Int")]
		public System.Nullable<int> SectionTheory
		{
			get
			{
				return this._SectionTheory;
			}
			set
			{
				if ((this._SectionTheory != value))
				{
					this.OnSectionTheoryChanging(value);
					this.SendPropertyChanging();
					this._SectionTheory = value;
					this.SendPropertyChanged("SectionTheory");
					this.OnSectionTheoryChanged();
				}
			}
		}
		
		[Column(Storage="_SectionPractice", DbType="Int")]
		public System.Nullable<int> SectionPractice
		{
			get
			{
				return this._SectionPractice;
			}
			set
			{
				if ((this._SectionPractice != value))
				{
					this.OnSectionPracticeChanging(value);
					this.SendPropertyChanging();
					this._SectionPractice = value;
					this.SendPropertyChanged("SectionPractice");
					this.OnSectionPracticeChanged();
				}
			}
		}
		
		[Column(Storage="_SubjectSplitName", DbType="NVarChar(50)")]
		public string SubjectSplitName
		{
			get
			{
				return this._SubjectSplitName;
			}
			set
			{
				if ((this._SubjectSplitName != value))
				{
					if (this._SettingSubjectSplit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectSplitNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectSplitName = value;
					this.SendPropertyChanged("SubjectSplitName");
					this.OnSubjectSplitNameChanged();
				}
			}
		}
		
		[Association(Name="Train_SubjectTrain", Storage="_Train", ThisKey="TrainCode", IsForeignKey=true)]
		public Train Train
		{
			get
			{
				return this._Train.Entity;
			}
			set
			{
				Train previousValue = this._Train.Entity;
				if (((previousValue != value) 
							|| (this._Train.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Train.Entity = null;
						previousValue.SubjectTrains.Remove(this);
					}
					this._Train.Entity = value;
					if ((value != null))
					{
						value.SubjectTrains.Add(this);
						this._TrainCode = value.TrainCode;
					}
					else
					{
						this._TrainCode = default(string);
					}
					this.SendPropertyChanged("Train");
				}
			}
		}
		
		[Association(Name="Subject_SubjectTrain", Storage="_Subject", ThisKey="SubjectCode", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.SubjectTrains.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.SubjectTrains.Add(this);
						this._SubjectCode = value.SubjectCode;
					}
					else
					{
						this._SubjectCode = default(string);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		[Association(Name="SettingSubjectSplit_SubjectTrain", Storage="_SettingSubjectSplit", ThisKey="SubjectSplitName", IsForeignKey=true)]
		public SettingSubjectSplit SettingSubjectSplit
		{
			get
			{
				return this._SettingSubjectSplit.Entity;
			}
			set
			{
				SettingSubjectSplit previousValue = this._SettingSubjectSplit.Entity;
				if (((previousValue != value) 
							|| (this._SettingSubjectSplit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SettingSubjectSplit.Entity = null;
						previousValue.SubjectTrains.Remove(this);
					}
					this._SettingSubjectSplit.Entity = value;
					if ((value != null))
					{
						value.SubjectTrains.Add(this);
						this._SubjectSplitName = value.SubjectSplitName;
					}
					else
					{
						this._SubjectSplitName = default(string);
					}
					this.SendPropertyChanged("SettingSubjectSplit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Subjects")]
	public partial class Subject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SubjectCode;
		
		private string _SubjectName;
		
		private string _Description;
		
		private EntitySet<SubjectTrain> _SubjectTrains;
		
		private EntitySet<StudentToRegister> _StudentToRegisters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectCodeChanging(string value);
    partial void OnSubjectCodeChanged();
    partial void OnSubjectNameChanging(string value);
    partial void OnSubjectNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Subject()
		{
			this._SubjectTrains = new EntitySet<SubjectTrain>(new Action<SubjectTrain>(this.attach_SubjectTrains), new Action<SubjectTrain>(this.detach_SubjectTrains));
			this._StudentToRegisters = new EntitySet<StudentToRegister>(new Action<StudentToRegister>(this.attach_StudentToRegisters), new Action<StudentToRegister>(this.detach_StudentToRegisters));
			OnCreated();
		}
		
		[Column(Storage="_SubjectCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SubjectCode
		{
			get
			{
				return this._SubjectCode;
			}
			set
			{
				if ((this._SubjectCode != value))
				{
					this.OnSubjectCodeChanging(value);
					this.SendPropertyChanging();
					this._SubjectCode = value;
					this.SendPropertyChanged("SubjectCode");
					this.OnSubjectCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this.OnSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectName = value;
					this.SendPropertyChanged("SubjectName");
					this.OnSubjectNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="Subject_SubjectTrain", Storage="_SubjectTrains", OtherKey="SubjectCode")]
		public EntitySet<SubjectTrain> SubjectTrains
		{
			get
			{
				return this._SubjectTrains;
			}
			set
			{
				this._SubjectTrains.Assign(value);
			}
		}
		
		[Association(Name="Subject_StudentToRegister", Storage="_StudentToRegisters", OtherKey="SubjectCode")]
		public EntitySet<StudentToRegister> StudentToRegisters
		{
			get
			{
				return this._StudentToRegisters;
			}
			set
			{
				this._StudentToRegisters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubjectTrains(SubjectTrain entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_SubjectTrains(SubjectTrain entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_StudentToRegisters(StudentToRegister entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_StudentToRegisters(StudentToRegister entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
	}
	
	[Table(Name="dbo.StudentToRegisters")]
	public partial class StudentToRegister : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentRG;
		
		private string _StudentCode;
		
		private string _ClassCode;
		
		private string _SubjectCode;
		
		private int _SASIClassID;
		
		private string _StudentName;
		
		private System.DateTime _BirthDay;
		
		private System.DateTime _RegisterDay;
		
		private int _NumberStudy;
		
		private System.Nullable<double> _MoneySA;
		
		private System.Nullable<double> _MoneySI;
		
		private string _Description;
		
		private System.Nullable<int> _Receipt;
		
		private System.Nullable<double> _MoneyRetakeATestEnd;
		
		private System.Nullable<double> _MoneyRetakeATestCenter;
		
		private string _PeoplePay;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Subject> _Subject;
		
		private EntityRef<SASIClass> _SASIClass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentRGChanging(int value);
    partial void OnStudentRGChanged();
    partial void OnStudentCodeChanging(string value);
    partial void OnStudentCodeChanged();
    partial void OnClassCodeChanging(string value);
    partial void OnClassCodeChanged();
    partial void OnSubjectCodeChanging(string value);
    partial void OnSubjectCodeChanged();
    partial void OnSASIClassIDChanging(int value);
    partial void OnSASIClassIDChanged();
    partial void OnStudentNameChanging(string value);
    partial void OnStudentNameChanged();
    partial void OnBirthDayChanging(System.DateTime value);
    partial void OnBirthDayChanged();
    partial void OnRegisterDayChanging(System.DateTime value);
    partial void OnRegisterDayChanged();
    partial void OnNumberStudyChanging(int value);
    partial void OnNumberStudyChanged();
    partial void OnMoneySAChanging(System.Nullable<double> value);
    partial void OnMoneySAChanged();
    partial void OnMoneySIChanging(System.Nullable<double> value);
    partial void OnMoneySIChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnReceiptChanging(System.Nullable<int> value);
    partial void OnReceiptChanged();
    partial void OnMoneyRetakeATestEndChanging(System.Nullable<double> value);
    partial void OnMoneyRetakeATestEndChanged();
    partial void OnMoneyRetakeATestCenterChanging(System.Nullable<double> value);
    partial void OnMoneyRetakeATestCenterChanged();
    partial void OnPeoplePayChanging(string value);
    partial void OnPeoplePayChanged();
    #endregion
		
		public StudentToRegister()
		{
			this._Class = default(EntityRef<Class>);
			this._Subject = default(EntityRef<Subject>);
			this._SASIClass = default(EntityRef<SASIClass>);
			OnCreated();
		}
		
		[Column(Storage="_StudentRG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentRG
		{
			get
			{
				return this._StudentRG;
			}
			set
			{
				if ((this._StudentRG != value))
				{
					this.OnStudentRGChanging(value);
					this.SendPropertyChanging();
					this._StudentRG = value;
					this.SendPropertyChanged("StudentRG");
					this.OnStudentRGChanged();
				}
			}
		}
		
		[Column(Storage="_StudentCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this.OnStudentCodeChanging(value);
					this.SendPropertyChanging();
					this._StudentCode = value;
					this.SendPropertyChanged("StudentCode");
					this.OnStudentCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ClassCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ClassCode
		{
			get
			{
				return this._ClassCode;
			}
			set
			{
				if ((this._ClassCode != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassCodeChanging(value);
					this.SendPropertyChanging();
					this._ClassCode = value;
					this.SendPropertyChanged("ClassCode");
					this.OnClassCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SubjectCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SubjectCode
		{
			get
			{
				return this._SubjectCode;
			}
			set
			{
				if ((this._SubjectCode != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectCodeChanging(value);
					this.SendPropertyChanging();
					this._SubjectCode = value;
					this.SendPropertyChanged("SubjectCode");
					this.OnSubjectCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SASIClassID", DbType="Int NOT NULL")]
		public int SASIClassID
		{
			get
			{
				return this._SASIClassID;
			}
			set
			{
				if ((this._SASIClassID != value))
				{
					if (this._SASIClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSASIClassIDChanging(value);
					this.SendPropertyChanging();
					this._SASIClassID = value;
					this.SendPropertyChanged("SASIClassID");
					this.OnSASIClassIDChanged();
				}
			}
		}
		
		[Column(Storage="_StudentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this.OnStudentNameChanging(value);
					this.SendPropertyChanging();
					this._StudentName = value;
					this.SendPropertyChanged("StudentName");
					this.OnStudentNameChanged();
				}
			}
		}
		
		[Column(Storage="_BirthDay", DbType="DateTime NOT NULL")]
		public System.DateTime BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[Column(Storage="_RegisterDay", DbType="DateTime NOT NULL")]
		public System.DateTime RegisterDay
		{
			get
			{
				return this._RegisterDay;
			}
			set
			{
				if ((this._RegisterDay != value))
				{
					this.OnRegisterDayChanging(value);
					this.SendPropertyChanging();
					this._RegisterDay = value;
					this.SendPropertyChanged("RegisterDay");
					this.OnRegisterDayChanged();
				}
			}
		}
		
		[Column(Storage="_NumberStudy", DbType="Int NOT NULL")]
		public int NumberStudy
		{
			get
			{
				return this._NumberStudy;
			}
			set
			{
				if ((this._NumberStudy != value))
				{
					this.OnNumberStudyChanging(value);
					this.SendPropertyChanging();
					this._NumberStudy = value;
					this.SendPropertyChanged("NumberStudy");
					this.OnNumberStudyChanged();
				}
			}
		}
		
		[Column(Storage="_MoneySA", DbType="Float")]
		public System.Nullable<double> MoneySA
		{
			get
			{
				return this._MoneySA;
			}
			set
			{
				if ((this._MoneySA != value))
				{
					this.OnMoneySAChanging(value);
					this.SendPropertyChanging();
					this._MoneySA = value;
					this.SendPropertyChanged("MoneySA");
					this.OnMoneySAChanged();
				}
			}
		}
		
		[Column(Storage="_MoneySI", DbType="Float")]
		public System.Nullable<double> MoneySI
		{
			get
			{
				return this._MoneySI;
			}
			set
			{
				if ((this._MoneySI != value))
				{
					this.OnMoneySIChanging(value);
					this.SendPropertyChanging();
					this._MoneySI = value;
					this.SendPropertyChanged("MoneySI");
					this.OnMoneySIChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Receipt", DbType="Int")]
		public System.Nullable<int> Receipt
		{
			get
			{
				return this._Receipt;
			}
			set
			{
				if ((this._Receipt != value))
				{
					this.OnReceiptChanging(value);
					this.SendPropertyChanging();
					this._Receipt = value;
					this.SendPropertyChanged("Receipt");
					this.OnReceiptChanged();
				}
			}
		}
		
		[Column(Storage="_MoneyRetakeATestEnd", DbType="Float")]
		public System.Nullable<double> MoneyRetakeATestEnd
		{
			get
			{
				return this._MoneyRetakeATestEnd;
			}
			set
			{
				if ((this._MoneyRetakeATestEnd != value))
				{
					this.OnMoneyRetakeATestEndChanging(value);
					this.SendPropertyChanging();
					this._MoneyRetakeATestEnd = value;
					this.SendPropertyChanged("MoneyRetakeATestEnd");
					this.OnMoneyRetakeATestEndChanged();
				}
			}
		}
		
		[Column(Storage="_MoneyRetakeATestCenter", DbType="Float")]
		public System.Nullable<double> MoneyRetakeATestCenter
		{
			get
			{
				return this._MoneyRetakeATestCenter;
			}
			set
			{
				if ((this._MoneyRetakeATestCenter != value))
				{
					this.OnMoneyRetakeATestCenterChanging(value);
					this.SendPropertyChanging();
					this._MoneyRetakeATestCenter = value;
					this.SendPropertyChanged("MoneyRetakeATestCenter");
					this.OnMoneyRetakeATestCenterChanged();
				}
			}
		}
		
		[Column(Storage="_PeoplePay", DbType="NVarChar(50)")]
		public string PeoplePay
		{
			get
			{
				return this._PeoplePay;
			}
			set
			{
				if ((this._PeoplePay != value))
				{
					this.OnPeoplePayChanging(value);
					this.SendPropertyChanging();
					this._PeoplePay = value;
					this.SendPropertyChanged("PeoplePay");
					this.OnPeoplePayChanged();
				}
			}
		}
		
		[Association(Name="Class_StudentToRegister", Storage="_Class", ThisKey="ClassCode", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.StudentToRegisters.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.StudentToRegisters.Add(this);
						this._ClassCode = value.ClassCode;
					}
					else
					{
						this._ClassCode = default(string);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[Association(Name="Subject_StudentToRegister", Storage="_Subject", ThisKey="SubjectCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.StudentToRegisters.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.StudentToRegisters.Add(this);
						this._SubjectCode = value.SubjectCode;
					}
					else
					{
						this._SubjectCode = default(string);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		[Association(Name="SASIClass_StudentToRegister", Storage="_SASIClass", ThisKey="SASIClassID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SASIClass SASIClass
		{
			get
			{
				return this._SASIClass.Entity;
			}
			set
			{
				SASIClass previousValue = this._SASIClass.Entity;
				if (((previousValue != value) 
							|| (this._SASIClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SASIClass.Entity = null;
						previousValue.StudentToRegisters.Remove(this);
					}
					this._SASIClass.Entity = value;
					if ((value != null))
					{
						value.StudentToRegisters.Add(this);
						this._SASIClassID = value.SASIClassID;
					}
					else
					{
						this._SASIClassID = default(int);
					}
					this.SendPropertyChanged("SASIClass");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Students")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StudentCode;
		
		private string _FullName;
		
		private string _Birthday;
		
		private string _Gender;
		
		private string _PriorityCode;
		
		private string _PhoneNumber;
		
		private string _HomeTown;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentCodeChanging(string value);
    partial void OnStudentCodeChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnBirthdayChanging(string value);
    partial void OnBirthdayChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnPriorityCodeChanging(string value);
    partial void OnPriorityCodeChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnHomeTownChanging(string value);
    partial void OnHomeTownChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Student()
		{
			OnCreated();
		}
		
		[Column(Storage="_StudentCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this.OnStudentCodeChanging(value);
					this.SendPropertyChanging();
					this._StudentCode = value;
					this.SendPropertyChanged("StudentCode");
					this.OnStudentCodeChanged();
				}
			}
		}
		
		[Column(Storage="_FullName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[Column(Storage="_Birthday", DbType="VarChar(15)")]
		public string Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[Column(Storage="_Gender", DbType="NVarChar(5)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[Column(Storage="_PriorityCode", DbType="VarChar(10)")]
		public string PriorityCode
		{
			get
			{
				return this._PriorityCode;
			}
			set
			{
				if ((this._PriorityCode != value))
				{
					this.OnPriorityCodeChanging(value);
					this.SendPropertyChanging();
					this._PriorityCode = value;
					this.SendPropertyChanged("PriorityCode");
					this.OnPriorityCodeChanged();
				}
			}
		}
		
		[Column(Storage="_PhoneNumber", DbType="VarChar(15)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_HomeTown", DbType="NVarChar(200)")]
		public string HomeTown
		{
			get
			{
				return this._HomeTown;
			}
			set
			{
				if ((this._HomeTown != value))
				{
					this.OnHomeTownChanging(value);
					this.SendPropertyChanging();
					this._HomeTown = value;
					this.SendPropertyChanged("HomeTown");
					this.OnHomeTownChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SettingSubjectSplits")]
	public partial class SettingSubjectSplit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SubjectSplitName;
		
		private System.Nullable<int> _SectionNumber;
		
		private System.Nullable<int> _TheoryNumber;
		
		private string _TrainingType;
		
		private EntitySet<SubjectTrain> _SubjectTrains;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectSplitNameChanging(string value);
    partial void OnSubjectSplitNameChanged();
    partial void OnSectionNumberChanging(System.Nullable<int> value);
    partial void OnSectionNumberChanged();
    partial void OnTheoryNumberChanging(System.Nullable<int> value);
    partial void OnTheoryNumberChanged();
    partial void OnTrainingTypeChanging(string value);
    partial void OnTrainingTypeChanged();
    #endregion
		
		public SettingSubjectSplit()
		{
			this._SubjectTrains = new EntitySet<SubjectTrain>(new Action<SubjectTrain>(this.attach_SubjectTrains), new Action<SubjectTrain>(this.detach_SubjectTrains));
			OnCreated();
		}
		
		[Column(Storage="_SubjectSplitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SubjectSplitName
		{
			get
			{
				return this._SubjectSplitName;
			}
			set
			{
				if ((this._SubjectSplitName != value))
				{
					this.OnSubjectSplitNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectSplitName = value;
					this.SendPropertyChanged("SubjectSplitName");
					this.OnSubjectSplitNameChanged();
				}
			}
		}
		
		[Column(Storage="_SectionNumber", DbType="Int")]
		public System.Nullable<int> SectionNumber
		{
			get
			{
				return this._SectionNumber;
			}
			set
			{
				if ((this._SectionNumber != value))
				{
					this.OnSectionNumberChanging(value);
					this.SendPropertyChanging();
					this._SectionNumber = value;
					this.SendPropertyChanged("SectionNumber");
					this.OnSectionNumberChanged();
				}
			}
		}
		
		[Column(Storage="_TheoryNumber", DbType="Int")]
		public System.Nullable<int> TheoryNumber
		{
			get
			{
				return this._TheoryNumber;
			}
			set
			{
				if ((this._TheoryNumber != value))
				{
					this.OnTheoryNumberChanging(value);
					this.SendPropertyChanging();
					this._TheoryNumber = value;
					this.SendPropertyChanged("TheoryNumber");
					this.OnTheoryNumberChanged();
				}
			}
		}
		
		[Column(Storage="_TrainingType", DbType="NVarChar(50)")]
		public string TrainingType
		{
			get
			{
				return this._TrainingType;
			}
			set
			{
				if ((this._TrainingType != value))
				{
					this.OnTrainingTypeChanging(value);
					this.SendPropertyChanging();
					this._TrainingType = value;
					this.SendPropertyChanged("TrainingType");
					this.OnTrainingTypeChanged();
				}
			}
		}
		
		[Association(Name="SettingSubjectSplit_SubjectTrain", Storage="_SubjectTrains", OtherKey="SubjectSplitName")]
		public EntitySet<SubjectTrain> SubjectTrains
		{
			get
			{
				return this._SubjectTrains;
			}
			set
			{
				this._SubjectTrains.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubjectTrains(SubjectTrain entity)
		{
			this.SendPropertyChanging();
			entity.SettingSubjectSplit = this;
		}
		
		private void detach_SubjectTrains(SubjectTrain entity)
		{
			this.SendPropertyChanging();
			entity.SettingSubjectSplit = null;
		}
	}
	
	[Table(Name="dbo.SettingMoneyRates")]
	public partial class SettingMoneyRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MoneyRatesID;
		
		private string _MoneyRatesName;
		
		private int _InfoID;
		
		private int _PracticeMoney;
		
		private int _TheoryMoney;
		
		private int _NumberStudy;
		
		private EntityRef<TrainingInformation> _TrainingInformation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMoneyRatesIDChanging(int value);
    partial void OnMoneyRatesIDChanged();
    partial void OnMoneyRatesNameChanging(string value);
    partial void OnMoneyRatesNameChanged();
    partial void OnInfoIDChanging(int value);
    partial void OnInfoIDChanged();
    partial void OnPracticeMoneyChanging(int value);
    partial void OnPracticeMoneyChanged();
    partial void OnTheoryMoneyChanging(int value);
    partial void OnTheoryMoneyChanged();
    partial void OnNumberStudyChanging(int value);
    partial void OnNumberStudyChanged();
    #endregion
		
		public SettingMoneyRate()
		{
			this._TrainingInformation = default(EntityRef<TrainingInformation>);
			OnCreated();
		}
		
		[Column(Storage="_MoneyRatesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MoneyRatesID
		{
			get
			{
				return this._MoneyRatesID;
			}
			set
			{
				if ((this._MoneyRatesID != value))
				{
					this.OnMoneyRatesIDChanging(value);
					this.SendPropertyChanging();
					this._MoneyRatesID = value;
					this.SendPropertyChanged("MoneyRatesID");
					this.OnMoneyRatesIDChanged();
				}
			}
		}
		
		[Column(Storage="_MoneyRatesName", DbType="NVarChar(50)")]
		public string MoneyRatesName
		{
			get
			{
				return this._MoneyRatesName;
			}
			set
			{
				if ((this._MoneyRatesName != value))
				{
					this.OnMoneyRatesNameChanging(value);
					this.SendPropertyChanging();
					this._MoneyRatesName = value;
					this.SendPropertyChanged("MoneyRatesName");
					this.OnMoneyRatesNameChanged();
				}
			}
		}
		
		[Column(Storage="_InfoID", DbType="Int NOT NULL")]
		public int InfoID
		{
			get
			{
				return this._InfoID;
			}
			set
			{
				if ((this._InfoID != value))
				{
					if (this._TrainingInformation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInfoIDChanging(value);
					this.SendPropertyChanging();
					this._InfoID = value;
					this.SendPropertyChanged("InfoID");
					this.OnInfoIDChanged();
				}
			}
		}
		
		[Column(Storage="_PracticeMoney", DbType="Int NOT NULL")]
		public int PracticeMoney
		{
			get
			{
				return this._PracticeMoney;
			}
			set
			{
				if ((this._PracticeMoney != value))
				{
					this.OnPracticeMoneyChanging(value);
					this.SendPropertyChanging();
					this._PracticeMoney = value;
					this.SendPropertyChanged("PracticeMoney");
					this.OnPracticeMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_TheoryMoney", DbType="Int NOT NULL")]
		public int TheoryMoney
		{
			get
			{
				return this._TheoryMoney;
			}
			set
			{
				if ((this._TheoryMoney != value))
				{
					this.OnTheoryMoneyChanging(value);
					this.SendPropertyChanging();
					this._TheoryMoney = value;
					this.SendPropertyChanged("TheoryMoney");
					this.OnTheoryMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_NumberStudy", DbType="Int NOT NULL")]
		public int NumberStudy
		{
			get
			{
				return this._NumberStudy;
			}
			set
			{
				if ((this._NumberStudy != value))
				{
					this.OnNumberStudyChanging(value);
					this.SendPropertyChanging();
					this._NumberStudy = value;
					this.SendPropertyChanged("NumberStudy");
					this.OnNumberStudyChanged();
				}
			}
		}
		
		[Association(Name="TrainingInformation_SettingMoneyRate", Storage="_TrainingInformation", ThisKey="InfoID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrainingInformation TrainingInformation
		{
			get
			{
				return this._TrainingInformation.Entity;
			}
			set
			{
				TrainingInformation previousValue = this._TrainingInformation.Entity;
				if (((previousValue != value) 
							|| (this._TrainingInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrainingInformation.Entity = null;
						previousValue.SettingMoneyRates.Remove(this);
					}
					this._TrainingInformation.Entity = value;
					if ((value != null))
					{
						value.SettingMoneyRates.Add(this);
						this._InfoID = value.InfoID;
					}
					else
					{
						this._InfoID = default(int);
					}
					this.SendPropertyChanged("TrainingInformation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SASIClasses")]
	public partial class SASIClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SASIClassID;
		
		private string _TeacherCode;
		
		private System.Nullable<int> _InfoID;
		
		private string _SASIClassName;
		
		private System.Nullable<int> _Semester;
		
		private string _ShoolYear;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private string _Cadre;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _DateSASIClass;
		
		private EntitySet<StudentToRegister> _StudentToRegisters;
		
		private EntityRef<Teacher> _Teacher;
		
		private EntityRef<TrainingInformation> _TrainingInformation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSASIClassIDChanging(int value);
    partial void OnSASIClassIDChanged();
    partial void OnTeacherCodeChanging(string value);
    partial void OnTeacherCodeChanged();
    partial void OnInfoIDChanging(System.Nullable<int> value);
    partial void OnInfoIDChanged();
    partial void OnSASIClassNameChanging(string value);
    partial void OnSASIClassNameChanged();
    partial void OnSemesterChanging(System.Nullable<int> value);
    partial void OnSemesterChanged();
    partial void OnShoolYearChanging(string value);
    partial void OnShoolYearChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnCadreChanging(string value);
    partial void OnCadreChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnDateSASIClassChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSASIClassChanged();
    #endregion
		
		public SASIClass()
		{
			this._StudentToRegisters = new EntitySet<StudentToRegister>(new Action<StudentToRegister>(this.attach_StudentToRegisters), new Action<StudentToRegister>(this.detach_StudentToRegisters));
			this._Teacher = default(EntityRef<Teacher>);
			this._TrainingInformation = default(EntityRef<TrainingInformation>);
			OnCreated();
		}
		
		[Column(Storage="_SASIClassID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SASIClassID
		{
			get
			{
				return this._SASIClassID;
			}
			set
			{
				if ((this._SASIClassID != value))
				{
					this.OnSASIClassIDChanging(value);
					this.SendPropertyChanging();
					this._SASIClassID = value;
					this.SendPropertyChanged("SASIClassID");
					this.OnSASIClassIDChanged();
				}
			}
		}
		
		[Column(Storage="_TeacherCode", DbType="VarChar(10)")]
		public string TeacherCode
		{
			get
			{
				return this._TeacherCode;
			}
			set
			{
				if ((this._TeacherCode != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherCodeChanging(value);
					this.SendPropertyChanging();
					this._TeacherCode = value;
					this.SendPropertyChanged("TeacherCode");
					this.OnTeacherCodeChanged();
				}
			}
		}
		
		[Column(Storage="_InfoID", DbType="Int")]
		public System.Nullable<int> InfoID
		{
			get
			{
				return this._InfoID;
			}
			set
			{
				if ((this._InfoID != value))
				{
					if (this._TrainingInformation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInfoIDChanging(value);
					this.SendPropertyChanging();
					this._InfoID = value;
					this.SendPropertyChanged("InfoID");
					this.OnInfoIDChanged();
				}
			}
		}
		
		[Column(Storage="_SASIClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SASIClassName
		{
			get
			{
				return this._SASIClassName;
			}
			set
			{
				if ((this._SASIClassName != value))
				{
					this.OnSASIClassNameChanging(value);
					this.SendPropertyChanging();
					this._SASIClassName = value;
					this.SendPropertyChanged("SASIClassName");
					this.OnSASIClassNameChanged();
				}
			}
		}
		
		[Column(Storage="_Semester", DbType="Int")]
		public System.Nullable<int> Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this.OnSemesterChanging(value);
					this.SendPropertyChanging();
					this._Semester = value;
					this.SendPropertyChanged("Semester");
					this.OnSemesterChanged();
				}
			}
		}
		
		[Column(Storage="_ShoolYear", DbType="VarChar(50)")]
		public string ShoolYear
		{
			get
			{
				return this._ShoolYear;
			}
			set
			{
				if ((this._ShoolYear != value))
				{
					this.OnShoolYearChanging(value);
					this.SendPropertyChanging();
					this._ShoolYear = value;
					this.SendPropertyChanged("ShoolYear");
					this.OnShoolYearChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_Cadre", DbType="NVarChar(50)")]
		public string Cadre
		{
			get
			{
				return this._Cadre;
			}
			set
			{
				if ((this._Cadre != value))
				{
					this.OnCadreChanging(value);
					this.SendPropertyChanging();
					this._Cadre = value;
					this.SendPropertyChanged("Cadre");
					this.OnCadreChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_DateSASIClass", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSASIClass
		{
			get
			{
				return this._DateSASIClass;
			}
			set
			{
				if ((this._DateSASIClass != value))
				{
					this.OnDateSASIClassChanging(value);
					this.SendPropertyChanging();
					this._DateSASIClass = value;
					this.SendPropertyChanged("DateSASIClass");
					this.OnDateSASIClassChanged();
				}
			}
		}
		
		[Association(Name="SASIClass_StudentToRegister", Storage="_StudentToRegisters", OtherKey="SASIClassID")]
		public EntitySet<StudentToRegister> StudentToRegisters
		{
			get
			{
				return this._StudentToRegisters;
			}
			set
			{
				this._StudentToRegisters.Assign(value);
			}
		}
		
		[Association(Name="Teacher_SASIClass", Storage="_Teacher", ThisKey="TeacherCode", IsForeignKey=true, DeleteRule="CASCADE")]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.SASIClasses.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.SASIClasses.Add(this);
						this._TeacherCode = value.TeacherCode;
					}
					else
					{
						this._TeacherCode = default(string);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		[Association(Name="TrainingInformation_SASIClass", Storage="_TrainingInformation", ThisKey="InfoID", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrainingInformation TrainingInformation
		{
			get
			{
				return this._TrainingInformation.Entity;
			}
			set
			{
				TrainingInformation previousValue = this._TrainingInformation.Entity;
				if (((previousValue != value) 
							|| (this._TrainingInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrainingInformation.Entity = null;
						previousValue.SASIClasses.Remove(this);
					}
					this._TrainingInformation.Entity = value;
					if ((value != null))
					{
						value.SASIClasses.Add(this);
						this._InfoID = value.InfoID;
					}
					else
					{
						this._InfoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrainingInformation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentToRegisters(StudentToRegister entity)
		{
			this.SendPropertyChanging();
			entity.SASIClass = this;
		}
		
		private void detach_StudentToRegisters(StudentToRegister entity)
		{
			this.SendPropertyChanging();
			entity.SASIClass = null;
		}
	}
	
	[Table(Name="dbo.MoneyRatesByClassSASIs")]
	public partial class MoneyRatesByClassSASI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MoneyRatesByClassID;
		
		private int _InfoID;
		
		private int _StudentNumberStart;
		
		private int _StudentNumberEnd;
		
		private System.Nullable<double> _TheoryMoney;
		
		private System.Nullable<double> _PracticeMoney;
		
		private string _MoneyRatesName;
		
		private EntityRef<TrainingInformation> _TrainingInformation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMoneyRatesByClassIDChanging(int value);
    partial void OnMoneyRatesByClassIDChanged();
    partial void OnInfoIDChanging(int value);
    partial void OnInfoIDChanged();
    partial void OnStudentNumberStartChanging(int value);
    partial void OnStudentNumberStartChanged();
    partial void OnStudentNumberEndChanging(int value);
    partial void OnStudentNumberEndChanged();
    partial void OnTheoryMoneyChanging(System.Nullable<double> value);
    partial void OnTheoryMoneyChanged();
    partial void OnPracticeMoneyChanging(System.Nullable<double> value);
    partial void OnPracticeMoneyChanged();
    partial void OnMoneyRatesNameChanging(string value);
    partial void OnMoneyRatesNameChanged();
    #endregion
		
		public MoneyRatesByClassSASI()
		{
			this._TrainingInformation = default(EntityRef<TrainingInformation>);
			OnCreated();
		}
		
		[Column(Storage="_MoneyRatesByClassID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MoneyRatesByClassID
		{
			get
			{
				return this._MoneyRatesByClassID;
			}
			set
			{
				if ((this._MoneyRatesByClassID != value))
				{
					this.OnMoneyRatesByClassIDChanging(value);
					this.SendPropertyChanging();
					this._MoneyRatesByClassID = value;
					this.SendPropertyChanged("MoneyRatesByClassID");
					this.OnMoneyRatesByClassIDChanged();
				}
			}
		}
		
		[Column(Storage="_InfoID", DbType="Int NOT NULL")]
		public int InfoID
		{
			get
			{
				return this._InfoID;
			}
			set
			{
				if ((this._InfoID != value))
				{
					if (this._TrainingInformation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInfoIDChanging(value);
					this.SendPropertyChanging();
					this._InfoID = value;
					this.SendPropertyChanged("InfoID");
					this.OnInfoIDChanged();
				}
			}
		}
		
		[Column(Storage="_StudentNumberStart", DbType="Int NOT NULL")]
		public int StudentNumberStart
		{
			get
			{
				return this._StudentNumberStart;
			}
			set
			{
				if ((this._StudentNumberStart != value))
				{
					this.OnStudentNumberStartChanging(value);
					this.SendPropertyChanging();
					this._StudentNumberStart = value;
					this.SendPropertyChanged("StudentNumberStart");
					this.OnStudentNumberStartChanged();
				}
			}
		}
		
		[Column(Storage="_StudentNumberEnd", DbType="Int NOT NULL")]
		public int StudentNumberEnd
		{
			get
			{
				return this._StudentNumberEnd;
			}
			set
			{
				if ((this._StudentNumberEnd != value))
				{
					this.OnStudentNumberEndChanging(value);
					this.SendPropertyChanging();
					this._StudentNumberEnd = value;
					this.SendPropertyChanged("StudentNumberEnd");
					this.OnStudentNumberEndChanged();
				}
			}
		}
		
		[Column(Storage="_TheoryMoney", DbType="Float")]
		public System.Nullable<double> TheoryMoney
		{
			get
			{
				return this._TheoryMoney;
			}
			set
			{
				if ((this._TheoryMoney != value))
				{
					this.OnTheoryMoneyChanging(value);
					this.SendPropertyChanging();
					this._TheoryMoney = value;
					this.SendPropertyChanged("TheoryMoney");
					this.OnTheoryMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_PracticeMoney", DbType="Float")]
		public System.Nullable<double> PracticeMoney
		{
			get
			{
				return this._PracticeMoney;
			}
			set
			{
				if ((this._PracticeMoney != value))
				{
					this.OnPracticeMoneyChanging(value);
					this.SendPropertyChanging();
					this._PracticeMoney = value;
					this.SendPropertyChanged("PracticeMoney");
					this.OnPracticeMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_MoneyRatesName", DbType="NVarChar(100)")]
		public string MoneyRatesName
		{
			get
			{
				return this._MoneyRatesName;
			}
			set
			{
				if ((this._MoneyRatesName != value))
				{
					this.OnMoneyRatesNameChanging(value);
					this.SendPropertyChanging();
					this._MoneyRatesName = value;
					this.SendPropertyChanged("MoneyRatesName");
					this.OnMoneyRatesNameChanged();
				}
			}
		}
		
		[Association(Name="TrainingInformation_MoneyRatesByClassSASI", Storage="_TrainingInformation", ThisKey="InfoID", IsForeignKey=true)]
		public TrainingInformation TrainingInformation
		{
			get
			{
				return this._TrainingInformation.Entity;
			}
			set
			{
				TrainingInformation previousValue = this._TrainingInformation.Entity;
				if (((previousValue != value) 
							|| (this._TrainingInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrainingInformation.Entity = null;
						previousValue.MoneyRatesByClassSASIs.Remove(this);
					}
					this._TrainingInformation.Entity = value;
					if ((value != null))
					{
						value.MoneyRatesByClassSASIs.Add(this);
						this._InfoID = value.InfoID;
					}
					else
					{
						this._InfoID = default(int);
					}
					this.SendPropertyChanged("TrainingInformation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Logins")]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Login()
		{
			OnCreated();
		}
		
		[Column(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Departments")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _PhoneNumber;
		
		private string _Description;
		
		private EntitySet<Class> _Classes;
		
		private EntitySet<Teacher> _Teachers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Department()
		{
			this._Classes = new EntitySet<Class>(new Action<Class>(this.attach_Classes), new Action<Class>(this.detach_Classes));
			this._Teachers = new EntitySet<Teacher>(new Action<Teacher>(this.attach_Teachers), new Action<Teacher>(this.detach_Teachers));
			OnCreated();
		}
		
		[Column(Storage="_DepartmentCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[Column(Storage="_PhoneNumber", DbType="VarChar(15)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="Department_Class", Storage="_Classes", OtherKey="DepartmentCode")]
		public EntitySet<Class> Classes
		{
			get
			{
				return this._Classes;
			}
			set
			{
				this._Classes.Assign(value);
			}
		}
		
		[Association(Name="Department_Teacher", Storage="_Teachers", OtherKey="DepartmentCode")]
		public EntitySet<Teacher> Teachers
		{
			get
			{
				return this._Teachers;
			}
			set
			{
				this._Teachers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Teachers(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Teachers(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[Table(Name="dbo.Configs")]
	public partial class Config : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Dean;
		
		private string _Trainbueau;
		
		private string _MoneyProctor;
		
		private string _MoneyExam;
		
		private string _Rector;
		
		private string _Departmentfinance;
		
		private string _DepartmentTrain;
		
		private string _AssociateDean;
		
		private System.Nullable<int> _RetakeATestEnd;
		
		private System.Nullable<int> _RetakeATestCenter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDeanChanging(string value);
    partial void OnDeanChanged();
    partial void OnTrainbueauChanging(string value);
    partial void OnTrainbueauChanged();
    partial void OnMoneyProctorChanging(string value);
    partial void OnMoneyProctorChanged();
    partial void OnMoneyExamChanging(string value);
    partial void OnMoneyExamChanged();
    partial void OnRectorChanging(string value);
    partial void OnRectorChanged();
    partial void OnDepartmentfinanceChanging(string value);
    partial void OnDepartmentfinanceChanged();
    partial void OnDepartmentTrainChanging(string value);
    partial void OnDepartmentTrainChanged();
    partial void OnAssociateDeanChanging(string value);
    partial void OnAssociateDeanChanged();
    partial void OnRetakeATestEndChanging(System.Nullable<int> value);
    partial void OnRetakeATestEndChanged();
    partial void OnRetakeATestCenterChanging(System.Nullable<int> value);
    partial void OnRetakeATestCenterChanged();
    #endregion
		
		public Config()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Dean", DbType="NVarChar(50)")]
		public string Dean
		{
			get
			{
				return this._Dean;
			}
			set
			{
				if ((this._Dean != value))
				{
					this.OnDeanChanging(value);
					this.SendPropertyChanging();
					this._Dean = value;
					this.SendPropertyChanged("Dean");
					this.OnDeanChanged();
				}
			}
		}
		
		[Column(Storage="_Trainbueau", DbType="NVarChar(50)")]
		public string Trainbueau
		{
			get
			{
				return this._Trainbueau;
			}
			set
			{
				if ((this._Trainbueau != value))
				{
					this.OnTrainbueauChanging(value);
					this.SendPropertyChanging();
					this._Trainbueau = value;
					this.SendPropertyChanged("Trainbueau");
					this.OnTrainbueauChanged();
				}
			}
		}
		
		[Column(Storage="_MoneyProctor", DbType="NVarChar(50)")]
		public string MoneyProctor
		{
			get
			{
				return this._MoneyProctor;
			}
			set
			{
				if ((this._MoneyProctor != value))
				{
					this.OnMoneyProctorChanging(value);
					this.SendPropertyChanging();
					this._MoneyProctor = value;
					this.SendPropertyChanged("MoneyProctor");
					this.OnMoneyProctorChanged();
				}
			}
		}
		
		[Column(Storage="_MoneyExam", DbType="NVarChar(50)")]
		public string MoneyExam
		{
			get
			{
				return this._MoneyExam;
			}
			set
			{
				if ((this._MoneyExam != value))
				{
					this.OnMoneyExamChanging(value);
					this.SendPropertyChanging();
					this._MoneyExam = value;
					this.SendPropertyChanged("MoneyExam");
					this.OnMoneyExamChanged();
				}
			}
		}
		
		[Column(Storage="_Rector", DbType="NVarChar(50)")]
		public string Rector
		{
			get
			{
				return this._Rector;
			}
			set
			{
				if ((this._Rector != value))
				{
					this.OnRectorChanging(value);
					this.SendPropertyChanging();
					this._Rector = value;
					this.SendPropertyChanged("Rector");
					this.OnRectorChanged();
				}
			}
		}
		
		[Column(Storage="_Departmentfinance", DbType="NVarChar(50)")]
		public string Departmentfinance
		{
			get
			{
				return this._Departmentfinance;
			}
			set
			{
				if ((this._Departmentfinance != value))
				{
					this.OnDepartmentfinanceChanging(value);
					this.SendPropertyChanging();
					this._Departmentfinance = value;
					this.SendPropertyChanged("Departmentfinance");
					this.OnDepartmentfinanceChanged();
				}
			}
		}
		
		[Column(Storage="_DepartmentTrain", DbType="NVarChar(50)")]
		public string DepartmentTrain
		{
			get
			{
				return this._DepartmentTrain;
			}
			set
			{
				if ((this._DepartmentTrain != value))
				{
					this.OnDepartmentTrainChanging(value);
					this.SendPropertyChanging();
					this._DepartmentTrain = value;
					this.SendPropertyChanged("DepartmentTrain");
					this.OnDepartmentTrainChanged();
				}
			}
		}
		
		[Column(Storage="_AssociateDean", DbType="NVarChar(50)")]
		public string AssociateDean
		{
			get
			{
				return this._AssociateDean;
			}
			set
			{
				if ((this._AssociateDean != value))
				{
					this.OnAssociateDeanChanging(value);
					this.SendPropertyChanging();
					this._AssociateDean = value;
					this.SendPropertyChanged("AssociateDean");
					this.OnAssociateDeanChanged();
				}
			}
		}
		
		[Column(Storage="_RetakeATestEnd", DbType="Int")]
		public System.Nullable<int> RetakeATestEnd
		{
			get
			{
				return this._RetakeATestEnd;
			}
			set
			{
				if ((this._RetakeATestEnd != value))
				{
					this.OnRetakeATestEndChanging(value);
					this.SendPropertyChanging();
					this._RetakeATestEnd = value;
					this.SendPropertyChanged("RetakeATestEnd");
					this.OnRetakeATestEndChanged();
				}
			}
		}
		
		[Column(Storage="_RetakeATestCenter", DbType="Int")]
		public System.Nullable<int> RetakeATestCenter
		{
			get
			{
				return this._RetakeATestCenter;
			}
			set
			{
				if ((this._RetakeATestCenter != value))
				{
					this.OnRetakeATestCenterChanging(value);
					this.SendPropertyChanging();
					this._RetakeATestCenter = value;
					this.SendPropertyChanged("RetakeATestCenter");
					this.OnRetakeATestCenterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class CountSubjectTrainIDResult
	{
		
		private System.Nullable<int> _Column1;
		
		public CountSubjectTrainIDResult()
		{
		}
		
		[Column(Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class StudentTimeStudyResult
	{
		
		private string _StudentCode;
		
		private string _StudentName;
		
		private string _SubjectName;
		
		private string _subjectCode;
		
		private System.Nullable<int> _NumberTimeStudy;
		
		public StudentTimeStudyResult()
		{
		}
		
		[Column(Storage="_StudentCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[Column(Storage="_StudentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[Column(Storage="_subjectCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string subjectCode
		{
			get
			{
				return this._subjectCode;
			}
			set
			{
				if ((this._subjectCode != value))
				{
					this._subjectCode = value;
				}
			}
		}
		
		[Column(Storage="_NumberTimeStudy", DbType="Int")]
		public System.Nullable<int> NumberTimeStudy
		{
			get
			{
				return this._NumberTimeStudy;
			}
			set
			{
				if ((this._NumberTimeStudy != value))
				{
					this._NumberTimeStudy = value;
				}
			}
		}
	}
	
	public partial class GeneralReceiptMoneyResult
	{
		
		private string _row_number;
		
		private string _StudentCode;
		
		private string _StudentName;
		
		private string _ClassName;
		
		private string _SubjectName;
		
		private System.Nullable<int> _Receipt;
		
		private System.Nullable<int> _MoneySA;
		
		private System.Nullable<int> _MoneySI;
		
		private System.Nullable<int> _MoneyRetakeATestEnd;
		
		private System.Nullable<int> _MoneyRetakeATestCenter;
		
		private System.Nullable<int> _total;
		
		public GeneralReceiptMoneyResult()
		{
		}
		
		[Column(Storage="_row_number", DbType="VarChar(7)")]
		public string row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this._row_number = value;
				}
			}
		}
		
		[Column(Storage="_StudentCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[Column(Storage="_StudentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[Column(Storage="_Receipt", DbType="Int")]
		public System.Nullable<int> Receipt
		{
			get
			{
				return this._Receipt;
			}
			set
			{
				if ((this._Receipt != value))
				{
					this._Receipt = value;
				}
			}
		}
		
		[Column(Storage="_MoneySA", DbType="Int")]
		public System.Nullable<int> MoneySA
		{
			get
			{
				return this._MoneySA;
			}
			set
			{
				if ((this._MoneySA != value))
				{
					this._MoneySA = value;
				}
			}
		}
		
		[Column(Storage="_MoneySI", DbType="Int")]
		public System.Nullable<int> MoneySI
		{
			get
			{
				return this._MoneySI;
			}
			set
			{
				if ((this._MoneySI != value))
				{
					this._MoneySI = value;
				}
			}
		}
		
		[Column(Storage="_MoneyRetakeATestEnd", DbType="Int")]
		public System.Nullable<int> MoneyRetakeATestEnd
		{
			get
			{
				return this._MoneyRetakeATestEnd;
			}
			set
			{
				if ((this._MoneyRetakeATestEnd != value))
				{
					this._MoneyRetakeATestEnd = value;
				}
			}
		}
		
		[Column(Storage="_MoneyRetakeATestCenter", DbType="Int")]
		public System.Nullable<int> MoneyRetakeATestCenter
		{
			get
			{
				return this._MoneyRetakeATestCenter;
			}
			set
			{
				if ((this._MoneyRetakeATestCenter != value))
				{
					this._MoneyRetakeATestCenter = value;
				}
			}
		}
		
		[Column(Storage="_total", DbType="Int")]
		public System.Nullable<int> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this._total = value;
				}
			}
		}
	}
	
	public partial class GeneralReceiptMoneyQuaterResult
	{
		
		private string _row_number;
		
		private string _StudentCode;
		
		private string _StudentName;
		
		private string _ClassName;
		
		private string _SubjectName;
		
		private System.Nullable<int> _Receipt;
		
		private System.Nullable<int> _MoneySA;
		
		private System.Nullable<int> _MoneySI;
		
		private System.Nullable<int> _MoneyRetakeATestEnd;
		
		private System.Nullable<int> _MoneyRetakeATestCenter;
		
		private System.Nullable<int> _total;
		
		public GeneralReceiptMoneyQuaterResult()
		{
		}
		
		[Column(Storage="_row_number", DbType="VarChar(7)")]
		public string row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this._row_number = value;
				}
			}
		}
		
		[Column(Storage="_StudentCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[Column(Storage="_StudentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[Column(Storage="_Receipt", DbType="Int")]
		public System.Nullable<int> Receipt
		{
			get
			{
				return this._Receipt;
			}
			set
			{
				if ((this._Receipt != value))
				{
					this._Receipt = value;
				}
			}
		}
		
		[Column(Storage="_MoneySA", DbType="Int")]
		public System.Nullable<int> MoneySA
		{
			get
			{
				return this._MoneySA;
			}
			set
			{
				if ((this._MoneySA != value))
				{
					this._MoneySA = value;
				}
			}
		}
		
		[Column(Storage="_MoneySI", DbType="Int")]
		public System.Nullable<int> MoneySI
		{
			get
			{
				return this._MoneySI;
			}
			set
			{
				if ((this._MoneySI != value))
				{
					this._MoneySI = value;
				}
			}
		}
		
		[Column(Storage="_MoneyRetakeATestEnd", DbType="Int")]
		public System.Nullable<int> MoneyRetakeATestEnd
		{
			get
			{
				return this._MoneyRetakeATestEnd;
			}
			set
			{
				if ((this._MoneyRetakeATestEnd != value))
				{
					this._MoneyRetakeATestEnd = value;
				}
			}
		}
		
		[Column(Storage="_MoneyRetakeATestCenter", DbType="Int")]
		public System.Nullable<int> MoneyRetakeATestCenter
		{
			get
			{
				return this._MoneyRetakeATestCenter;
			}
			set
			{
				if ((this._MoneyRetakeATestCenter != value))
				{
					this._MoneyRetakeATestCenter = value;
				}
			}
		}
		
		[Column(Storage="_total", DbType="Int")]
		public System.Nullable<int> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this._total = value;
				}
			}
		}
	}
	
	public partial class GeneraMoneySASIClassResult
	{
		
		private string _row_number;
		
		private string _TrainName;
		
		private string _ClassName;
		
		private System.Nullable<int> _NumberMoney;
		
		private string _Description;
		
		public GeneraMoneySASIClassResult()
		{
		}
		
		[Column(Storage="_row_number", DbType="VarChar(7)")]
		public string row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this._row_number = value;
				}
			}
		}
		
		[Column(Storage="_TrainName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string TrainName
		{
			get
			{
				return this._TrainName;
			}
			set
			{
				if ((this._TrainName != value))
				{
					this._TrainName = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_NumberMoney", DbType="Int")]
		public System.Nullable<int> NumberMoney
		{
			get
			{
				return this._NumberMoney;
			}
			set
			{
				if ((this._NumberMoney != value))
				{
					this._NumberMoney = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	public partial class GeneraMoneySASIClassQuaterResult
	{
		
		private string _row_number;
		
		private string _TrainName;
		
		private string _ClassName;
		
		private System.Nullable<int> _NumberMoney;
		
		private string _Description;
		
		public GeneraMoneySASIClassQuaterResult()
		{
		}
		
		[Column(Storage="_row_number", DbType="VarChar(7)")]
		public string row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this._row_number = value;
				}
			}
		}
		
		[Column(Storage="_TrainName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string TrainName
		{
			get
			{
				return this._TrainName;
			}
			set
			{
				if ((this._TrainName != value))
				{
					this._TrainName = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_NumberMoney", DbType="Int")]
		public System.Nullable<int> NumberMoney
		{
			get
			{
				return this._NumberMoney;
			}
			set
			{
				if ((this._NumberMoney != value))
				{
					this._NumberMoney = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	public partial class GeneraMoneySASITeacherResult
	{
		
		private string _row_number;
		
		private string _TeacherName;
		
		private string _ClassName;
		
		private string _TrainName;
		
		private System.Nullable<int> _NumberStudent;
		
		private System.Nullable<int> _CreditTheory;
		
		private System.Nullable<int> _Creditpractice;
		
		private string _SubjectName;
		
		private System.Nullable<int> _MoneySASI;
		
		private System.Nullable<int> _MoneyProctor;
		
		private System.Nullable<int> _MoneyExam;
		
		private System.Nullable<int> _PlusMoney;
		
		private System.Nullable<int> _TotalMoneySubject;
		
		public GeneraMoneySASITeacherResult()
		{
		}
		
		[Column(Storage="_row_number", DbType="VarChar(7)")]
		public string row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this._row_number = value;
				}
			}
		}
		
		[Column(Storage="_TeacherName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_TrainName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string TrainName
		{
			get
			{
				return this._TrainName;
			}
			set
			{
				if ((this._TrainName != value))
				{
					this._TrainName = value;
				}
			}
		}
		
		[Column(Storage="_NumberStudent", DbType="Int")]
		public System.Nullable<int> NumberStudent
		{
			get
			{
				return this._NumberStudent;
			}
			set
			{
				if ((this._NumberStudent != value))
				{
					this._NumberStudent = value;
				}
			}
		}
		
		[Column(Storage="_CreditTheory", DbType="Int")]
		public System.Nullable<int> CreditTheory
		{
			get
			{
				return this._CreditTheory;
			}
			set
			{
				if ((this._CreditTheory != value))
				{
					this._CreditTheory = value;
				}
			}
		}
		
		[Column(Storage="_Creditpractice", DbType="Int")]
		public System.Nullable<int> Creditpractice
		{
			get
			{
				return this._Creditpractice;
			}
			set
			{
				if ((this._Creditpractice != value))
				{
					this._Creditpractice = value;
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[Column(Storage="_MoneySASI", DbType="Int")]
		public System.Nullable<int> MoneySASI
		{
			get
			{
				return this._MoneySASI;
			}
			set
			{
				if ((this._MoneySASI != value))
				{
					this._MoneySASI = value;
				}
			}
		}
		
		[Column(Storage="_MoneyProctor", DbType="Int")]
		public System.Nullable<int> MoneyProctor
		{
			get
			{
				return this._MoneyProctor;
			}
			set
			{
				if ((this._MoneyProctor != value))
				{
					this._MoneyProctor = value;
				}
			}
		}
		
		[Column(Storage="_MoneyExam", DbType="Int")]
		public System.Nullable<int> MoneyExam
		{
			get
			{
				return this._MoneyExam;
			}
			set
			{
				if ((this._MoneyExam != value))
				{
					this._MoneyExam = value;
				}
			}
		}
		
		[Column(Storage="_PlusMoney", DbType="Int")]
		public System.Nullable<int> PlusMoney
		{
			get
			{
				return this._PlusMoney;
			}
			set
			{
				if ((this._PlusMoney != value))
				{
					this._PlusMoney = value;
				}
			}
		}
		
		[Column(Storage="_TotalMoneySubject", DbType="Int")]
		public System.Nullable<int> TotalMoneySubject
		{
			get
			{
				return this._TotalMoneySubject;
			}
			set
			{
				if ((this._TotalMoneySubject != value))
				{
					this._TotalMoneySubject = value;
				}
			}
		}
	}
	
	public partial class GetTrainNameResult
	{
		
		private string _TrainCode;
		
		private string _TrainName;
		
		public GetTrainNameResult()
		{
		}
		
		[Column(Storage="_TrainCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TrainCode
		{
			get
			{
				return this._TrainCode;
			}
			set
			{
				if ((this._TrainCode != value))
				{
					this._TrainCode = value;
				}
			}
		}
		
		[Column(Storage="_TrainName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string TrainName
		{
			get
			{
				return this._TrainName;
			}
			set
			{
				if ((this._TrainName != value))
				{
					this._TrainName = value;
				}
			}
		}
	}
	
	public partial class ListMoneySASIResult
	{
		
		private string _row_number;
		
		private string _StudentName;
		
		private string _ClassName;
		
		private string _SubjectName;
		
		private System.Nullable<int> _TheoryNumber;
		
		private System.Nullable<int> _PracticeNumber;
		
		private string _TeacherName;
		
		private System.Nullable<int> _MoneyNumber;
		
		private string _Description;
		
		private string _RegisterDay;
		
		private System.Nullable<int> _Receipt;
		
		public ListMoneySASIResult()
		{
		}
		
		[Column(Storage="_row_number", DbType="VarChar(7)")]
		public string row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this._row_number = value;
				}
			}
		}
		
		[Column(Storage="_StudentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[Column(Storage="_TheoryNumber", DbType="Int")]
		public System.Nullable<int> TheoryNumber
		{
			get
			{
				return this._TheoryNumber;
			}
			set
			{
				if ((this._TheoryNumber != value))
				{
					this._TheoryNumber = value;
				}
			}
		}
		
		[Column(Storage="_PracticeNumber", DbType="Int")]
		public System.Nullable<int> PracticeNumber
		{
			get
			{
				return this._PracticeNumber;
			}
			set
			{
				if ((this._PracticeNumber != value))
				{
					this._PracticeNumber = value;
				}
			}
		}
		
		[Column(Storage="_TeacherName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[Column(Storage="_MoneyNumber", DbType="Int")]
		public System.Nullable<int> MoneyNumber
		{
			get
			{
				return this._MoneyNumber;
			}
			set
			{
				if ((this._MoneyNumber != value))
				{
					this._MoneyNumber = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_RegisterDay", DbType="VarChar(30)")]
		public string RegisterDay
		{
			get
			{
				return this._RegisterDay;
			}
			set
			{
				if ((this._RegisterDay != value))
				{
					this._RegisterDay = value;
				}
			}
		}
		
		[Column(Storage="_Receipt", DbType="Int")]
		public System.Nullable<int> Receipt
		{
			get
			{
				return this._Receipt;
			}
			set
			{
				if ((this._Receipt != value))
				{
					this._Receipt = value;
				}
			}
		}
	}
	
	public partial class ListStudentMoneySIResult
	{
		
		private string _row_number;
		
		private string _StudentCode;
		
		private System.Nullable<int> _Receipt;
		
		private string _StudentName;
		
		private string _TeacherName;
		
		private string _ClassName;
		
		private string _SubjectName;
		
		private System.Nullable<int> _MoneySI;
		
		private System.Nullable<int> _Numbe;
		
		public ListStudentMoneySIResult()
		{
		}
		
		[Column(Storage="_row_number", DbType="VarChar(7)")]
		public string row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this._row_number = value;
				}
			}
		}
		
		[Column(Storage="_StudentCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[Column(Storage="_Receipt", DbType="Int")]
		public System.Nullable<int> Receipt
		{
			get
			{
				return this._Receipt;
			}
			set
			{
				if ((this._Receipt != value))
				{
					this._Receipt = value;
				}
			}
		}
		
		[Column(Storage="_StudentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[Column(Storage="_TeacherName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[Column(Storage="_MoneySI", DbType="Int")]
		public System.Nullable<int> MoneySI
		{
			get
			{
				return this._MoneySI;
			}
			set
			{
				if ((this._MoneySI != value))
				{
					this._MoneySI = value;
				}
			}
		}
		
		[Column(Storage="_Numbe", DbType="Int")]
		public System.Nullable<int> Numbe
		{
			get
			{
				return this._Numbe;
			}
			set
			{
				if ((this._Numbe != value))
				{
					this._Numbe = value;
				}
			}
		}
	}
	
	public partial class ListStudentMoneySILoadComboxSubjectResult
	{
		
		private string _SubjectCode;
		
		private string _SubjectName;
		
		public ListStudentMoneySILoadComboxSubjectResult()
		{
		}
		
		[Column(Storage="_SubjectCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SubjectCode
		{
			get
			{
				return this._SubjectCode;
			}
			set
			{
				if ((this._SubjectCode != value))
				{
					this._SubjectCode = value;
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
	}
	
	public partial class ListStudentMoneySIQuaterResult
	{
		
		private string _row_number;
		
		private string _StudentCode;
		
		private string _StudentName;
		
		private string _ClassName;
		
		private string _SubjectName;
		
		private string _TeacherName;
		
		private System.Nullable<int> _MoneySI;
		
		private System.Nullable<int> _Number;
		
		public ListStudentMoneySIQuaterResult()
		{
		}
		
		[Column(Storage="_row_number", DbType="VarChar(7)")]
		public string row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this._row_number = value;
				}
			}
		}
		
		[Column(Storage="_StudentCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[Column(Storage="_StudentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[Column(Storage="_TeacherName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[Column(Storage="_MoneySI", DbType="Int")]
		public System.Nullable<int> MoneySI
		{
			get
			{
				return this._MoneySI;
			}
			set
			{
				if ((this._MoneySI != value))
				{
					this._MoneySI = value;
				}
			}
		}
		
		[Column(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
	}
	
	public partial class ListStudentToClassResult
	{
		
		private string _row_number;
		
		private System.Nullable<int> _NumberStudent;
		
		private string _ClassName;
		
		private int _SASIClassID;
		
		private System.Nullable<int> _Receipt;
		
		private string _StudentName;
		
		private string _BirthDay;
		
		private string _TrainName;
		
		private string _NumberStudent1;
		
		private string _SubjectName;
		
		private System.Nullable<int> _Creditpractice;
		
		private System.Nullable<int> _CreditTheory;
		
		private System.Nullable<int> _MoneySASI;
		
		private System.Nullable<int> _PlusMoney;
		
		public ListStudentToClassResult()
		{
		}
		
		[Column(Storage="_row_number", DbType="VarChar(7)")]
		public string row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this._row_number = value;
				}
			}
		}
		
		[Column(Storage="_NumberStudent", DbType="Int")]
		public System.Nullable<int> NumberStudent
		{
			get
			{
				return this._NumberStudent;
			}
			set
			{
				if ((this._NumberStudent != value))
				{
					this._NumberStudent = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_SASIClassID", DbType="Int NOT NULL")]
		public int SASIClassID
		{
			get
			{
				return this._SASIClassID;
			}
			set
			{
				if ((this._SASIClassID != value))
				{
					this._SASIClassID = value;
				}
			}
		}
		
		[Column(Storage="_Receipt", DbType="Int")]
		public System.Nullable<int> Receipt
		{
			get
			{
				return this._Receipt;
			}
			set
			{
				if ((this._Receipt != value))
				{
					this._Receipt = value;
				}
			}
		}
		
		[Column(Storage="_StudentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[Column(Storage="_BirthDay", DbType="VarChar(30)")]
		public string BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this._BirthDay = value;
				}
			}
		}
		
		[Column(Storage="_TrainName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string TrainName
		{
			get
			{
				return this._TrainName;
			}
			set
			{
				if ((this._TrainName != value))
				{
					this._TrainName = value;
				}
			}
		}
		
		[Column(Storage="_NumberStudent1", DbType="VarChar(7)")]
		public string NumberStudent1
		{
			get
			{
				return this._NumberStudent1;
			}
			set
			{
				if ((this._NumberStudent1 != value))
				{
					this._NumberStudent1 = value;
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[Column(Storage="_Creditpractice", DbType="Int")]
		public System.Nullable<int> Creditpractice
		{
			get
			{
				return this._Creditpractice;
			}
			set
			{
				if ((this._Creditpractice != value))
				{
					this._Creditpractice = value;
				}
			}
		}
		
		[Column(Storage="_CreditTheory", DbType="Int")]
		public System.Nullable<int> CreditTheory
		{
			get
			{
				return this._CreditTheory;
			}
			set
			{
				if ((this._CreditTheory != value))
				{
					this._CreditTheory = value;
				}
			}
		}
		
		[Column(Storage="_MoneySASI", DbType="Int")]
		public System.Nullable<int> MoneySASI
		{
			get
			{
				return this._MoneySASI;
			}
			set
			{
				if ((this._MoneySASI != value))
				{
					this._MoneySASI = value;
				}
			}
		}
		
		[Column(Storage="_PlusMoney", DbType="Int")]
		public System.Nullable<int> PlusMoney
		{
			get
			{
				return this._PlusMoney;
			}
			set
			{
				if ((this._PlusMoney != value))
				{
					this._PlusMoney = value;
				}
			}
		}
	}
	
	public partial class ListStudentToClassQuaterResult
	{
		
		private string _row_number;
		
		private System.Nullable<int> _NumberStudent;
		
		private string _ClassName;
		
		private int _SASIClassID;
		
		private System.Nullable<int> _Receipt;
		
		private string _StudentName;
		
		private string _BirthDay;
		
		private string _TrainName;
		
		private string _NumberStudent1;
		
		private string _SubjectName;
		
		private System.Nullable<int> _Creditpractice;
		
		private System.Nullable<int> _CreditTheory;
		
		private System.Nullable<int> _MoneySASI;
		
		private System.Nullable<int> _PlusMoney;
		
		public ListStudentToClassQuaterResult()
		{
		}
		
		[Column(Storage="_row_number", DbType="VarChar(7)")]
		public string row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this._row_number = value;
				}
			}
		}
		
		[Column(Storage="_NumberStudent", DbType="Int")]
		public System.Nullable<int> NumberStudent
		{
			get
			{
				return this._NumberStudent;
			}
			set
			{
				if ((this._NumberStudent != value))
				{
					this._NumberStudent = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_SASIClassID", DbType="Int NOT NULL")]
		public int SASIClassID
		{
			get
			{
				return this._SASIClassID;
			}
			set
			{
				if ((this._SASIClassID != value))
				{
					this._SASIClassID = value;
				}
			}
		}
		
		[Column(Storage="_Receipt", DbType="Int")]
		public System.Nullable<int> Receipt
		{
			get
			{
				return this._Receipt;
			}
			set
			{
				if ((this._Receipt != value))
				{
					this._Receipt = value;
				}
			}
		}
		
		[Column(Storage="_StudentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[Column(Storage="_BirthDay", DbType="VarChar(30)")]
		public string BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this._BirthDay = value;
				}
			}
		}
		
		[Column(Storage="_TrainName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string TrainName
		{
			get
			{
				return this._TrainName;
			}
			set
			{
				if ((this._TrainName != value))
				{
					this._TrainName = value;
				}
			}
		}
		
		[Column(Storage="_NumberStudent1", DbType="VarChar(7)")]
		public string NumberStudent1
		{
			get
			{
				return this._NumberStudent1;
			}
			set
			{
				if ((this._NumberStudent1 != value))
				{
					this._NumberStudent1 = value;
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[Column(Storage="_Creditpractice", DbType="Int")]
		public System.Nullable<int> Creditpractice
		{
			get
			{
				return this._Creditpractice;
			}
			set
			{
				if ((this._Creditpractice != value))
				{
					this._Creditpractice = value;
				}
			}
		}
		
		[Column(Storage="_CreditTheory", DbType="Int")]
		public System.Nullable<int> CreditTheory
		{
			get
			{
				return this._CreditTheory;
			}
			set
			{
				if ((this._CreditTheory != value))
				{
					this._CreditTheory = value;
				}
			}
		}
		
		[Column(Storage="_MoneySASI", DbType="Int")]
		public System.Nullable<int> MoneySASI
		{
			get
			{
				return this._MoneySASI;
			}
			set
			{
				if ((this._MoneySASI != value))
				{
					this._MoneySASI = value;
				}
			}
		}
		
		[Column(Storage="_PlusMoney", DbType="Int")]
		public System.Nullable<int> PlusMoney
		{
			get
			{
				return this._PlusMoney;
			}
			set
			{
				if ((this._PlusMoney != value))
				{
					this._PlusMoney = value;
				}
			}
		}
	}
	
	public partial class ListTakeATestSASIResult
	{
		
		private string _row_number;
		
		private System.Nullable<int> _Receipt;
		
		private string _StudentCode;
		
		private string _StudentName;
		
		private string _BirthDay;
		
		private string _ClassName;
		
		private string _SubjectName;
		
		private System.Nullable<int> _NumberCredit;
		
		private System.Nullable<int> _MoneySASI;
		
		private string _StartDayStudy;
		
		private string _EndDayStudy;
		
		public ListTakeATestSASIResult()
		{
		}
		
		[Column(Storage="_row_number", DbType="VarChar(7)")]
		public string row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this._row_number = value;
				}
			}
		}
		
		[Column(Storage="_Receipt", DbType="Int")]
		public System.Nullable<int> Receipt
		{
			get
			{
				return this._Receipt;
			}
			set
			{
				if ((this._Receipt != value))
				{
					this._Receipt = value;
				}
			}
		}
		
		[Column(Storage="_StudentCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[Column(Storage="_StudentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[Column(Storage="_BirthDay", DbType="VarChar(30)")]
		public string BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this._BirthDay = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[Column(Storage="_NumberCredit", DbType="Int")]
		public System.Nullable<int> NumberCredit
		{
			get
			{
				return this._NumberCredit;
			}
			set
			{
				if ((this._NumberCredit != value))
				{
					this._NumberCredit = value;
				}
			}
		}
		
		[Column(Storage="_MoneySASI", DbType="Int")]
		public System.Nullable<int> MoneySASI
		{
			get
			{
				return this._MoneySASI;
			}
			set
			{
				if ((this._MoneySASI != value))
				{
					this._MoneySASI = value;
				}
			}
		}
		
		[Column(Storage="_StartDayStudy", DbType="VarChar(30)")]
		public string StartDayStudy
		{
			get
			{
				return this._StartDayStudy;
			}
			set
			{
				if ((this._StartDayStudy != value))
				{
					this._StartDayStudy = value;
				}
			}
		}
		
		[Column(Storage="_EndDayStudy", DbType="VarChar(30)")]
		public string EndDayStudy
		{
			get
			{
				return this._EndDayStudy;
			}
			set
			{
				if ((this._EndDayStudy != value))
				{
					this._EndDayStudy = value;
				}
			}
		}
	}
	
	public partial class LoadlookUpEditSASIClassResult
	{
		
		private int _SASIClassID;
		
		private string _SASIClassName;
		
		private string _Status;
		
		private string _DateSASIClass;
		
		public LoadlookUpEditSASIClassResult()
		{
		}
		
		[Column(Storage="_SASIClassID", DbType="Int NOT NULL")]
		public int SASIClassID
		{
			get
			{
				return this._SASIClassID;
			}
			set
			{
				if ((this._SASIClassID != value))
				{
					this._SASIClassID = value;
				}
			}
		}
		
		[Column(Storage="_SASIClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SASIClassName
		{
			get
			{
				return this._SASIClassName;
			}
			set
			{
				if ((this._SASIClassName != value))
				{
					this._SASIClassName = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Storage="_DateSASIClass", DbType="VarChar(30)")]
		public string DateSASIClass
		{
			get
			{
				return this._DateSASIClass;
			}
			set
			{
				if ((this._DateSASIClass != value))
				{
					this._DateSASIClass = value;
				}
			}
		}
	}
	
	public partial class LoadSASIClassRetakeTestResult
	{
		
		private string _SASIClassName;
		
		private string _Status;
		
		private System.Nullable<int> _Semester;
		
		private string _ShoolYear;
		
		private System.Nullable<System.DateTime> _DateSASIClass;
		
		private int _SASIClassID;
		
		public LoadSASIClassRetakeTestResult()
		{
		}
		
		[Column(Storage="_SASIClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SASIClassName
		{
			get
			{
				return this._SASIClassName;
			}
			set
			{
				if ((this._SASIClassName != value))
				{
					this._SASIClassName = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Storage="_Semester", DbType="Int")]
		public System.Nullable<int> Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this._Semester = value;
				}
			}
		}
		
		[Column(Storage="_ShoolYear", DbType="VarChar(50)")]
		public string ShoolYear
		{
			get
			{
				return this._ShoolYear;
			}
			set
			{
				if ((this._ShoolYear != value))
				{
					this._ShoolYear = value;
				}
			}
		}
		
		[Column(Storage="_DateSASIClass", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSASIClass
		{
			get
			{
				return this._DateSASIClass;
			}
			set
			{
				if ((this._DateSASIClass != value))
				{
					this._DateSASIClass = value;
				}
			}
		}
		
		[Column(Storage="_SASIClassID", DbType="Int NOT NULL")]
		public int SASIClassID
		{
			get
			{
				return this._SASIClassID;
			}
			set
			{
				if ((this._SASIClassID != value))
				{
					this._SASIClassID = value;
				}
			}
		}
	}
	
	public partial class MoneySASITeacherResult
	{
		
		private string _row_number;
		
		private string _TeacherName;
		
		private System.Nullable<int> _TotalMoneySubject;
		
		public MoneySASITeacherResult()
		{
		}
		
		[Column(Storage="_row_number", DbType="VarChar(7)")]
		public string row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this._row_number = value;
				}
			}
		}
		
		[Column(Storage="_TeacherName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[Column(Storage="_TotalMoneySubject", DbType="Int")]
		public System.Nullable<int> TotalMoneySubject
		{
			get
			{
				return this._TotalMoneySubject;
			}
			set
			{
				if ((this._TotalMoneySubject != value))
				{
					this._TotalMoneySubject = value;
				}
			}
		}
	}
	
	public partial class RetestListResult
	{
		
		private string _row_number;
		
		private string _StudentName;
		
		private string _ClassName;
		
		private string _SubjectName;
		
		private string _TeacherName;
		
		private System.Nullable<int> _MoneyRetake;
		
		private string _LearningType;
		
		private string _RegisterDay;
		
		private System.Nullable<int> _Receipt;
		
		public RetestListResult()
		{
		}
		
		[Column(Storage="_row_number", DbType="VarChar(7)")]
		public string row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this._row_number = value;
				}
			}
		}
		
		[Column(Storage="_StudentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[Column(Storage="_TeacherName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[Column(Storage="_MoneyRetake", DbType="Int")]
		public System.Nullable<int> MoneyRetake
		{
			get
			{
				return this._MoneyRetake;
			}
			set
			{
				if ((this._MoneyRetake != value))
				{
					this._MoneyRetake = value;
				}
			}
		}
		
		[Column(Storage="_LearningType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LearningType
		{
			get
			{
				return this._LearningType;
			}
			set
			{
				if ((this._LearningType != value))
				{
					this._LearningType = value;
				}
			}
		}
		
		[Column(Storage="_RegisterDay", DbType="VarChar(30)")]
		public string RegisterDay
		{
			get
			{
				return this._RegisterDay;
			}
			set
			{
				if ((this._RegisterDay != value))
				{
					this._RegisterDay = value;
				}
			}
		}
		
		[Column(Storage="_Receipt", DbType="Int")]
		public System.Nullable<int> Receipt
		{
			get
			{
				return this._Receipt;
			}
			set
			{
				if ((this._Receipt != value))
				{
					this._Receipt = value;
				}
			}
		}
	}
	
	public partial class SASIClassEndResult
	{
		
		private string _SASIClassName;
		
		private string _TeacherName;
		
		private string _SASIClassName1;
		
		private System.Nullable<int> _Semester;
		
		private string _ShoolYear;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _DateSASIClass;
		
		public SASIClassEndResult()
		{
		}
		
		[Column(Storage="_SASIClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SASIClassName
		{
			get
			{
				return this._SASIClassName;
			}
			set
			{
				if ((this._SASIClassName != value))
				{
					this._SASIClassName = value;
				}
			}
		}
		
		[Column(Storage="_TeacherName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[Column(Storage="_SASIClassName1", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SASIClassName1
		{
			get
			{
				return this._SASIClassName1;
			}
			set
			{
				if ((this._SASIClassName1 != value))
				{
					this._SASIClassName1 = value;
				}
			}
		}
		
		[Column(Storage="_Semester", DbType="Int")]
		public System.Nullable<int> Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this._Semester = value;
				}
			}
		}
		
		[Column(Storage="_ShoolYear", DbType="VarChar(50)")]
		public string ShoolYear
		{
			get
			{
				return this._ShoolYear;
			}
			set
			{
				if ((this._ShoolYear != value))
				{
					this._ShoolYear = value;
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_DateSASIClass", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSASIClass
		{
			get
			{
				return this._DateSASIClass;
			}
			set
			{
				if ((this._DateSASIClass != value))
				{
					this._DateSASIClass = value;
				}
			}
		}
	}
	
	public partial class SelectStudentToRegisterResult
	{
		
		private string _StudentCode;
		
		private string _StudentName;
		
		private System.DateTime _BirthDay;
		
		private string _ClassName;
		
		private string _SubjectName;
		
		private string _TeacherName;
		
		private string _SASIClassName;
		
		private int _NumberStudy;
		
		private System.Nullable<double> _MoneySA;
		
		private System.Nullable<double> _MoneySI;
		
		private System.Nullable<int> _Semester;
		
		private string _ShoolYear;
		
		private System.DateTime _RegisterDay;
		
		private string _Description;
		
		public SelectStudentToRegisterResult()
		{
		}
		
		[Column(Storage="_StudentCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[Column(Storage="_StudentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[Column(Storage="_BirthDay", DbType="DateTime NOT NULL")]
		public System.DateTime BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this._BirthDay = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[Column(Storage="_TeacherName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[Column(Storage="_SASIClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SASIClassName
		{
			get
			{
				return this._SASIClassName;
			}
			set
			{
				if ((this._SASIClassName != value))
				{
					this._SASIClassName = value;
				}
			}
		}
		
		[Column(Storage="_NumberStudy", DbType="Int NOT NULL")]
		public int NumberStudy
		{
			get
			{
				return this._NumberStudy;
			}
			set
			{
				if ((this._NumberStudy != value))
				{
					this._NumberStudy = value;
				}
			}
		}
		
		[Column(Storage="_MoneySA", DbType="Float")]
		public System.Nullable<double> MoneySA
		{
			get
			{
				return this._MoneySA;
			}
			set
			{
				if ((this._MoneySA != value))
				{
					this._MoneySA = value;
				}
			}
		}
		
		[Column(Storage="_MoneySI", DbType="Float")]
		public System.Nullable<double> MoneySI
		{
			get
			{
				return this._MoneySI;
			}
			set
			{
				if ((this._MoneySI != value))
				{
					this._MoneySI = value;
				}
			}
		}
		
		[Column(Storage="_Semester", DbType="Int")]
		public System.Nullable<int> Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this._Semester = value;
				}
			}
		}
		
		[Column(Storage="_ShoolYear", DbType="VarChar(50)")]
		public string ShoolYear
		{
			get
			{
				return this._ShoolYear;
			}
			set
			{
				if ((this._ShoolYear != value))
				{
					this._ShoolYear = value;
				}
			}
		}
		
		[Column(Storage="_RegisterDay", DbType="DateTime NOT NULL")]
		public System.DateTime RegisterDay
		{
			get
			{
				return this._RegisterDay;
			}
			set
			{
				if ((this._RegisterDay != value))
				{
					this._RegisterDay = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	public partial class SelectStudentToRegisterToSASIClassNameResult
	{
		
		private string _Mã_sinh_viên;
		
		private string _Tên_sinh_viên;
		
		private System.DateTime _Ngày_sinh;
		
		private string _ClassName;
		
		private string _SubjectName;
		
		private string _SASIClassName;
		
		private int _Số_lần_học;
		
		private System.Nullable<int> _Tiền_học_lại;
		
		private System.Nullable<int> _Tiền_học_cải_thiện;
		
		private System.Nullable<int> _Tiền_thi_lại_giữa_học_kì;
		
		private System.Nullable<int> _Tiền_thi_lại_kết_thúc_học_kì;
		
		private System.Nullable<int> _Receipt;
		
		private System.DateTime _Ngày_đăng_ký_học;
		
		private string _Ghi_chú;
		
		public SelectStudentToRegisterToSASIClassNameResult()
		{
		}
		
		[Column(Storage="_Mã_sinh_viên", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Mã_sinh_viên
		{
			get
			{
				return this._Mã_sinh_viên;
			}
			set
			{
				if ((this._Mã_sinh_viên != value))
				{
					this._Mã_sinh_viên = value;
				}
			}
		}
		
		[Column(Storage="_Tên_sinh_viên", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tên_sinh_viên
		{
			get
			{
				return this._Tên_sinh_viên;
			}
			set
			{
				if ((this._Tên_sinh_viên != value))
				{
					this._Tên_sinh_viên = value;
				}
			}
		}
		
		[Column(Storage="_Ngày_sinh", DbType="DateTime NOT NULL")]
		public System.DateTime Ngày_sinh
		{
			get
			{
				return this._Ngày_sinh;
			}
			set
			{
				if ((this._Ngày_sinh != value))
				{
					this._Ngày_sinh = value;
				}
			}
		}
		
		[Column(Storage="_ClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[Column(Storage="_SubjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[Column(Storage="_SASIClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SASIClassName
		{
			get
			{
				return this._SASIClassName;
			}
			set
			{
				if ((this._SASIClassName != value))
				{
					this._SASIClassName = value;
				}
			}
		}
		
		[Column(Storage="_Số_lần_học", DbType="Int NOT NULL")]
		public int Số_lần_học
		{
			get
			{
				return this._Số_lần_học;
			}
			set
			{
				if ((this._Số_lần_học != value))
				{
					this._Số_lần_học = value;
				}
			}
		}
		
		[Column(Storage="_Tiền_học_lại", DbType="Int")]
		public System.Nullable<int> Tiền_học_lại
		{
			get
			{
				return this._Tiền_học_lại;
			}
			set
			{
				if ((this._Tiền_học_lại != value))
				{
					this._Tiền_học_lại = value;
				}
			}
		}
		
		[Column(Storage="_Tiền_học_cải_thiện", DbType="Int")]
		public System.Nullable<int> Tiền_học_cải_thiện
		{
			get
			{
				return this._Tiền_học_cải_thiện;
			}
			set
			{
				if ((this._Tiền_học_cải_thiện != value))
				{
					this._Tiền_học_cải_thiện = value;
				}
			}
		}
		
		[Column(Storage="_Tiền_thi_lại_giữa_học_kì", DbType="Int")]
		public System.Nullable<int> Tiền_thi_lại_giữa_học_kì
		{
			get
			{
				return this._Tiền_thi_lại_giữa_học_kì;
			}
			set
			{
				if ((this._Tiền_thi_lại_giữa_học_kì != value))
				{
					this._Tiền_thi_lại_giữa_học_kì = value;
				}
			}
		}
		
		[Column(Storage="_Tiền_thi_lại_kết_thúc_học_kì", DbType="Int")]
		public System.Nullable<int> Tiền_thi_lại_kết_thúc_học_kì
		{
			get
			{
				return this._Tiền_thi_lại_kết_thúc_học_kì;
			}
			set
			{
				if ((this._Tiền_thi_lại_kết_thúc_học_kì != value))
				{
					this._Tiền_thi_lại_kết_thúc_học_kì = value;
				}
			}
		}
		
		[Column(Storage="_Receipt", DbType="Int")]
		public System.Nullable<int> Receipt
		{
			get
			{
				return this._Receipt;
			}
			set
			{
				if ((this._Receipt != value))
				{
					this._Receipt = value;
				}
			}
		}
		
		[Column(Storage="_Ngày_đăng_ký_học", DbType="DateTime NOT NULL")]
		public System.DateTime Ngày_đăng_ký_học
		{
			get
			{
				return this._Ngày_đăng_ký_học;
			}
			set
			{
				if ((this._Ngày_đăng_ký_học != value))
				{
					this._Ngày_đăng_ký_học = value;
				}
			}
		}
		
		[Column(Storage="_Ghi_chú", DbType="NVarChar(MAX)")]
		public string Ghi_chú
		{
			get
			{
				return this._Ghi_chú;
			}
			set
			{
				if ((this._Ghi_chú != value))
				{
					this._Ghi_chú = value;
				}
			}
		}
	}
	
	public partial class ShowSASIClassesNotYetResult
	{
		
		private string _SASIClassName;
		
		private System.Nullable<int> _NumberStudent;
		
		private System.Nullable<int> _Total;
		
		public ShowSASIClassesNotYetResult()
		{
		}
		
		[Column(Storage="_SASIClassName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SASIClassName
		{
			get
			{
				return this._SASIClassName;
			}
			set
			{
				if ((this._SASIClassName != value))
				{
					this._SASIClassName = value;
				}
			}
		}
		
		[Column(Storage="_NumberStudent", DbType="Int")]
		public System.Nullable<int> NumberStudent
		{
			get
			{
				return this._NumberStudent;
			}
			set
			{
				if ((this._NumberStudent != value))
				{
					this._NumberStudent = value;
				}
			}
		}
		
		[Column(Storage="_Total", DbType="Int")]
		public System.Nullable<int> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
	
	public partial class LoadGridViewStudent1Result
	{
		
		private string _Ngày_sinh;
		
		private string _Tên_sinh_viên;
		
		private string _Mã_sinh_viên;
		
		public LoadGridViewStudent1Result()
		{
		}
		
		[Column(Storage="_Ngày_sinh", DbType="VarChar(15)")]
		public string Ngày_sinh
		{
			get
			{
				return this._Ngày_sinh;
			}
			set
			{
				if ((this._Ngày_sinh != value))
				{
					this._Ngày_sinh = value;
				}
			}
		}
		
		[Column(Storage="_Tên_sinh_viên", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Tên_sinh_viên
		{
			get
			{
				return this._Tên_sinh_viên;
			}
			set
			{
				if ((this._Tên_sinh_viên != value))
				{
					this._Tên_sinh_viên = value;
				}
			}
		}
		
		[Column(Storage="_Mã_sinh_viên", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Mã_sinh_viên
		{
			get
			{
				return this._Mã_sinh_viên;
			}
			set
			{
				if ((this._Mã_sinh_viên != value))
				{
					this._Mã_sinh_viên = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
