//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ManagementSASI {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private ListMoneyStudentSIDataTable tableListMoneyStudentSI;
        
        private GeneralMoneySASIClassDataTable tableGeneralMoneySASIClass;
        
        private GeneraMoneySASITeacherDataTable tableGeneraMoneySASITeacher;
        
        private ReceiptDataTable tableReceipt;
        
        private ListTakeATestSASIDataTable tableListTakeATestSASI;
        
        private ListStudentToClassDataTable tableListStudentToClass;
        
        private ListMoneyStudentSIQuaterDataTable tableListMoneyStudentSIQuater;
        
        private GeneralReceiptMoneyDataTable tableGeneralReceiptMoney;
        
        private StatisticStudentsDataTable tableStatisticStudents;
        
        private ListMoneySASIDataTable tableListMoneySASI;
        
        private RetestListDataTable tableRetestList;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ListMoneyStudentSI"] != null)) {
                    base.Tables.Add(new ListMoneyStudentSIDataTable(ds.Tables["ListMoneyStudentSI"]));
                }
                if ((ds.Tables["GeneralMoneySASIClass"] != null)) {
                    base.Tables.Add(new GeneralMoneySASIClassDataTable(ds.Tables["GeneralMoneySASIClass"]));
                }
                if ((ds.Tables["GeneraMoneySASITeacher"] != null)) {
                    base.Tables.Add(new GeneraMoneySASITeacherDataTable(ds.Tables["GeneraMoneySASITeacher"]));
                }
                if ((ds.Tables["Receipt"] != null)) {
                    base.Tables.Add(new ReceiptDataTable(ds.Tables["Receipt"]));
                }
                if ((ds.Tables["ListTakeATestSASI"] != null)) {
                    base.Tables.Add(new ListTakeATestSASIDataTable(ds.Tables["ListTakeATestSASI"]));
                }
                if ((ds.Tables["ListStudentToClass"] != null)) {
                    base.Tables.Add(new ListStudentToClassDataTable(ds.Tables["ListStudentToClass"]));
                }
                if ((ds.Tables["ListMoneyStudentSIQuater"] != null)) {
                    base.Tables.Add(new ListMoneyStudentSIQuaterDataTable(ds.Tables["ListMoneyStudentSIQuater"]));
                }
                if ((ds.Tables["GeneralReceiptMoney"] != null)) {
                    base.Tables.Add(new GeneralReceiptMoneyDataTable(ds.Tables["GeneralReceiptMoney"]));
                }
                if ((ds.Tables["StatisticStudents"] != null)) {
                    base.Tables.Add(new StatisticStudentsDataTable(ds.Tables["StatisticStudents"]));
                }
                if ((ds.Tables["ListMoneySASI"] != null)) {
                    base.Tables.Add(new ListMoneySASIDataTable(ds.Tables["ListMoneySASI"]));
                }
                if ((ds.Tables["RetestList"] != null)) {
                    base.Tables.Add(new RetestListDataTable(ds.Tables["RetestList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListMoneyStudentSIDataTable ListMoneyStudentSI {
            get {
                return this.tableListMoneyStudentSI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GeneralMoneySASIClassDataTable GeneralMoneySASIClass {
            get {
                return this.tableGeneralMoneySASIClass;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GeneraMoneySASITeacherDataTable GeneraMoneySASITeacher {
            get {
                return this.tableGeneraMoneySASITeacher;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReceiptDataTable Receipt {
            get {
                return this.tableReceipt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListTakeATestSASIDataTable ListTakeATestSASI {
            get {
                return this.tableListTakeATestSASI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListStudentToClassDataTable ListStudentToClass {
            get {
                return this.tableListStudentToClass;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListMoneyStudentSIQuaterDataTable ListMoneyStudentSIQuater {
            get {
                return this.tableListMoneyStudentSIQuater;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GeneralReceiptMoneyDataTable GeneralReceiptMoney {
            get {
                return this.tableGeneralReceiptMoney;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StatisticStudentsDataTable StatisticStudents {
            get {
                return this.tableStatisticStudents;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListMoneySASIDataTable ListMoneySASI {
            get {
                return this.tableListMoneySASI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RetestListDataTable RetestList {
            get {
                return this.tableRetestList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ListMoneyStudentSI"] != null)) {
                    base.Tables.Add(new ListMoneyStudentSIDataTable(ds.Tables["ListMoneyStudentSI"]));
                }
                if ((ds.Tables["GeneralMoneySASIClass"] != null)) {
                    base.Tables.Add(new GeneralMoneySASIClassDataTable(ds.Tables["GeneralMoneySASIClass"]));
                }
                if ((ds.Tables["GeneraMoneySASITeacher"] != null)) {
                    base.Tables.Add(new GeneraMoneySASITeacherDataTable(ds.Tables["GeneraMoneySASITeacher"]));
                }
                if ((ds.Tables["Receipt"] != null)) {
                    base.Tables.Add(new ReceiptDataTable(ds.Tables["Receipt"]));
                }
                if ((ds.Tables["ListTakeATestSASI"] != null)) {
                    base.Tables.Add(new ListTakeATestSASIDataTable(ds.Tables["ListTakeATestSASI"]));
                }
                if ((ds.Tables["ListStudentToClass"] != null)) {
                    base.Tables.Add(new ListStudentToClassDataTable(ds.Tables["ListStudentToClass"]));
                }
                if ((ds.Tables["ListMoneyStudentSIQuater"] != null)) {
                    base.Tables.Add(new ListMoneyStudentSIQuaterDataTable(ds.Tables["ListMoneyStudentSIQuater"]));
                }
                if ((ds.Tables["GeneralReceiptMoney"] != null)) {
                    base.Tables.Add(new GeneralReceiptMoneyDataTable(ds.Tables["GeneralReceiptMoney"]));
                }
                if ((ds.Tables["StatisticStudents"] != null)) {
                    base.Tables.Add(new StatisticStudentsDataTable(ds.Tables["StatisticStudents"]));
                }
                if ((ds.Tables["ListMoneySASI"] != null)) {
                    base.Tables.Add(new ListMoneySASIDataTable(ds.Tables["ListMoneySASI"]));
                }
                if ((ds.Tables["RetestList"] != null)) {
                    base.Tables.Add(new RetestListDataTable(ds.Tables["RetestList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableListMoneyStudentSI = ((ListMoneyStudentSIDataTable)(base.Tables["ListMoneyStudentSI"]));
            if ((initTable == true)) {
                if ((this.tableListMoneyStudentSI != null)) {
                    this.tableListMoneyStudentSI.InitVars();
                }
            }
            this.tableGeneralMoneySASIClass = ((GeneralMoneySASIClassDataTable)(base.Tables["GeneralMoneySASIClass"]));
            if ((initTable == true)) {
                if ((this.tableGeneralMoneySASIClass != null)) {
                    this.tableGeneralMoneySASIClass.InitVars();
                }
            }
            this.tableGeneraMoneySASITeacher = ((GeneraMoneySASITeacherDataTable)(base.Tables["GeneraMoneySASITeacher"]));
            if ((initTable == true)) {
                if ((this.tableGeneraMoneySASITeacher != null)) {
                    this.tableGeneraMoneySASITeacher.InitVars();
                }
            }
            this.tableReceipt = ((ReceiptDataTable)(base.Tables["Receipt"]));
            if ((initTable == true)) {
                if ((this.tableReceipt != null)) {
                    this.tableReceipt.InitVars();
                }
            }
            this.tableListTakeATestSASI = ((ListTakeATestSASIDataTable)(base.Tables["ListTakeATestSASI"]));
            if ((initTable == true)) {
                if ((this.tableListTakeATestSASI != null)) {
                    this.tableListTakeATestSASI.InitVars();
                }
            }
            this.tableListStudentToClass = ((ListStudentToClassDataTable)(base.Tables["ListStudentToClass"]));
            if ((initTable == true)) {
                if ((this.tableListStudentToClass != null)) {
                    this.tableListStudentToClass.InitVars();
                }
            }
            this.tableListMoneyStudentSIQuater = ((ListMoneyStudentSIQuaterDataTable)(base.Tables["ListMoneyStudentSIQuater"]));
            if ((initTable == true)) {
                if ((this.tableListMoneyStudentSIQuater != null)) {
                    this.tableListMoneyStudentSIQuater.InitVars();
                }
            }
            this.tableGeneralReceiptMoney = ((GeneralReceiptMoneyDataTable)(base.Tables["GeneralReceiptMoney"]));
            if ((initTable == true)) {
                if ((this.tableGeneralReceiptMoney != null)) {
                    this.tableGeneralReceiptMoney.InitVars();
                }
            }
            this.tableStatisticStudents = ((StatisticStudentsDataTable)(base.Tables["StatisticStudents"]));
            if ((initTable == true)) {
                if ((this.tableStatisticStudents != null)) {
                    this.tableStatisticStudents.InitVars();
                }
            }
            this.tableListMoneySASI = ((ListMoneySASIDataTable)(base.Tables["ListMoneySASI"]));
            if ((initTable == true)) {
                if ((this.tableListMoneySASI != null)) {
                    this.tableListMoneySASI.InitVars();
                }
            }
            this.tableRetestList = ((RetestListDataTable)(base.Tables["RetestList"]));
            if ((initTable == true)) {
                if ((this.tableRetestList != null)) {
                    this.tableRetestList.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableListMoneyStudentSI = new ListMoneyStudentSIDataTable();
            base.Tables.Add(this.tableListMoneyStudentSI);
            this.tableGeneralMoneySASIClass = new GeneralMoneySASIClassDataTable();
            base.Tables.Add(this.tableGeneralMoneySASIClass);
            this.tableGeneraMoneySASITeacher = new GeneraMoneySASITeacherDataTable();
            base.Tables.Add(this.tableGeneraMoneySASITeacher);
            this.tableReceipt = new ReceiptDataTable();
            base.Tables.Add(this.tableReceipt);
            this.tableListTakeATestSASI = new ListTakeATestSASIDataTable();
            base.Tables.Add(this.tableListTakeATestSASI);
            this.tableListStudentToClass = new ListStudentToClassDataTable();
            base.Tables.Add(this.tableListStudentToClass);
            this.tableListMoneyStudentSIQuater = new ListMoneyStudentSIQuaterDataTable();
            base.Tables.Add(this.tableListMoneyStudentSIQuater);
            this.tableGeneralReceiptMoney = new GeneralReceiptMoneyDataTable();
            base.Tables.Add(this.tableGeneralReceiptMoney);
            this.tableStatisticStudents = new StatisticStudentsDataTable();
            base.Tables.Add(this.tableStatisticStudents);
            this.tableListMoneySASI = new ListMoneySASIDataTable();
            base.Tables.Add(this.tableListMoneySASI);
            this.tableRetestList = new RetestListDataTable();
            base.Tables.Add(this.tableRetestList);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListMoneyStudentSI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGeneralMoneySASIClass() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGeneraMoneySASITeacher() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReceipt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListTakeATestSASI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListStudentToClass() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListMoneyStudentSIQuater() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGeneralReceiptMoney() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStatisticStudents() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListMoneySASI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRetestList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ListMoneyStudentSIRowChangeEventHandler(object sender, ListMoneyStudentSIRowChangeEvent e);
        
        public delegate void GeneralMoneySASIClassRowChangeEventHandler(object sender, GeneralMoneySASIClassRowChangeEvent e);
        
        public delegate void GeneraMoneySASITeacherRowChangeEventHandler(object sender, GeneraMoneySASITeacherRowChangeEvent e);
        
        public delegate void ReceiptRowChangeEventHandler(object sender, ReceiptRowChangeEvent e);
        
        public delegate void ListTakeATestSASIRowChangeEventHandler(object sender, ListTakeATestSASIRowChangeEvent e);
        
        public delegate void ListStudentToClassRowChangeEventHandler(object sender, ListStudentToClassRowChangeEvent e);
        
        public delegate void ListMoneyStudentSIQuaterRowChangeEventHandler(object sender, ListMoneyStudentSIQuaterRowChangeEvent e);
        
        public delegate void GeneralReceiptMoneyRowChangeEventHandler(object sender, GeneralReceiptMoneyRowChangeEvent e);
        
        public delegate void StatisticStudentsRowChangeEventHandler(object sender, StatisticStudentsRowChangeEvent e);
        
        public delegate void ListMoneySASIRowChangeEventHandler(object sender, ListMoneySASIRowChangeEvent e);
        
        public delegate void RetestListRowChangeEventHandler(object sender, RetestListRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListMoneyStudentSIDataTable : global::System.Data.TypedTableBase<ListMoneyStudentSIRow> {
            
            private global::System.Data.DataColumn columnrow_number;
            
            private global::System.Data.DataColumn columnStudentCode;
            
            private global::System.Data.DataColumn columnStudentName;
            
            private global::System.Data.DataColumn columnClassName;
            
            private global::System.Data.DataColumn columnSubjectName;
            
            private global::System.Data.DataColumn columnTeacherName;
            
            private global::System.Data.DataColumn columnReceipt;
            
            private global::System.Data.DataColumn columnMoneySI;
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnSemester;
            
            private global::System.Data.DataColumn columnShoolYear;
            
            private global::System.Data.DataColumn columnTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneyStudentSIDataTable() {
                this.TableName = "ListMoneyStudentSI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListMoneyStudentSIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListMoneyStudentSIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn row_numberColumn {
                get {
                    return this.columnrow_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StudentCodeColumn {
                get {
                    return this.columnStudentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StudentNameColumn {
                get {
                    return this.columnStudentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNameColumn {
                get {
                    return this.columnClassName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectNameColumn {
                get {
                    return this.columnSubjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeacherNameColumn {
                get {
                    return this.columnTeacherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptColumn {
                get {
                    return this.columnReceipt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneySIColumn {
                get {
                    return this.columnMoneySI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SemesterColumn {
                get {
                    return this.columnSemester;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShoolYearColumn {
                get {
                    return this.columnShoolYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneyStudentSIRow this[int index] {
                get {
                    return ((ListMoneyStudentSIRow)(this.Rows[index]));
                }
            }
            
            public event ListMoneyStudentSIRowChangeEventHandler ListMoneyStudentSIRowChanging;
            
            public event ListMoneyStudentSIRowChangeEventHandler ListMoneyStudentSIRowChanged;
            
            public event ListMoneyStudentSIRowChangeEventHandler ListMoneyStudentSIRowDeleting;
            
            public event ListMoneyStudentSIRowChangeEventHandler ListMoneyStudentSIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListMoneyStudentSIRow(ListMoneyStudentSIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneyStudentSIRow AddListMoneyStudentSIRow(string row_number, string StudentCode, string StudentName, string ClassName, string SubjectName, string TeacherName, string Receipt, string MoneySI, string Number, string Semester, string ShoolYear, string Total) {
                ListMoneyStudentSIRow rowListMoneyStudentSIRow = ((ListMoneyStudentSIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        row_number,
                        StudentCode,
                        StudentName,
                        ClassName,
                        SubjectName,
                        TeacherName,
                        Receipt,
                        MoneySI,
                        Number,
                        Semester,
                        ShoolYear,
                        Total};
                rowListMoneyStudentSIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListMoneyStudentSIRow);
                return rowListMoneyStudentSIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListMoneyStudentSIDataTable cln = ((ListMoneyStudentSIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListMoneyStudentSIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrow_number = base.Columns["row_number"];
                this.columnStudentCode = base.Columns["StudentCode"];
                this.columnStudentName = base.Columns["StudentName"];
                this.columnClassName = base.Columns["ClassName"];
                this.columnSubjectName = base.Columns["SubjectName"];
                this.columnTeacherName = base.Columns["TeacherName"];
                this.columnReceipt = base.Columns["Receipt"];
                this.columnMoneySI = base.Columns["MoneySI"];
                this.columnNumber = base.Columns["Number"];
                this.columnSemester = base.Columns["Semester"];
                this.columnShoolYear = base.Columns["ShoolYear"];
                this.columnTotal = base.Columns["Total"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrow_number = new global::System.Data.DataColumn("row_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_number);
                this.columnStudentCode = new global::System.Data.DataColumn("StudentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentCode);
                this.columnStudentName = new global::System.Data.DataColumn("StudentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentName);
                this.columnClassName = new global::System.Data.DataColumn("ClassName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassName);
                this.columnSubjectName = new global::System.Data.DataColumn("SubjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectName);
                this.columnTeacherName = new global::System.Data.DataColumn("TeacherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeacherName);
                this.columnReceipt = new global::System.Data.DataColumn("Receipt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt);
                this.columnMoneySI = new global::System.Data.DataColumn("MoneySI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneySI);
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnSemester = new global::System.Data.DataColumn("Semester", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSemester);
                this.columnShoolYear = new global::System.Data.DataColumn("ShoolYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoolYear);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneyStudentSIRow NewListMoneyStudentSIRow() {
                return ((ListMoneyStudentSIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListMoneyStudentSIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListMoneyStudentSIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListMoneyStudentSIRowChanged != null)) {
                    this.ListMoneyStudentSIRowChanged(this, new ListMoneyStudentSIRowChangeEvent(((ListMoneyStudentSIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListMoneyStudentSIRowChanging != null)) {
                    this.ListMoneyStudentSIRowChanging(this, new ListMoneyStudentSIRowChangeEvent(((ListMoneyStudentSIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListMoneyStudentSIRowDeleted != null)) {
                    this.ListMoneyStudentSIRowDeleted(this, new ListMoneyStudentSIRowChangeEvent(((ListMoneyStudentSIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListMoneyStudentSIRowDeleting != null)) {
                    this.ListMoneyStudentSIRowDeleting(this, new ListMoneyStudentSIRowChangeEvent(((ListMoneyStudentSIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListMoneyStudentSIRow(ListMoneyStudentSIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListMoneyStudentSIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GeneralMoneySASIClassDataTable : global::System.Data.TypedTableBase<GeneralMoneySASIClassRow> {
            
            private global::System.Data.DataColumn columnrow_number;
            
            private global::System.Data.DataColumn columnTrainName;
            
            private global::System.Data.DataColumn columnClassCadreName;
            
            private global::System.Data.DataColumn columnClassName;
            
            private global::System.Data.DataColumn columnNumberMoney;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralMoneySASIClassDataTable() {
                this.TableName = "GeneralMoneySASIClass";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GeneralMoneySASIClassDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GeneralMoneySASIClassDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn row_numberColumn {
                get {
                    return this.columnrow_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrainNameColumn {
                get {
                    return this.columnTrainName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassCadreNameColumn {
                get {
                    return this.columnClassCadreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNameColumn {
                get {
                    return this.columnClassName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberMoneyColumn {
                get {
                    return this.columnNumberMoney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralMoneySASIClassRow this[int index] {
                get {
                    return ((GeneralMoneySASIClassRow)(this.Rows[index]));
                }
            }
            
            public event GeneralMoneySASIClassRowChangeEventHandler GeneralMoneySASIClassRowChanging;
            
            public event GeneralMoneySASIClassRowChangeEventHandler GeneralMoneySASIClassRowChanged;
            
            public event GeneralMoneySASIClassRowChangeEventHandler GeneralMoneySASIClassRowDeleting;
            
            public event GeneralMoneySASIClassRowChangeEventHandler GeneralMoneySASIClassRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGeneralMoneySASIClassRow(GeneralMoneySASIClassRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralMoneySASIClassRow AddGeneralMoneySASIClassRow(string row_number, string TrainName, string ClassCadreName, string ClassName, string NumberMoney, string Description) {
                GeneralMoneySASIClassRow rowGeneralMoneySASIClassRow = ((GeneralMoneySASIClassRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        row_number,
                        TrainName,
                        ClassCadreName,
                        ClassName,
                        NumberMoney,
                        Description};
                rowGeneralMoneySASIClassRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGeneralMoneySASIClassRow);
                return rowGeneralMoneySASIClassRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GeneralMoneySASIClassDataTable cln = ((GeneralMoneySASIClassDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GeneralMoneySASIClassDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrow_number = base.Columns["row_number"];
                this.columnTrainName = base.Columns["TrainName"];
                this.columnClassCadreName = base.Columns["ClassCadreName"];
                this.columnClassName = base.Columns["ClassName"];
                this.columnNumberMoney = base.Columns["NumberMoney"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrow_number = new global::System.Data.DataColumn("row_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_number);
                this.columnTrainName = new global::System.Data.DataColumn("TrainName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrainName);
                this.columnClassCadreName = new global::System.Data.DataColumn("ClassCadreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassCadreName);
                this.columnClassName = new global::System.Data.DataColumn("ClassName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassName);
                this.columnNumberMoney = new global::System.Data.DataColumn("NumberMoney", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberMoney);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralMoneySASIClassRow NewGeneralMoneySASIClassRow() {
                return ((GeneralMoneySASIClassRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GeneralMoneySASIClassRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GeneralMoneySASIClassRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GeneralMoneySASIClassRowChanged != null)) {
                    this.GeneralMoneySASIClassRowChanged(this, new GeneralMoneySASIClassRowChangeEvent(((GeneralMoneySASIClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GeneralMoneySASIClassRowChanging != null)) {
                    this.GeneralMoneySASIClassRowChanging(this, new GeneralMoneySASIClassRowChangeEvent(((GeneralMoneySASIClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GeneralMoneySASIClassRowDeleted != null)) {
                    this.GeneralMoneySASIClassRowDeleted(this, new GeneralMoneySASIClassRowChangeEvent(((GeneralMoneySASIClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GeneralMoneySASIClassRowDeleting != null)) {
                    this.GeneralMoneySASIClassRowDeleting(this, new GeneralMoneySASIClassRowChangeEvent(((GeneralMoneySASIClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGeneralMoneySASIClassRow(GeneralMoneySASIClassRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GeneralMoneySASIClassDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GeneraMoneySASITeacherDataTable : global::System.Data.TypedTableBase<GeneraMoneySASITeacherRow> {
            
            private global::System.Data.DataColumn columnrow_number;
            
            private global::System.Data.DataColumn columnTeacherName;
            
            private global::System.Data.DataColumn columnClassName;
            
            private global::System.Data.DataColumn columnTrainName;
            
            private global::System.Data.DataColumn columnNumberStudent;
            
            private global::System.Data.DataColumn columnCreditTheory;
            
            private global::System.Data.DataColumn columnCreditpractice;
            
            private global::System.Data.DataColumn columnSubjectName;
            
            private global::System.Data.DataColumn columnMoneySASI;
            
            private global::System.Data.DataColumn columnMoneyProctor;
            
            private global::System.Data.DataColumn columnMoneyExam;
            
            private global::System.Data.DataColumn columnPlusMoney;
            
            private global::System.Data.DataColumn columnTotalMoneySubject;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneraMoneySASITeacherDataTable() {
                this.TableName = "GeneraMoneySASITeacher";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GeneraMoneySASITeacherDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GeneraMoneySASITeacherDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn row_numberColumn {
                get {
                    return this.columnrow_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeacherNameColumn {
                get {
                    return this.columnTeacherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNameColumn {
                get {
                    return this.columnClassName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrainNameColumn {
                get {
                    return this.columnTrainName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberStudentColumn {
                get {
                    return this.columnNumberStudent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditTheoryColumn {
                get {
                    return this.columnCreditTheory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditpracticeColumn {
                get {
                    return this.columnCreditpractice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectNameColumn {
                get {
                    return this.columnSubjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneySASIColumn {
                get {
                    return this.columnMoneySASI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneyProctorColumn {
                get {
                    return this.columnMoneyProctor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneyExamColumn {
                get {
                    return this.columnMoneyExam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlusMoneyColumn {
                get {
                    return this.columnPlusMoney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalMoneySubjectColumn {
                get {
                    return this.columnTotalMoneySubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneraMoneySASITeacherRow this[int index] {
                get {
                    return ((GeneraMoneySASITeacherRow)(this.Rows[index]));
                }
            }
            
            public event GeneraMoneySASITeacherRowChangeEventHandler GeneraMoneySASITeacherRowChanging;
            
            public event GeneraMoneySASITeacherRowChangeEventHandler GeneraMoneySASITeacherRowChanged;
            
            public event GeneraMoneySASITeacherRowChangeEventHandler GeneraMoneySASITeacherRowDeleting;
            
            public event GeneraMoneySASITeacherRowChangeEventHandler GeneraMoneySASITeacherRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGeneraMoneySASITeacherRow(GeneraMoneySASITeacherRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneraMoneySASITeacherRow AddGeneraMoneySASITeacherRow(string row_number, string TeacherName, string ClassName, string TrainName, string NumberStudent, string CreditTheory, string Creditpractice, string SubjectName, string MoneySASI, string MoneyProctor, string MoneyExam, string PlusMoney, string TotalMoneySubject) {
                GeneraMoneySASITeacherRow rowGeneraMoneySASITeacherRow = ((GeneraMoneySASITeacherRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        row_number,
                        TeacherName,
                        ClassName,
                        TrainName,
                        NumberStudent,
                        CreditTheory,
                        Creditpractice,
                        SubjectName,
                        MoneySASI,
                        MoneyProctor,
                        MoneyExam,
                        PlusMoney,
                        TotalMoneySubject};
                rowGeneraMoneySASITeacherRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGeneraMoneySASITeacherRow);
                return rowGeneraMoneySASITeacherRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GeneraMoneySASITeacherDataTable cln = ((GeneraMoneySASITeacherDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GeneraMoneySASITeacherDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrow_number = base.Columns["row_number"];
                this.columnTeacherName = base.Columns["TeacherName"];
                this.columnClassName = base.Columns["ClassName"];
                this.columnTrainName = base.Columns["TrainName"];
                this.columnNumberStudent = base.Columns["NumberStudent"];
                this.columnCreditTheory = base.Columns["CreditTheory"];
                this.columnCreditpractice = base.Columns["Creditpractice"];
                this.columnSubjectName = base.Columns["SubjectName"];
                this.columnMoneySASI = base.Columns["MoneySASI"];
                this.columnMoneyProctor = base.Columns["MoneyProctor"];
                this.columnMoneyExam = base.Columns["MoneyExam"];
                this.columnPlusMoney = base.Columns["PlusMoney"];
                this.columnTotalMoneySubject = base.Columns["TotalMoneySubject"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrow_number = new global::System.Data.DataColumn("row_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_number);
                this.columnTeacherName = new global::System.Data.DataColumn("TeacherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeacherName);
                this.columnClassName = new global::System.Data.DataColumn("ClassName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassName);
                this.columnTrainName = new global::System.Data.DataColumn("TrainName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrainName);
                this.columnNumberStudent = new global::System.Data.DataColumn("NumberStudent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberStudent);
                this.columnCreditTheory = new global::System.Data.DataColumn("CreditTheory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditTheory);
                this.columnCreditpractice = new global::System.Data.DataColumn("Creditpractice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditpractice);
                this.columnSubjectName = new global::System.Data.DataColumn("SubjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectName);
                this.columnMoneySASI = new global::System.Data.DataColumn("MoneySASI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneySASI);
                this.columnMoneyProctor = new global::System.Data.DataColumn("MoneyProctor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneyProctor);
                this.columnMoneyExam = new global::System.Data.DataColumn("MoneyExam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneyExam);
                this.columnPlusMoney = new global::System.Data.DataColumn("PlusMoney", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlusMoney);
                this.columnTotalMoneySubject = new global::System.Data.DataColumn("TotalMoneySubject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMoneySubject);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneraMoneySASITeacherRow NewGeneraMoneySASITeacherRow() {
                return ((GeneraMoneySASITeacherRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GeneraMoneySASITeacherRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GeneraMoneySASITeacherRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GeneraMoneySASITeacherRowChanged != null)) {
                    this.GeneraMoneySASITeacherRowChanged(this, new GeneraMoneySASITeacherRowChangeEvent(((GeneraMoneySASITeacherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GeneraMoneySASITeacherRowChanging != null)) {
                    this.GeneraMoneySASITeacherRowChanging(this, new GeneraMoneySASITeacherRowChangeEvent(((GeneraMoneySASITeacherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GeneraMoneySASITeacherRowDeleted != null)) {
                    this.GeneraMoneySASITeacherRowDeleted(this, new GeneraMoneySASITeacherRowChangeEvent(((GeneraMoneySASITeacherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GeneraMoneySASITeacherRowDeleting != null)) {
                    this.GeneraMoneySASITeacherRowDeleting(this, new GeneraMoneySASITeacherRowChangeEvent(((GeneraMoneySASITeacherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGeneraMoneySASITeacherRow(GeneraMoneySASITeacherRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GeneraMoneySASITeacherDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReceiptDataTable : global::System.Data.TypedTableBase<ReceiptRow> {
            
            private global::System.Data.DataColumn columnClassName;
            
            private global::System.Data.DataColumn columnSubjectName;
            
            private global::System.Data.DataColumn columnMoneySASI;
            
            private global::System.Data.DataColumn columnNumberCredit;
            
            private global::System.Data.DataColumn columnNumberStudentID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReceiptDataTable() {
                this.TableName = "Receipt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReceiptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReceiptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNameColumn {
                get {
                    return this.columnClassName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectNameColumn {
                get {
                    return this.columnSubjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneySASIColumn {
                get {
                    return this.columnMoneySASI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberCreditColumn {
                get {
                    return this.columnNumberCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberStudentIDColumn {
                get {
                    return this.columnNumberStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReceiptRow this[int index] {
                get {
                    return ((ReceiptRow)(this.Rows[index]));
                }
            }
            
            public event ReceiptRowChangeEventHandler ReceiptRowChanging;
            
            public event ReceiptRowChangeEventHandler ReceiptRowChanged;
            
            public event ReceiptRowChangeEventHandler ReceiptRowDeleting;
            
            public event ReceiptRowChangeEventHandler ReceiptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReceiptRow(ReceiptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReceiptRow AddReceiptRow(string ClassName, string SubjectName, string MoneySASI, string NumberCredit, string NumberStudentID) {
                ReceiptRow rowReceiptRow = ((ReceiptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ClassName,
                        SubjectName,
                        MoneySASI,
                        NumberCredit,
                        NumberStudentID};
                rowReceiptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReceiptRow);
                return rowReceiptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReceiptDataTable cln = ((ReceiptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReceiptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnClassName = base.Columns["ClassName"];
                this.columnSubjectName = base.Columns["SubjectName"];
                this.columnMoneySASI = base.Columns["MoneySASI"];
                this.columnNumberCredit = base.Columns["NumberCredit"];
                this.columnNumberStudentID = base.Columns["NumberStudentID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnClassName = new global::System.Data.DataColumn("ClassName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassName);
                this.columnSubjectName = new global::System.Data.DataColumn("SubjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectName);
                this.columnMoneySASI = new global::System.Data.DataColumn("MoneySASI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneySASI);
                this.columnNumberCredit = new global::System.Data.DataColumn("NumberCredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberCredit);
                this.columnNumberStudentID = new global::System.Data.DataColumn("NumberStudentID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberStudentID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReceiptRow NewReceiptRow() {
                return ((ReceiptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReceiptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReceiptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReceiptRowChanged != null)) {
                    this.ReceiptRowChanged(this, new ReceiptRowChangeEvent(((ReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReceiptRowChanging != null)) {
                    this.ReceiptRowChanging(this, new ReceiptRowChangeEvent(((ReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReceiptRowDeleted != null)) {
                    this.ReceiptRowDeleted(this, new ReceiptRowChangeEvent(((ReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReceiptRowDeleting != null)) {
                    this.ReceiptRowDeleting(this, new ReceiptRowChangeEvent(((ReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReceiptRow(ReceiptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReceiptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListTakeATestSASIDataTable : global::System.Data.TypedTableBase<ListTakeATestSASIRow> {
            
            private global::System.Data.DataColumn columnrow_number;
            
            private global::System.Data.DataColumn columnStudentCode;
            
            private global::System.Data.DataColumn columnStudentName;
            
            private global::System.Data.DataColumn columnBirthDay;
            
            private global::System.Data.DataColumn columnClassName;
            
            private global::System.Data.DataColumn columnSubjectName;
            
            private global::System.Data.DataColumn columnNumberCredit;
            
            private global::System.Data.DataColumn columnReceipt;
            
            private global::System.Data.DataColumn columnMoneySASI;
            
            private global::System.Data.DataColumn columnStartDayStudy;
            
            private global::System.Data.DataColumn columnEndDayStudy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListTakeATestSASIDataTable() {
                this.TableName = "ListTakeATestSASI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListTakeATestSASIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListTakeATestSASIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn row_numberColumn {
                get {
                    return this.columnrow_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StudentCodeColumn {
                get {
                    return this.columnStudentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StudentNameColumn {
                get {
                    return this.columnStudentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthDayColumn {
                get {
                    return this.columnBirthDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNameColumn {
                get {
                    return this.columnClassName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectNameColumn {
                get {
                    return this.columnSubjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberCreditColumn {
                get {
                    return this.columnNumberCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptColumn {
                get {
                    return this.columnReceipt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneySASIColumn {
                get {
                    return this.columnMoneySASI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDayStudyColumn {
                get {
                    return this.columnStartDayStudy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndDayStudyColumn {
                get {
                    return this.columnEndDayStudy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListTakeATestSASIRow this[int index] {
                get {
                    return ((ListTakeATestSASIRow)(this.Rows[index]));
                }
            }
            
            public event ListTakeATestSASIRowChangeEventHandler ListTakeATestSASIRowChanging;
            
            public event ListTakeATestSASIRowChangeEventHandler ListTakeATestSASIRowChanged;
            
            public event ListTakeATestSASIRowChangeEventHandler ListTakeATestSASIRowDeleting;
            
            public event ListTakeATestSASIRowChangeEventHandler ListTakeATestSASIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListTakeATestSASIRow(ListTakeATestSASIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListTakeATestSASIRow AddListTakeATestSASIRow(string row_number, string StudentCode, string StudentName, string BirthDay, string ClassName, string SubjectName, string NumberCredit, string Receipt, string MoneySASI, string StartDayStudy, string EndDayStudy) {
                ListTakeATestSASIRow rowListTakeATestSASIRow = ((ListTakeATestSASIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        row_number,
                        StudentCode,
                        StudentName,
                        BirthDay,
                        ClassName,
                        SubjectName,
                        NumberCredit,
                        Receipt,
                        MoneySASI,
                        StartDayStudy,
                        EndDayStudy};
                rowListTakeATestSASIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListTakeATestSASIRow);
                return rowListTakeATestSASIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListTakeATestSASIDataTable cln = ((ListTakeATestSASIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListTakeATestSASIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrow_number = base.Columns["row_number"];
                this.columnStudentCode = base.Columns["StudentCode"];
                this.columnStudentName = base.Columns["StudentName"];
                this.columnBirthDay = base.Columns["BirthDay"];
                this.columnClassName = base.Columns["ClassName"];
                this.columnSubjectName = base.Columns["SubjectName"];
                this.columnNumberCredit = base.Columns["NumberCredit"];
                this.columnReceipt = base.Columns["Receipt"];
                this.columnMoneySASI = base.Columns["MoneySASI"];
                this.columnStartDayStudy = base.Columns["StartDayStudy"];
                this.columnEndDayStudy = base.Columns["EndDayStudy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrow_number = new global::System.Data.DataColumn("row_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_number);
                this.columnStudentCode = new global::System.Data.DataColumn("StudentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentCode);
                this.columnStudentName = new global::System.Data.DataColumn("StudentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentName);
                this.columnBirthDay = new global::System.Data.DataColumn("BirthDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthDay);
                this.columnClassName = new global::System.Data.DataColumn("ClassName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassName);
                this.columnSubjectName = new global::System.Data.DataColumn("SubjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectName);
                this.columnNumberCredit = new global::System.Data.DataColumn("NumberCredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberCredit);
                this.columnReceipt = new global::System.Data.DataColumn("Receipt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt);
                this.columnMoneySASI = new global::System.Data.DataColumn("MoneySASI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneySASI);
                this.columnStartDayStudy = new global::System.Data.DataColumn("StartDayStudy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDayStudy);
                this.columnEndDayStudy = new global::System.Data.DataColumn("EndDayStudy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDayStudy);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListTakeATestSASIRow NewListTakeATestSASIRow() {
                return ((ListTakeATestSASIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListTakeATestSASIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListTakeATestSASIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListTakeATestSASIRowChanged != null)) {
                    this.ListTakeATestSASIRowChanged(this, new ListTakeATestSASIRowChangeEvent(((ListTakeATestSASIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListTakeATestSASIRowChanging != null)) {
                    this.ListTakeATestSASIRowChanging(this, new ListTakeATestSASIRowChangeEvent(((ListTakeATestSASIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListTakeATestSASIRowDeleted != null)) {
                    this.ListTakeATestSASIRowDeleted(this, new ListTakeATestSASIRowChangeEvent(((ListTakeATestSASIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListTakeATestSASIRowDeleting != null)) {
                    this.ListTakeATestSASIRowDeleting(this, new ListTakeATestSASIRowChangeEvent(((ListTakeATestSASIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListTakeATestSASIRow(ListTakeATestSASIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListTakeATestSASIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListStudentToClassDataTable : global::System.Data.TypedTableBase<ListStudentToClassRow> {
            
            private global::System.Data.DataColumn columnrow_number;
            
            private global::System.Data.DataColumn columnClassName;
            
            private global::System.Data.DataColumn columnStudentName;
            
            private global::System.Data.DataColumn columnBirthDay;
            
            private global::System.Data.DataColumn columnTrainName;
            
            private global::System.Data.DataColumn columnNumberStudent;
            
            private global::System.Data.DataColumn columnSubjectName;
            
            private global::System.Data.DataColumn columnCreditpractice;
            
            private global::System.Data.DataColumn columnCreditTheory;
            
            private global::System.Data.DataColumn columnReceipt;
            
            private global::System.Data.DataColumn columnMoneySASI;
            
            private global::System.Data.DataColumn columnPlusMoney;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListStudentToClassDataTable() {
                this.TableName = "ListStudentToClass";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListStudentToClassDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListStudentToClassDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn row_numberColumn {
                get {
                    return this.columnrow_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNameColumn {
                get {
                    return this.columnClassName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StudentNameColumn {
                get {
                    return this.columnStudentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthDayColumn {
                get {
                    return this.columnBirthDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrainNameColumn {
                get {
                    return this.columnTrainName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberStudentColumn {
                get {
                    return this.columnNumberStudent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectNameColumn {
                get {
                    return this.columnSubjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditpracticeColumn {
                get {
                    return this.columnCreditpractice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditTheoryColumn {
                get {
                    return this.columnCreditTheory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptColumn {
                get {
                    return this.columnReceipt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneySASIColumn {
                get {
                    return this.columnMoneySASI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlusMoneyColumn {
                get {
                    return this.columnPlusMoney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListStudentToClassRow this[int index] {
                get {
                    return ((ListStudentToClassRow)(this.Rows[index]));
                }
            }
            
            public event ListStudentToClassRowChangeEventHandler ListStudentToClassRowChanging;
            
            public event ListStudentToClassRowChangeEventHandler ListStudentToClassRowChanged;
            
            public event ListStudentToClassRowChangeEventHandler ListStudentToClassRowDeleting;
            
            public event ListStudentToClassRowChangeEventHandler ListStudentToClassRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListStudentToClassRow(ListStudentToClassRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListStudentToClassRow AddListStudentToClassRow(string row_number, string ClassName, string StudentName, string BirthDay, string TrainName, string NumberStudent, string SubjectName, string Creditpractice, string CreditTheory, string Receipt, string MoneySASI, string PlusMoney) {
                ListStudentToClassRow rowListStudentToClassRow = ((ListStudentToClassRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        row_number,
                        ClassName,
                        StudentName,
                        BirthDay,
                        TrainName,
                        NumberStudent,
                        SubjectName,
                        Creditpractice,
                        CreditTheory,
                        Receipt,
                        MoneySASI,
                        PlusMoney};
                rowListStudentToClassRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListStudentToClassRow);
                return rowListStudentToClassRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListStudentToClassDataTable cln = ((ListStudentToClassDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListStudentToClassDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrow_number = base.Columns["row_number"];
                this.columnClassName = base.Columns["ClassName"];
                this.columnStudentName = base.Columns["StudentName"];
                this.columnBirthDay = base.Columns["BirthDay"];
                this.columnTrainName = base.Columns["TrainName"];
                this.columnNumberStudent = base.Columns["NumberStudent"];
                this.columnSubjectName = base.Columns["SubjectName"];
                this.columnCreditpractice = base.Columns["Creditpractice"];
                this.columnCreditTheory = base.Columns["CreditTheory"];
                this.columnReceipt = base.Columns["Receipt"];
                this.columnMoneySASI = base.Columns["MoneySASI"];
                this.columnPlusMoney = base.Columns["PlusMoney"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrow_number = new global::System.Data.DataColumn("row_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_number);
                this.columnClassName = new global::System.Data.DataColumn("ClassName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassName);
                this.columnStudentName = new global::System.Data.DataColumn("StudentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentName);
                this.columnBirthDay = new global::System.Data.DataColumn("BirthDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthDay);
                this.columnTrainName = new global::System.Data.DataColumn("TrainName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrainName);
                this.columnNumberStudent = new global::System.Data.DataColumn("NumberStudent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberStudent);
                this.columnSubjectName = new global::System.Data.DataColumn("SubjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectName);
                this.columnCreditpractice = new global::System.Data.DataColumn("Creditpractice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditpractice);
                this.columnCreditTheory = new global::System.Data.DataColumn("CreditTheory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditTheory);
                this.columnReceipt = new global::System.Data.DataColumn("Receipt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt);
                this.columnMoneySASI = new global::System.Data.DataColumn("MoneySASI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneySASI);
                this.columnPlusMoney = new global::System.Data.DataColumn("PlusMoney", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlusMoney);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListStudentToClassRow NewListStudentToClassRow() {
                return ((ListStudentToClassRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListStudentToClassRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListStudentToClassRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListStudentToClassRowChanged != null)) {
                    this.ListStudentToClassRowChanged(this, new ListStudentToClassRowChangeEvent(((ListStudentToClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListStudentToClassRowChanging != null)) {
                    this.ListStudentToClassRowChanging(this, new ListStudentToClassRowChangeEvent(((ListStudentToClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListStudentToClassRowDeleted != null)) {
                    this.ListStudentToClassRowDeleted(this, new ListStudentToClassRowChangeEvent(((ListStudentToClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListStudentToClassRowDeleting != null)) {
                    this.ListStudentToClassRowDeleting(this, new ListStudentToClassRowChangeEvent(((ListStudentToClassRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListStudentToClassRow(ListStudentToClassRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListStudentToClassDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListMoneyStudentSIQuaterDataTable : global::System.Data.TypedTableBase<ListMoneyStudentSIQuaterRow> {
            
            private global::System.Data.DataColumn columnrow_number;
            
            private global::System.Data.DataColumn columnStudentCode;
            
            private global::System.Data.DataColumn columnStudentName;
            
            private global::System.Data.DataColumn columnClassName;
            
            private global::System.Data.DataColumn columnSubjectName;
            
            private global::System.Data.DataColumn columnTeacherName;
            
            private global::System.Data.DataColumn columnMoneySI;
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnSemester;
            
            private global::System.Data.DataColumn columnShoolYear;
            
            private global::System.Data.DataColumn columnTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneyStudentSIQuaterDataTable() {
                this.TableName = "ListMoneyStudentSIQuater";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListMoneyStudentSIQuaterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListMoneyStudentSIQuaterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn row_numberColumn {
                get {
                    return this.columnrow_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StudentCodeColumn {
                get {
                    return this.columnStudentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StudentNameColumn {
                get {
                    return this.columnStudentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNameColumn {
                get {
                    return this.columnClassName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectNameColumn {
                get {
                    return this.columnSubjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeacherNameColumn {
                get {
                    return this.columnTeacherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneySIColumn {
                get {
                    return this.columnMoneySI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SemesterColumn {
                get {
                    return this.columnSemester;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShoolYearColumn {
                get {
                    return this.columnShoolYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneyStudentSIQuaterRow this[int index] {
                get {
                    return ((ListMoneyStudentSIQuaterRow)(this.Rows[index]));
                }
            }
            
            public event ListMoneyStudentSIQuaterRowChangeEventHandler ListMoneyStudentSIQuaterRowChanging;
            
            public event ListMoneyStudentSIQuaterRowChangeEventHandler ListMoneyStudentSIQuaterRowChanged;
            
            public event ListMoneyStudentSIQuaterRowChangeEventHandler ListMoneyStudentSIQuaterRowDeleting;
            
            public event ListMoneyStudentSIQuaterRowChangeEventHandler ListMoneyStudentSIQuaterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListMoneyStudentSIQuaterRow(ListMoneyStudentSIQuaterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneyStudentSIQuaterRow AddListMoneyStudentSIQuaterRow(string row_number, string StudentCode, string StudentName, string ClassName, string SubjectName, string TeacherName, string MoneySI, string Number, string Semester, string ShoolYear, string Total) {
                ListMoneyStudentSIQuaterRow rowListMoneyStudentSIQuaterRow = ((ListMoneyStudentSIQuaterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        row_number,
                        StudentCode,
                        StudentName,
                        ClassName,
                        SubjectName,
                        TeacherName,
                        MoneySI,
                        Number,
                        Semester,
                        ShoolYear,
                        Total};
                rowListMoneyStudentSIQuaterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListMoneyStudentSIQuaterRow);
                return rowListMoneyStudentSIQuaterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListMoneyStudentSIQuaterDataTable cln = ((ListMoneyStudentSIQuaterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListMoneyStudentSIQuaterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrow_number = base.Columns["row_number"];
                this.columnStudentCode = base.Columns["StudentCode"];
                this.columnStudentName = base.Columns["StudentName"];
                this.columnClassName = base.Columns["ClassName"];
                this.columnSubjectName = base.Columns["SubjectName"];
                this.columnTeacherName = base.Columns["TeacherName"];
                this.columnMoneySI = base.Columns["MoneySI"];
                this.columnNumber = base.Columns["Number"];
                this.columnSemester = base.Columns["Semester"];
                this.columnShoolYear = base.Columns["ShoolYear"];
                this.columnTotal = base.Columns["Total"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrow_number = new global::System.Data.DataColumn("row_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_number);
                this.columnStudentCode = new global::System.Data.DataColumn("StudentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentCode);
                this.columnStudentName = new global::System.Data.DataColumn("StudentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentName);
                this.columnClassName = new global::System.Data.DataColumn("ClassName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassName);
                this.columnSubjectName = new global::System.Data.DataColumn("SubjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectName);
                this.columnTeacherName = new global::System.Data.DataColumn("TeacherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeacherName);
                this.columnMoneySI = new global::System.Data.DataColumn("MoneySI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneySI);
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnSemester = new global::System.Data.DataColumn("Semester", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSemester);
                this.columnShoolYear = new global::System.Data.DataColumn("ShoolYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoolYear);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneyStudentSIQuaterRow NewListMoneyStudentSIQuaterRow() {
                return ((ListMoneyStudentSIQuaterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListMoneyStudentSIQuaterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListMoneyStudentSIQuaterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListMoneyStudentSIQuaterRowChanged != null)) {
                    this.ListMoneyStudentSIQuaterRowChanged(this, new ListMoneyStudentSIQuaterRowChangeEvent(((ListMoneyStudentSIQuaterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListMoneyStudentSIQuaterRowChanging != null)) {
                    this.ListMoneyStudentSIQuaterRowChanging(this, new ListMoneyStudentSIQuaterRowChangeEvent(((ListMoneyStudentSIQuaterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListMoneyStudentSIQuaterRowDeleted != null)) {
                    this.ListMoneyStudentSIQuaterRowDeleted(this, new ListMoneyStudentSIQuaterRowChangeEvent(((ListMoneyStudentSIQuaterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListMoneyStudentSIQuaterRowDeleting != null)) {
                    this.ListMoneyStudentSIQuaterRowDeleting(this, new ListMoneyStudentSIQuaterRowChangeEvent(((ListMoneyStudentSIQuaterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListMoneyStudentSIQuaterRow(ListMoneyStudentSIQuaterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListMoneyStudentSIQuaterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GeneralReceiptMoneyDataTable : global::System.Data.TypedTableBase<GeneralReceiptMoneyRow> {
            
            private global::System.Data.DataColumn columnrow_number;
            
            private global::System.Data.DataColumn columnStudentCode;
            
            private global::System.Data.DataColumn columnStudentName;
            
            private global::System.Data.DataColumn columnClassName;
            
            private global::System.Data.DataColumn columnSubjectName;
            
            private global::System.Data.DataColumn columnReceipt;
            
            private global::System.Data.DataColumn columnMoneySA;
            
            private global::System.Data.DataColumn columnMoneySI;
            
            private global::System.Data.DataColumn columnMoneyRetakeATestEnd;
            
            private global::System.Data.DataColumn columnMoneyRetakeATestCenter;
            
            private global::System.Data.DataColumn columnTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralReceiptMoneyDataTable() {
                this.TableName = "GeneralReceiptMoney";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GeneralReceiptMoneyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GeneralReceiptMoneyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn row_numberColumn {
                get {
                    return this.columnrow_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StudentCodeColumn {
                get {
                    return this.columnStudentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StudentNameColumn {
                get {
                    return this.columnStudentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNameColumn {
                get {
                    return this.columnClassName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectNameColumn {
                get {
                    return this.columnSubjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptColumn {
                get {
                    return this.columnReceipt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneySAColumn {
                get {
                    return this.columnMoneySA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneySIColumn {
                get {
                    return this.columnMoneySI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneyRetakeATestEndColumn {
                get {
                    return this.columnMoneyRetakeATestEnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneyRetakeATestCenterColumn {
                get {
                    return this.columnMoneyRetakeATestCenter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralReceiptMoneyRow this[int index] {
                get {
                    return ((GeneralReceiptMoneyRow)(this.Rows[index]));
                }
            }
            
            public event GeneralReceiptMoneyRowChangeEventHandler GeneralReceiptMoneyRowChanging;
            
            public event GeneralReceiptMoneyRowChangeEventHandler GeneralReceiptMoneyRowChanged;
            
            public event GeneralReceiptMoneyRowChangeEventHandler GeneralReceiptMoneyRowDeleting;
            
            public event GeneralReceiptMoneyRowChangeEventHandler GeneralReceiptMoneyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGeneralReceiptMoneyRow(GeneralReceiptMoneyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralReceiptMoneyRow AddGeneralReceiptMoneyRow(string row_number, string StudentCode, string StudentName, string ClassName, string SubjectName, string Receipt, string MoneySA, string MoneySI, string MoneyRetakeATestEnd, string MoneyRetakeATestCenter, string Total) {
                GeneralReceiptMoneyRow rowGeneralReceiptMoneyRow = ((GeneralReceiptMoneyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        row_number,
                        StudentCode,
                        StudentName,
                        ClassName,
                        SubjectName,
                        Receipt,
                        MoneySA,
                        MoneySI,
                        MoneyRetakeATestEnd,
                        MoneyRetakeATestCenter,
                        Total};
                rowGeneralReceiptMoneyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGeneralReceiptMoneyRow);
                return rowGeneralReceiptMoneyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GeneralReceiptMoneyDataTable cln = ((GeneralReceiptMoneyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GeneralReceiptMoneyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrow_number = base.Columns["row_number"];
                this.columnStudentCode = base.Columns["StudentCode"];
                this.columnStudentName = base.Columns["StudentName"];
                this.columnClassName = base.Columns["ClassName"];
                this.columnSubjectName = base.Columns["SubjectName"];
                this.columnReceipt = base.Columns["Receipt"];
                this.columnMoneySA = base.Columns["MoneySA"];
                this.columnMoneySI = base.Columns["MoneySI"];
                this.columnMoneyRetakeATestEnd = base.Columns["MoneyRetakeATestEnd"];
                this.columnMoneyRetakeATestCenter = base.Columns["MoneyRetakeATestCenter"];
                this.columnTotal = base.Columns["Total"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrow_number = new global::System.Data.DataColumn("row_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_number);
                this.columnStudentCode = new global::System.Data.DataColumn("StudentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentCode);
                this.columnStudentName = new global::System.Data.DataColumn("StudentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentName);
                this.columnClassName = new global::System.Data.DataColumn("ClassName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassName);
                this.columnSubjectName = new global::System.Data.DataColumn("SubjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectName);
                this.columnReceipt = new global::System.Data.DataColumn("Receipt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt);
                this.columnMoneySA = new global::System.Data.DataColumn("MoneySA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneySA);
                this.columnMoneySI = new global::System.Data.DataColumn("MoneySI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneySI);
                this.columnMoneyRetakeATestEnd = new global::System.Data.DataColumn("MoneyRetakeATestEnd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneyRetakeATestEnd);
                this.columnMoneyRetakeATestCenter = new global::System.Data.DataColumn("MoneyRetakeATestCenter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneyRetakeATestCenter);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnReceipt.Caption = "MoneySI";
                this.columnMoneyRetakeATestEnd.Caption = "Semester";
                this.columnMoneyRetakeATestCenter.Caption = "ShoolYear";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralReceiptMoneyRow NewGeneralReceiptMoneyRow() {
                return ((GeneralReceiptMoneyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GeneralReceiptMoneyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GeneralReceiptMoneyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GeneralReceiptMoneyRowChanged != null)) {
                    this.GeneralReceiptMoneyRowChanged(this, new GeneralReceiptMoneyRowChangeEvent(((GeneralReceiptMoneyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GeneralReceiptMoneyRowChanging != null)) {
                    this.GeneralReceiptMoneyRowChanging(this, new GeneralReceiptMoneyRowChangeEvent(((GeneralReceiptMoneyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GeneralReceiptMoneyRowDeleted != null)) {
                    this.GeneralReceiptMoneyRowDeleted(this, new GeneralReceiptMoneyRowChangeEvent(((GeneralReceiptMoneyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GeneralReceiptMoneyRowDeleting != null)) {
                    this.GeneralReceiptMoneyRowDeleting(this, new GeneralReceiptMoneyRowChangeEvent(((GeneralReceiptMoneyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGeneralReceiptMoneyRow(GeneralReceiptMoneyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GeneralReceiptMoneyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StatisticStudentsDataTable : global::System.Data.TypedTableBase<StatisticStudentsRow> {
            
            private global::System.Data.DataColumn columnrow_number;
            
            private global::System.Data.DataColumn columnSubjectName;
            
            private global::System.Data.DataColumn columnClassName;
            
            private global::System.Data.DataColumn columnCountStudentRetakeEnd;
            
            private global::System.Data.DataColumn columnCountStudentRetakeCenter;
            
            private global::System.Data.DataColumn columnCountStudentRetakeSA;
            
            private global::System.Data.DataColumn columnCountStudentRetakeSI;
            
            private global::System.Data.DataColumn columnTeacherName;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StatisticStudentsDataTable() {
                this.TableName = "StatisticStudents";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StatisticStudentsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StatisticStudentsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn row_numberColumn {
                get {
                    return this.columnrow_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectNameColumn {
                get {
                    return this.columnSubjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNameColumn {
                get {
                    return this.columnClassName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountStudentRetakeEndColumn {
                get {
                    return this.columnCountStudentRetakeEnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountStudentRetakeCenterColumn {
                get {
                    return this.columnCountStudentRetakeCenter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountStudentRetakeSAColumn {
                get {
                    return this.columnCountStudentRetakeSA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountStudentRetakeSIColumn {
                get {
                    return this.columnCountStudentRetakeSI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeacherNameColumn {
                get {
                    return this.columnTeacherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StatisticStudentsRow this[int index] {
                get {
                    return ((StatisticStudentsRow)(this.Rows[index]));
                }
            }
            
            public event StatisticStudentsRowChangeEventHandler StatisticStudentsRowChanging;
            
            public event StatisticStudentsRowChangeEventHandler StatisticStudentsRowChanged;
            
            public event StatisticStudentsRowChangeEventHandler StatisticStudentsRowDeleting;
            
            public event StatisticStudentsRowChangeEventHandler StatisticStudentsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStatisticStudentsRow(StatisticStudentsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StatisticStudentsRow AddStatisticStudentsRow(string row_number, string SubjectName, string ClassName, string CountStudentRetakeEnd, string CountStudentRetakeCenter, string CountStudentRetakeSA, string CountStudentRetakeSI, string TeacherName, string Description) {
                StatisticStudentsRow rowStatisticStudentsRow = ((StatisticStudentsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        row_number,
                        SubjectName,
                        ClassName,
                        CountStudentRetakeEnd,
                        CountStudentRetakeCenter,
                        CountStudentRetakeSA,
                        CountStudentRetakeSI,
                        TeacherName,
                        Description};
                rowStatisticStudentsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStatisticStudentsRow);
                return rowStatisticStudentsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StatisticStudentsDataTable cln = ((StatisticStudentsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StatisticStudentsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrow_number = base.Columns["row_number"];
                this.columnSubjectName = base.Columns["SubjectName"];
                this.columnClassName = base.Columns["ClassName"];
                this.columnCountStudentRetakeEnd = base.Columns["CountStudentRetakeEnd"];
                this.columnCountStudentRetakeCenter = base.Columns["CountStudentRetakeCenter"];
                this.columnCountStudentRetakeSA = base.Columns["CountStudentRetakeSA"];
                this.columnCountStudentRetakeSI = base.Columns["CountStudentRetakeSI"];
                this.columnTeacherName = base.Columns["TeacherName"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrow_number = new global::System.Data.DataColumn("row_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_number);
                this.columnSubjectName = new global::System.Data.DataColumn("SubjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectName);
                this.columnClassName = new global::System.Data.DataColumn("ClassName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassName);
                this.columnCountStudentRetakeEnd = new global::System.Data.DataColumn("CountStudentRetakeEnd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountStudentRetakeEnd);
                this.columnCountStudentRetakeCenter = new global::System.Data.DataColumn("CountStudentRetakeCenter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountStudentRetakeCenter);
                this.columnCountStudentRetakeSA = new global::System.Data.DataColumn("CountStudentRetakeSA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountStudentRetakeSA);
                this.columnCountStudentRetakeSI = new global::System.Data.DataColumn("CountStudentRetakeSI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountStudentRetakeSI);
                this.columnTeacherName = new global::System.Data.DataColumn("TeacherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeacherName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StatisticStudentsRow NewStatisticStudentsRow() {
                return ((StatisticStudentsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StatisticStudentsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StatisticStudentsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StatisticStudentsRowChanged != null)) {
                    this.StatisticStudentsRowChanged(this, new StatisticStudentsRowChangeEvent(((StatisticStudentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StatisticStudentsRowChanging != null)) {
                    this.StatisticStudentsRowChanging(this, new StatisticStudentsRowChangeEvent(((StatisticStudentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StatisticStudentsRowDeleted != null)) {
                    this.StatisticStudentsRowDeleted(this, new StatisticStudentsRowChangeEvent(((StatisticStudentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StatisticStudentsRowDeleting != null)) {
                    this.StatisticStudentsRowDeleting(this, new StatisticStudentsRowChangeEvent(((StatisticStudentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStatisticStudentsRow(StatisticStudentsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StatisticStudentsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListMoneySASIDataTable : global::System.Data.TypedTableBase<ListMoneySASIRow> {
            
            private global::System.Data.DataColumn columnrow_number;
            
            private global::System.Data.DataColumn columnStudentName;
            
            private global::System.Data.DataColumn columnClassName;
            
            private global::System.Data.DataColumn columnSubjectName;
            
            private global::System.Data.DataColumn columnTheoryNumber;
            
            private global::System.Data.DataColumn columnPracticeNumber;
            
            private global::System.Data.DataColumn columnTeacherName;
            
            private global::System.Data.DataColumn columnMoneyNumber;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnRegisterDay;
            
            private global::System.Data.DataColumn columnReceipt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneySASIDataTable() {
                this.TableName = "ListMoneySASI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListMoneySASIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListMoneySASIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn row_numberColumn {
                get {
                    return this.columnrow_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StudentNameColumn {
                get {
                    return this.columnStudentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNameColumn {
                get {
                    return this.columnClassName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectNameColumn {
                get {
                    return this.columnSubjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TheoryNumberColumn {
                get {
                    return this.columnTheoryNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PracticeNumberColumn {
                get {
                    return this.columnPracticeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeacherNameColumn {
                get {
                    return this.columnTeacherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneyNumberColumn {
                get {
                    return this.columnMoneyNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegisterDayColumn {
                get {
                    return this.columnRegisterDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptColumn {
                get {
                    return this.columnReceipt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneySASIRow this[int index] {
                get {
                    return ((ListMoneySASIRow)(this.Rows[index]));
                }
            }
            
            public event ListMoneySASIRowChangeEventHandler ListMoneySASIRowChanging;
            
            public event ListMoneySASIRowChangeEventHandler ListMoneySASIRowChanged;
            
            public event ListMoneySASIRowChangeEventHandler ListMoneySASIRowDeleting;
            
            public event ListMoneySASIRowChangeEventHandler ListMoneySASIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListMoneySASIRow(ListMoneySASIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneySASIRow AddListMoneySASIRow(string row_number, string StudentName, string ClassName, string SubjectName, string TheoryNumber, string PracticeNumber, string TeacherName, string MoneyNumber, string Description, string RegisterDay, string Receipt) {
                ListMoneySASIRow rowListMoneySASIRow = ((ListMoneySASIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        row_number,
                        StudentName,
                        ClassName,
                        SubjectName,
                        TheoryNumber,
                        PracticeNumber,
                        TeacherName,
                        MoneyNumber,
                        Description,
                        RegisterDay,
                        Receipt};
                rowListMoneySASIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListMoneySASIRow);
                return rowListMoneySASIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListMoneySASIDataTable cln = ((ListMoneySASIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListMoneySASIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrow_number = base.Columns["row_number"];
                this.columnStudentName = base.Columns["StudentName"];
                this.columnClassName = base.Columns["ClassName"];
                this.columnSubjectName = base.Columns["SubjectName"];
                this.columnTheoryNumber = base.Columns["TheoryNumber"];
                this.columnPracticeNumber = base.Columns["PracticeNumber"];
                this.columnTeacherName = base.Columns["TeacherName"];
                this.columnMoneyNumber = base.Columns["MoneyNumber"];
                this.columnDescription = base.Columns["Description"];
                this.columnRegisterDay = base.Columns["RegisterDay"];
                this.columnReceipt = base.Columns["Receipt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrow_number = new global::System.Data.DataColumn("row_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_number);
                this.columnStudentName = new global::System.Data.DataColumn("StudentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentName);
                this.columnClassName = new global::System.Data.DataColumn("ClassName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassName);
                this.columnSubjectName = new global::System.Data.DataColumn("SubjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectName);
                this.columnTheoryNumber = new global::System.Data.DataColumn("TheoryNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTheoryNumber);
                this.columnPracticeNumber = new global::System.Data.DataColumn("PracticeNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPracticeNumber);
                this.columnTeacherName = new global::System.Data.DataColumn("TeacherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeacherName);
                this.columnMoneyNumber = new global::System.Data.DataColumn("MoneyNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneyNumber);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnRegisterDay = new global::System.Data.DataColumn("RegisterDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegisterDay);
                this.columnReceipt = new global::System.Data.DataColumn("Receipt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneySASIRow NewListMoneySASIRow() {
                return ((ListMoneySASIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListMoneySASIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListMoneySASIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListMoneySASIRowChanged != null)) {
                    this.ListMoneySASIRowChanged(this, new ListMoneySASIRowChangeEvent(((ListMoneySASIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListMoneySASIRowChanging != null)) {
                    this.ListMoneySASIRowChanging(this, new ListMoneySASIRowChangeEvent(((ListMoneySASIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListMoneySASIRowDeleted != null)) {
                    this.ListMoneySASIRowDeleted(this, new ListMoneySASIRowChangeEvent(((ListMoneySASIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListMoneySASIRowDeleting != null)) {
                    this.ListMoneySASIRowDeleting(this, new ListMoneySASIRowChangeEvent(((ListMoneySASIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListMoneySASIRow(ListMoneySASIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListMoneySASIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RetestListDataTable : global::System.Data.TypedTableBase<RetestListRow> {
            
            private global::System.Data.DataColumn columnrow_Number;
            
            private global::System.Data.DataColumn columnStudentName;
            
            private global::System.Data.DataColumn columnClassName;
            
            private global::System.Data.DataColumn columnSubjectName;
            
            private global::System.Data.DataColumn columnTeacherName;
            
            private global::System.Data.DataColumn columnMoneyRetake;
            
            private global::System.Data.DataColumn columnLearningType;
            
            private global::System.Data.DataColumn columnRegisterDay;
            
            private global::System.Data.DataColumn columnReceipt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetestListDataTable() {
                this.TableName = "RetestList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RetestListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RetestListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn row_NumberColumn {
                get {
                    return this.columnrow_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StudentNameColumn {
                get {
                    return this.columnStudentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassNameColumn {
                get {
                    return this.columnClassName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectNameColumn {
                get {
                    return this.columnSubjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeacherNameColumn {
                get {
                    return this.columnTeacherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoneyRetakeColumn {
                get {
                    return this.columnMoneyRetake;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LearningTypeColumn {
                get {
                    return this.columnLearningType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegisterDayColumn {
                get {
                    return this.columnRegisterDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptColumn {
                get {
                    return this.columnReceipt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetestListRow this[int index] {
                get {
                    return ((RetestListRow)(this.Rows[index]));
                }
            }
            
            public event RetestListRowChangeEventHandler RetestListRowChanging;
            
            public event RetestListRowChangeEventHandler RetestListRowChanged;
            
            public event RetestListRowChangeEventHandler RetestListRowDeleting;
            
            public event RetestListRowChangeEventHandler RetestListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRetestListRow(RetestListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetestListRow AddRetestListRow(string row_Number, string StudentName, string ClassName, string SubjectName, string TeacherName, string MoneyRetake, string LearningType, string RegisterDay, string Receipt) {
                RetestListRow rowRetestListRow = ((RetestListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        row_Number,
                        StudentName,
                        ClassName,
                        SubjectName,
                        TeacherName,
                        MoneyRetake,
                        LearningType,
                        RegisterDay,
                        Receipt};
                rowRetestListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRetestListRow);
                return rowRetestListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RetestListDataTable cln = ((RetestListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RetestListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrow_Number = base.Columns["row_Number"];
                this.columnStudentName = base.Columns["StudentName"];
                this.columnClassName = base.Columns["ClassName"];
                this.columnSubjectName = base.Columns["SubjectName"];
                this.columnTeacherName = base.Columns["TeacherName"];
                this.columnMoneyRetake = base.Columns["MoneyRetake"];
                this.columnLearningType = base.Columns["LearningType"];
                this.columnRegisterDay = base.Columns["RegisterDay"];
                this.columnReceipt = base.Columns["Receipt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrow_Number = new global::System.Data.DataColumn("row_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_Number);
                this.columnStudentName = new global::System.Data.DataColumn("StudentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentName);
                this.columnClassName = new global::System.Data.DataColumn("ClassName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassName);
                this.columnSubjectName = new global::System.Data.DataColumn("SubjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectName);
                this.columnTeacherName = new global::System.Data.DataColumn("TeacherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeacherName);
                this.columnMoneyRetake = new global::System.Data.DataColumn("MoneyRetake", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneyRetake);
                this.columnLearningType = new global::System.Data.DataColumn("LearningType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLearningType);
                this.columnRegisterDay = new global::System.Data.DataColumn("RegisterDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegisterDay);
                this.columnReceipt = new global::System.Data.DataColumn("Receipt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetestListRow NewRetestListRow() {
                return ((RetestListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RetestListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RetestListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RetestListRowChanged != null)) {
                    this.RetestListRowChanged(this, new RetestListRowChangeEvent(((RetestListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RetestListRowChanging != null)) {
                    this.RetestListRowChanging(this, new RetestListRowChangeEvent(((RetestListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RetestListRowDeleted != null)) {
                    this.RetestListRowDeleted(this, new RetestListRowChangeEvent(((RetestListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RetestListRowDeleting != null)) {
                    this.RetestListRowDeleting(this, new RetestListRowChangeEvent(((RetestListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRetestListRow(RetestListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RetestListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListMoneyStudentSIRow : global::System.Data.DataRow {
            
            private ListMoneyStudentSIDataTable tableListMoneyStudentSI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListMoneyStudentSIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListMoneyStudentSI = ((ListMoneyStudentSIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string row_number {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSI.row_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'row_number\' in table \'ListMoneyStudentSI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSI.row_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StudentCode {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSI.StudentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentCode\' in table \'ListMoneyStudentSI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSI.StudentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StudentName {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSI.StudentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentName\' in table \'ListMoneyStudentSI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSI.StudentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassName {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSI.ClassNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassName\' in table \'ListMoneyStudentSI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSI.ClassNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubjectName {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSI.SubjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectName\' in table \'ListMoneyStudentSI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSI.SubjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TeacherName {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSI.TeacherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeacherName\' in table \'ListMoneyStudentSI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSI.TeacherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSI.ReceiptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt\' in table \'ListMoneyStudentSI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSI.ReceiptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneySI {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSI.MoneySIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneySI\' in table \'ListMoneyStudentSI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSI.MoneySIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSI.NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Number\' in table \'ListMoneyStudentSI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSI.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Semester {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSI.SemesterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Semester\' in table \'ListMoneyStudentSI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSI.SemesterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShoolYear {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSI.ShoolYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShoolYear\' in table \'ListMoneyStudentSI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSI.ShoolYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSI.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'ListMoneyStudentSI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSI.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrow_numberNull() {
                return this.IsNull(this.tableListMoneyStudentSI.row_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrow_numberNull() {
                this[this.tableListMoneyStudentSI.row_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStudentCodeNull() {
                return this.IsNull(this.tableListMoneyStudentSI.StudentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStudentCodeNull() {
                this[this.tableListMoneyStudentSI.StudentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStudentNameNull() {
                return this.IsNull(this.tableListMoneyStudentSI.StudentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStudentNameNull() {
                this[this.tableListMoneyStudentSI.StudentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNameNull() {
                return this.IsNull(this.tableListMoneyStudentSI.ClassNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNameNull() {
                this[this.tableListMoneyStudentSI.ClassNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNameNull() {
                return this.IsNull(this.tableListMoneyStudentSI.SubjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNameNull() {
                this[this.tableListMoneyStudentSI.SubjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeacherNameNull() {
                return this.IsNull(this.tableListMoneyStudentSI.TeacherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeacherNameNull() {
                this[this.tableListMoneyStudentSI.TeacherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptNull() {
                return this.IsNull(this.tableListMoneyStudentSI.ReceiptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptNull() {
                this[this.tableListMoneyStudentSI.ReceiptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneySINull() {
                return this.IsNull(this.tableListMoneyStudentSI.MoneySIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneySINull() {
                this[this.tableListMoneyStudentSI.MoneySIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberNull() {
                return this.IsNull(this.tableListMoneyStudentSI.NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberNull() {
                this[this.tableListMoneyStudentSI.NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSemesterNull() {
                return this.IsNull(this.tableListMoneyStudentSI.SemesterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSemesterNull() {
                this[this.tableListMoneyStudentSI.SemesterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShoolYearNull() {
                return this.IsNull(this.tableListMoneyStudentSI.ShoolYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShoolYearNull() {
                this[this.tableListMoneyStudentSI.ShoolYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableListMoneyStudentSI.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableListMoneyStudentSI.TotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GeneralMoneySASIClassRow : global::System.Data.DataRow {
            
            private GeneralMoneySASIClassDataTable tableGeneralMoneySASIClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GeneralMoneySASIClassRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGeneralMoneySASIClass = ((GeneralMoneySASIClassDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string row_number {
                get {
                    try {
                        return ((string)(this[this.tableGeneralMoneySASIClass.row_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'row_number\' in table \'GeneralMoneySASIClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralMoneySASIClass.row_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrainName {
                get {
                    try {
                        return ((string)(this[this.tableGeneralMoneySASIClass.TrainNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrainName\' in table \'GeneralMoneySASIClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralMoneySASIClass.TrainNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassCadreName {
                get {
                    try {
                        return ((string)(this[this.tableGeneralMoneySASIClass.ClassCadreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassCadreName\' in table \'GeneralMoneySASIClass\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGeneralMoneySASIClass.ClassCadreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassName {
                get {
                    try {
                        return ((string)(this[this.tableGeneralMoneySASIClass.ClassNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassName\' in table \'GeneralMoneySASIClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralMoneySASIClass.ClassNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumberMoney {
                get {
                    try {
                        return ((string)(this[this.tableGeneralMoneySASIClass.NumberMoneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberMoney\' in table \'GeneralMoneySASIClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralMoneySASIClass.NumberMoneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGeneralMoneySASIClass.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'GeneralMoneySASIClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralMoneySASIClass.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrow_numberNull() {
                return this.IsNull(this.tableGeneralMoneySASIClass.row_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrow_numberNull() {
                this[this.tableGeneralMoneySASIClass.row_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrainNameNull() {
                return this.IsNull(this.tableGeneralMoneySASIClass.TrainNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrainNameNull() {
                this[this.tableGeneralMoneySASIClass.TrainNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassCadreNameNull() {
                return this.IsNull(this.tableGeneralMoneySASIClass.ClassCadreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassCadreNameNull() {
                this[this.tableGeneralMoneySASIClass.ClassCadreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNameNull() {
                return this.IsNull(this.tableGeneralMoneySASIClass.ClassNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNameNull() {
                this[this.tableGeneralMoneySASIClass.ClassNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberMoneyNull() {
                return this.IsNull(this.tableGeneralMoneySASIClass.NumberMoneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberMoneyNull() {
                this[this.tableGeneralMoneySASIClass.NumberMoneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGeneralMoneySASIClass.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableGeneralMoneySASIClass.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GeneraMoneySASITeacherRow : global::System.Data.DataRow {
            
            private GeneraMoneySASITeacherDataTable tableGeneraMoneySASITeacher;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GeneraMoneySASITeacherRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGeneraMoneySASITeacher = ((GeneraMoneySASITeacherDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string row_number {
                get {
                    try {
                        return ((string)(this[this.tableGeneraMoneySASITeacher.row_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'row_number\' in table \'GeneraMoneySASITeacher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneraMoneySASITeacher.row_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TeacherName {
                get {
                    try {
                        return ((string)(this[this.tableGeneraMoneySASITeacher.TeacherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeacherName\' in table \'GeneraMoneySASITeacher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneraMoneySASITeacher.TeacherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassName {
                get {
                    try {
                        return ((string)(this[this.tableGeneraMoneySASITeacher.ClassNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassName\' in table \'GeneraMoneySASITeacher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneraMoneySASITeacher.ClassNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrainName {
                get {
                    try {
                        return ((string)(this[this.tableGeneraMoneySASITeacher.TrainNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrainName\' in table \'GeneraMoneySASITeacher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneraMoneySASITeacher.TrainNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumberStudent {
                get {
                    try {
                        return ((string)(this[this.tableGeneraMoneySASITeacher.NumberStudentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberStudent\' in table \'GeneraMoneySASITeacher\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGeneraMoneySASITeacher.NumberStudentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreditTheory {
                get {
                    try {
                        return ((string)(this[this.tableGeneraMoneySASITeacher.CreditTheoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditTheory\' in table \'GeneraMoneySASITeacher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneraMoneySASITeacher.CreditTheoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Creditpractice {
                get {
                    try {
                        return ((string)(this[this.tableGeneraMoneySASITeacher.CreditpracticeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Creditpractice\' in table \'GeneraMoneySASITeacher\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGeneraMoneySASITeacher.CreditpracticeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubjectName {
                get {
                    try {
                        return ((string)(this[this.tableGeneraMoneySASITeacher.SubjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectName\' in table \'GeneraMoneySASITeacher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneraMoneySASITeacher.SubjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneySASI {
                get {
                    try {
                        return ((string)(this[this.tableGeneraMoneySASITeacher.MoneySASIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneySASI\' in table \'GeneraMoneySASITeacher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneraMoneySASITeacher.MoneySASIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneyProctor {
                get {
                    try {
                        return ((string)(this[this.tableGeneraMoneySASITeacher.MoneyProctorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneyProctor\' in table \'GeneraMoneySASITeacher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneraMoneySASITeacher.MoneyProctorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneyExam {
                get {
                    try {
                        return ((string)(this[this.tableGeneraMoneySASITeacher.MoneyExamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneyExam\' in table \'GeneraMoneySASITeacher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneraMoneySASITeacher.MoneyExamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlusMoney {
                get {
                    try {
                        return ((string)(this[this.tableGeneraMoneySASITeacher.PlusMoneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlusMoney\' in table \'GeneraMoneySASITeacher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneraMoneySASITeacher.PlusMoneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalMoneySubject {
                get {
                    try {
                        return ((string)(this[this.tableGeneraMoneySASITeacher.TotalMoneySubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalMoneySubject\' in table \'GeneraMoneySASITeacher\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGeneraMoneySASITeacher.TotalMoneySubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrow_numberNull() {
                return this.IsNull(this.tableGeneraMoneySASITeacher.row_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrow_numberNull() {
                this[this.tableGeneraMoneySASITeacher.row_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeacherNameNull() {
                return this.IsNull(this.tableGeneraMoneySASITeacher.TeacherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeacherNameNull() {
                this[this.tableGeneraMoneySASITeacher.TeacherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNameNull() {
                return this.IsNull(this.tableGeneraMoneySASITeacher.ClassNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNameNull() {
                this[this.tableGeneraMoneySASITeacher.ClassNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrainNameNull() {
                return this.IsNull(this.tableGeneraMoneySASITeacher.TrainNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrainNameNull() {
                this[this.tableGeneraMoneySASITeacher.TrainNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberStudentNull() {
                return this.IsNull(this.tableGeneraMoneySASITeacher.NumberStudentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberStudentNull() {
                this[this.tableGeneraMoneySASITeacher.NumberStudentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditTheoryNull() {
                return this.IsNull(this.tableGeneraMoneySASITeacher.CreditTheoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditTheoryNull() {
                this[this.tableGeneraMoneySASITeacher.CreditTheoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditpracticeNull() {
                return this.IsNull(this.tableGeneraMoneySASITeacher.CreditpracticeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditpracticeNull() {
                this[this.tableGeneraMoneySASITeacher.CreditpracticeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNameNull() {
                return this.IsNull(this.tableGeneraMoneySASITeacher.SubjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNameNull() {
                this[this.tableGeneraMoneySASITeacher.SubjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneySASINull() {
                return this.IsNull(this.tableGeneraMoneySASITeacher.MoneySASIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneySASINull() {
                this[this.tableGeneraMoneySASITeacher.MoneySASIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneyProctorNull() {
                return this.IsNull(this.tableGeneraMoneySASITeacher.MoneyProctorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneyProctorNull() {
                this[this.tableGeneraMoneySASITeacher.MoneyProctorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneyExamNull() {
                return this.IsNull(this.tableGeneraMoneySASITeacher.MoneyExamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneyExamNull() {
                this[this.tableGeneraMoneySASITeacher.MoneyExamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlusMoneyNull() {
                return this.IsNull(this.tableGeneraMoneySASITeacher.PlusMoneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlusMoneyNull() {
                this[this.tableGeneraMoneySASITeacher.PlusMoneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalMoneySubjectNull() {
                return this.IsNull(this.tableGeneraMoneySASITeacher.TotalMoneySubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalMoneySubjectNull() {
                this[this.tableGeneraMoneySASITeacher.TotalMoneySubjectColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReceiptRow : global::System.Data.DataRow {
            
            private ReceiptDataTable tableReceipt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReceiptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReceipt = ((ReceiptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassName {
                get {
                    try {
                        return ((string)(this[this.tableReceipt.ClassNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassName\' in table \'Receipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReceipt.ClassNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubjectName {
                get {
                    try {
                        return ((string)(this[this.tableReceipt.SubjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectName\' in table \'Receipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReceipt.SubjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneySASI {
                get {
                    try {
                        return ((string)(this[this.tableReceipt.MoneySASIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneySASI\' in table \'Receipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReceipt.MoneySASIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumberCredit {
                get {
                    try {
                        return ((string)(this[this.tableReceipt.NumberCreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberCredit\' in table \'Receipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReceipt.NumberCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumberStudentID {
                get {
                    try {
                        return ((string)(this[this.tableReceipt.NumberStudentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberStudentID\' in table \'Receipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReceipt.NumberStudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNameNull() {
                return this.IsNull(this.tableReceipt.ClassNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNameNull() {
                this[this.tableReceipt.ClassNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNameNull() {
                return this.IsNull(this.tableReceipt.SubjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNameNull() {
                this[this.tableReceipt.SubjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneySASINull() {
                return this.IsNull(this.tableReceipt.MoneySASIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneySASINull() {
                this[this.tableReceipt.MoneySASIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberCreditNull() {
                return this.IsNull(this.tableReceipt.NumberCreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberCreditNull() {
                this[this.tableReceipt.NumberCreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberStudentIDNull() {
                return this.IsNull(this.tableReceipt.NumberStudentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberStudentIDNull() {
                this[this.tableReceipt.NumberStudentIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListTakeATestSASIRow : global::System.Data.DataRow {
            
            private ListTakeATestSASIDataTable tableListTakeATestSASI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListTakeATestSASIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListTakeATestSASI = ((ListTakeATestSASIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string row_number {
                get {
                    try {
                        return ((string)(this[this.tableListTakeATestSASI.row_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'row_number\' in table \'ListTakeATestSASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListTakeATestSASI.row_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StudentCode {
                get {
                    try {
                        return ((string)(this[this.tableListTakeATestSASI.StudentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentCode\' in table \'ListTakeATestSASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListTakeATestSASI.StudentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StudentName {
                get {
                    try {
                        return ((string)(this[this.tableListTakeATestSASI.StudentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentName\' in table \'ListTakeATestSASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListTakeATestSASI.StudentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BirthDay {
                get {
                    try {
                        return ((string)(this[this.tableListTakeATestSASI.BirthDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthDay\' in table \'ListTakeATestSASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListTakeATestSASI.BirthDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassName {
                get {
                    try {
                        return ((string)(this[this.tableListTakeATestSASI.ClassNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassName\' in table \'ListTakeATestSASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListTakeATestSASI.ClassNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubjectName {
                get {
                    try {
                        return ((string)(this[this.tableListTakeATestSASI.SubjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectName\' in table \'ListTakeATestSASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListTakeATestSASI.SubjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumberCredit {
                get {
                    try {
                        return ((string)(this[this.tableListTakeATestSASI.NumberCreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberCredit\' in table \'ListTakeATestSASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListTakeATestSASI.NumberCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt {
                get {
                    try {
                        return ((string)(this[this.tableListTakeATestSASI.ReceiptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt\' in table \'ListTakeATestSASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListTakeATestSASI.ReceiptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneySASI {
                get {
                    try {
                        return ((string)(this[this.tableListTakeATestSASI.MoneySASIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneySASI\' in table \'ListTakeATestSASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListTakeATestSASI.MoneySASIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartDayStudy {
                get {
                    try {
                        return ((string)(this[this.tableListTakeATestSASI.StartDayStudyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDayStudy\' in table \'ListTakeATestSASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListTakeATestSASI.StartDayStudyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndDayStudy {
                get {
                    try {
                        return ((string)(this[this.tableListTakeATestSASI.EndDayStudyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDayStudy\' in table \'ListTakeATestSASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListTakeATestSASI.EndDayStudyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrow_numberNull() {
                return this.IsNull(this.tableListTakeATestSASI.row_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrow_numberNull() {
                this[this.tableListTakeATestSASI.row_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStudentCodeNull() {
                return this.IsNull(this.tableListTakeATestSASI.StudentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStudentCodeNull() {
                this[this.tableListTakeATestSASI.StudentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStudentNameNull() {
                return this.IsNull(this.tableListTakeATestSASI.StudentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStudentNameNull() {
                this[this.tableListTakeATestSASI.StudentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthDayNull() {
                return this.IsNull(this.tableListTakeATestSASI.BirthDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthDayNull() {
                this[this.tableListTakeATestSASI.BirthDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNameNull() {
                return this.IsNull(this.tableListTakeATestSASI.ClassNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNameNull() {
                this[this.tableListTakeATestSASI.ClassNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNameNull() {
                return this.IsNull(this.tableListTakeATestSASI.SubjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNameNull() {
                this[this.tableListTakeATestSASI.SubjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberCreditNull() {
                return this.IsNull(this.tableListTakeATestSASI.NumberCreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberCreditNull() {
                this[this.tableListTakeATestSASI.NumberCreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptNull() {
                return this.IsNull(this.tableListTakeATestSASI.ReceiptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptNull() {
                this[this.tableListTakeATestSASI.ReceiptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneySASINull() {
                return this.IsNull(this.tableListTakeATestSASI.MoneySASIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneySASINull() {
                this[this.tableListTakeATestSASI.MoneySASIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartDayStudyNull() {
                return this.IsNull(this.tableListTakeATestSASI.StartDayStudyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartDayStudyNull() {
                this[this.tableListTakeATestSASI.StartDayStudyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndDayStudyNull() {
                return this.IsNull(this.tableListTakeATestSASI.EndDayStudyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndDayStudyNull() {
                this[this.tableListTakeATestSASI.EndDayStudyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListStudentToClassRow : global::System.Data.DataRow {
            
            private ListStudentToClassDataTable tableListStudentToClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListStudentToClassRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListStudentToClass = ((ListStudentToClassDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string row_number {
                get {
                    try {
                        return ((string)(this[this.tableListStudentToClass.row_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'row_number\' in table \'ListStudentToClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListStudentToClass.row_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassName {
                get {
                    try {
                        return ((string)(this[this.tableListStudentToClass.ClassNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassName\' in table \'ListStudentToClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListStudentToClass.ClassNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StudentName {
                get {
                    try {
                        return ((string)(this[this.tableListStudentToClass.StudentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentName\' in table \'ListStudentToClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListStudentToClass.StudentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BirthDay {
                get {
                    try {
                        return ((string)(this[this.tableListStudentToClass.BirthDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthDay\' in table \'ListStudentToClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListStudentToClass.BirthDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrainName {
                get {
                    try {
                        return ((string)(this[this.tableListStudentToClass.TrainNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrainName\' in table \'ListStudentToClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListStudentToClass.TrainNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumberStudent {
                get {
                    try {
                        return ((string)(this[this.tableListStudentToClass.NumberStudentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberStudent\' in table \'ListStudentToClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListStudentToClass.NumberStudentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubjectName {
                get {
                    try {
                        return ((string)(this[this.tableListStudentToClass.SubjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectName\' in table \'ListStudentToClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListStudentToClass.SubjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Creditpractice {
                get {
                    try {
                        return ((string)(this[this.tableListStudentToClass.CreditpracticeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Creditpractice\' in table \'ListStudentToClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListStudentToClass.CreditpracticeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreditTheory {
                get {
                    try {
                        return ((string)(this[this.tableListStudentToClass.CreditTheoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditTheory\' in table \'ListStudentToClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListStudentToClass.CreditTheoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt {
                get {
                    try {
                        return ((string)(this[this.tableListStudentToClass.ReceiptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt\' in table \'ListStudentToClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListStudentToClass.ReceiptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneySASI {
                get {
                    try {
                        return ((string)(this[this.tableListStudentToClass.MoneySASIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneySASI\' in table \'ListStudentToClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListStudentToClass.MoneySASIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlusMoney {
                get {
                    try {
                        return ((string)(this[this.tableListStudentToClass.PlusMoneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlusMoney\' in table \'ListStudentToClass\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListStudentToClass.PlusMoneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrow_numberNull() {
                return this.IsNull(this.tableListStudentToClass.row_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrow_numberNull() {
                this[this.tableListStudentToClass.row_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNameNull() {
                return this.IsNull(this.tableListStudentToClass.ClassNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNameNull() {
                this[this.tableListStudentToClass.ClassNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStudentNameNull() {
                return this.IsNull(this.tableListStudentToClass.StudentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStudentNameNull() {
                this[this.tableListStudentToClass.StudentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthDayNull() {
                return this.IsNull(this.tableListStudentToClass.BirthDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthDayNull() {
                this[this.tableListStudentToClass.BirthDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrainNameNull() {
                return this.IsNull(this.tableListStudentToClass.TrainNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrainNameNull() {
                this[this.tableListStudentToClass.TrainNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberStudentNull() {
                return this.IsNull(this.tableListStudentToClass.NumberStudentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberStudentNull() {
                this[this.tableListStudentToClass.NumberStudentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNameNull() {
                return this.IsNull(this.tableListStudentToClass.SubjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNameNull() {
                this[this.tableListStudentToClass.SubjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditpracticeNull() {
                return this.IsNull(this.tableListStudentToClass.CreditpracticeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditpracticeNull() {
                this[this.tableListStudentToClass.CreditpracticeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditTheoryNull() {
                return this.IsNull(this.tableListStudentToClass.CreditTheoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditTheoryNull() {
                this[this.tableListStudentToClass.CreditTheoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptNull() {
                return this.IsNull(this.tableListStudentToClass.ReceiptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptNull() {
                this[this.tableListStudentToClass.ReceiptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneySASINull() {
                return this.IsNull(this.tableListStudentToClass.MoneySASIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneySASINull() {
                this[this.tableListStudentToClass.MoneySASIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlusMoneyNull() {
                return this.IsNull(this.tableListStudentToClass.PlusMoneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlusMoneyNull() {
                this[this.tableListStudentToClass.PlusMoneyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListMoneyStudentSIQuaterRow : global::System.Data.DataRow {
            
            private ListMoneyStudentSIQuaterDataTable tableListMoneyStudentSIQuater;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListMoneyStudentSIQuaterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListMoneyStudentSIQuater = ((ListMoneyStudentSIQuaterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string row_number {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSIQuater.row_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'row_number\' in table \'ListMoneyStudentSIQuater\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSIQuater.row_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StudentCode {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSIQuater.StudentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentCode\' in table \'ListMoneyStudentSIQuater\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSIQuater.StudentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StudentName {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSIQuater.StudentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentName\' in table \'ListMoneyStudentSIQuater\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSIQuater.StudentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassName {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSIQuater.ClassNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassName\' in table \'ListMoneyStudentSIQuater\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSIQuater.ClassNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubjectName {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSIQuater.SubjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectName\' in table \'ListMoneyStudentSIQuater\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSIQuater.SubjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TeacherName {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSIQuater.TeacherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeacherName\' in table \'ListMoneyStudentSIQuater\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSIQuater.TeacherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneySI {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSIQuater.MoneySIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneySI\' in table \'ListMoneyStudentSIQuater\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSIQuater.MoneySIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSIQuater.NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Number\' in table \'ListMoneyStudentSIQuater\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSIQuater.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Semester {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSIQuater.SemesterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Semester\' in table \'ListMoneyStudentSIQuater\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSIQuater.SemesterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShoolYear {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSIQuater.ShoolYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShoolYear\' in table \'ListMoneyStudentSIQuater\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSIQuater.ShoolYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total {
                get {
                    try {
                        return ((string)(this[this.tableListMoneyStudentSIQuater.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'ListMoneyStudentSIQuater\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneyStudentSIQuater.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrow_numberNull() {
                return this.IsNull(this.tableListMoneyStudentSIQuater.row_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrow_numberNull() {
                this[this.tableListMoneyStudentSIQuater.row_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStudentCodeNull() {
                return this.IsNull(this.tableListMoneyStudentSIQuater.StudentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStudentCodeNull() {
                this[this.tableListMoneyStudentSIQuater.StudentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStudentNameNull() {
                return this.IsNull(this.tableListMoneyStudentSIQuater.StudentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStudentNameNull() {
                this[this.tableListMoneyStudentSIQuater.StudentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNameNull() {
                return this.IsNull(this.tableListMoneyStudentSIQuater.ClassNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNameNull() {
                this[this.tableListMoneyStudentSIQuater.ClassNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNameNull() {
                return this.IsNull(this.tableListMoneyStudentSIQuater.SubjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNameNull() {
                this[this.tableListMoneyStudentSIQuater.SubjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeacherNameNull() {
                return this.IsNull(this.tableListMoneyStudentSIQuater.TeacherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeacherNameNull() {
                this[this.tableListMoneyStudentSIQuater.TeacherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneySINull() {
                return this.IsNull(this.tableListMoneyStudentSIQuater.MoneySIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneySINull() {
                this[this.tableListMoneyStudentSIQuater.MoneySIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberNull() {
                return this.IsNull(this.tableListMoneyStudentSIQuater.NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberNull() {
                this[this.tableListMoneyStudentSIQuater.NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSemesterNull() {
                return this.IsNull(this.tableListMoneyStudentSIQuater.SemesterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSemesterNull() {
                this[this.tableListMoneyStudentSIQuater.SemesterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShoolYearNull() {
                return this.IsNull(this.tableListMoneyStudentSIQuater.ShoolYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShoolYearNull() {
                this[this.tableListMoneyStudentSIQuater.ShoolYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableListMoneyStudentSIQuater.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableListMoneyStudentSIQuater.TotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GeneralReceiptMoneyRow : global::System.Data.DataRow {
            
            private GeneralReceiptMoneyDataTable tableGeneralReceiptMoney;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GeneralReceiptMoneyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGeneralReceiptMoney = ((GeneralReceiptMoneyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string row_number {
                get {
                    try {
                        return ((string)(this[this.tableGeneralReceiptMoney.row_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'row_number\' in table \'GeneralReceiptMoney\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralReceiptMoney.row_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StudentCode {
                get {
                    try {
                        return ((string)(this[this.tableGeneralReceiptMoney.StudentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentCode\' in table \'GeneralReceiptMoney\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralReceiptMoney.StudentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StudentName {
                get {
                    try {
                        return ((string)(this[this.tableGeneralReceiptMoney.StudentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentName\' in table \'GeneralReceiptMoney\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralReceiptMoney.StudentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassName {
                get {
                    try {
                        return ((string)(this[this.tableGeneralReceiptMoney.ClassNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassName\' in table \'GeneralReceiptMoney\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralReceiptMoney.ClassNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubjectName {
                get {
                    try {
                        return ((string)(this[this.tableGeneralReceiptMoney.SubjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectName\' in table \'GeneralReceiptMoney\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralReceiptMoney.SubjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt {
                get {
                    try {
                        return ((string)(this[this.tableGeneralReceiptMoney.ReceiptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt\' in table \'GeneralReceiptMoney\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralReceiptMoney.ReceiptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneySA {
                get {
                    try {
                        return ((string)(this[this.tableGeneralReceiptMoney.MoneySAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneySA\' in table \'GeneralReceiptMoney\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralReceiptMoney.MoneySAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneySI {
                get {
                    try {
                        return ((string)(this[this.tableGeneralReceiptMoney.MoneySIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneySI\' in table \'GeneralReceiptMoney\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralReceiptMoney.MoneySIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneyRetakeATestEnd {
                get {
                    try {
                        return ((string)(this[this.tableGeneralReceiptMoney.MoneyRetakeATestEndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneyRetakeATestEnd\' in table \'GeneralReceiptMoney\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGeneralReceiptMoney.MoneyRetakeATestEndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneyRetakeATestCenter {
                get {
                    try {
                        return ((string)(this[this.tableGeneralReceiptMoney.MoneyRetakeATestCenterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneyRetakeATestCenter\' in table \'GeneralReceiptMoney\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralReceiptMoney.MoneyRetakeATestCenterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total {
                get {
                    try {
                        return ((string)(this[this.tableGeneralReceiptMoney.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'GeneralReceiptMoney\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralReceiptMoney.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrow_numberNull() {
                return this.IsNull(this.tableGeneralReceiptMoney.row_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrow_numberNull() {
                this[this.tableGeneralReceiptMoney.row_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStudentCodeNull() {
                return this.IsNull(this.tableGeneralReceiptMoney.StudentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStudentCodeNull() {
                this[this.tableGeneralReceiptMoney.StudentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStudentNameNull() {
                return this.IsNull(this.tableGeneralReceiptMoney.StudentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStudentNameNull() {
                this[this.tableGeneralReceiptMoney.StudentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNameNull() {
                return this.IsNull(this.tableGeneralReceiptMoney.ClassNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNameNull() {
                this[this.tableGeneralReceiptMoney.ClassNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNameNull() {
                return this.IsNull(this.tableGeneralReceiptMoney.SubjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNameNull() {
                this[this.tableGeneralReceiptMoney.SubjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptNull() {
                return this.IsNull(this.tableGeneralReceiptMoney.ReceiptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptNull() {
                this[this.tableGeneralReceiptMoney.ReceiptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneySANull() {
                return this.IsNull(this.tableGeneralReceiptMoney.MoneySAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneySANull() {
                this[this.tableGeneralReceiptMoney.MoneySAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneySINull() {
                return this.IsNull(this.tableGeneralReceiptMoney.MoneySIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneySINull() {
                this[this.tableGeneralReceiptMoney.MoneySIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneyRetakeATestEndNull() {
                return this.IsNull(this.tableGeneralReceiptMoney.MoneyRetakeATestEndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneyRetakeATestEndNull() {
                this[this.tableGeneralReceiptMoney.MoneyRetakeATestEndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneyRetakeATestCenterNull() {
                return this.IsNull(this.tableGeneralReceiptMoney.MoneyRetakeATestCenterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneyRetakeATestCenterNull() {
                this[this.tableGeneralReceiptMoney.MoneyRetakeATestCenterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableGeneralReceiptMoney.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableGeneralReceiptMoney.TotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StatisticStudentsRow : global::System.Data.DataRow {
            
            private StatisticStudentsDataTable tableStatisticStudents;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StatisticStudentsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStatisticStudents = ((StatisticStudentsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string row_number {
                get {
                    try {
                        return ((string)(this[this.tableStatisticStudents.row_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'row_number\' in table \'StatisticStudents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatisticStudents.row_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubjectName {
                get {
                    try {
                        return ((string)(this[this.tableStatisticStudents.SubjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectName\' in table \'StatisticStudents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatisticStudents.SubjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassName {
                get {
                    try {
                        return ((string)(this[this.tableStatisticStudents.ClassNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassName\' in table \'StatisticStudents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatisticStudents.ClassNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountStudentRetakeEnd {
                get {
                    try {
                        return ((string)(this[this.tableStatisticStudents.CountStudentRetakeEndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountStudentRetakeEnd\' in table \'StatisticStudents\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableStatisticStudents.CountStudentRetakeEndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountStudentRetakeCenter {
                get {
                    try {
                        return ((string)(this[this.tableStatisticStudents.CountStudentRetakeCenterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountStudentRetakeCenter\' in table \'StatisticStudents\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableStatisticStudents.CountStudentRetakeCenterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountStudentRetakeSA {
                get {
                    try {
                        return ((string)(this[this.tableStatisticStudents.CountStudentRetakeSAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountStudentRetakeSA\' in table \'StatisticStudents\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStatisticStudents.CountStudentRetakeSAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountStudentRetakeSI {
                get {
                    try {
                        return ((string)(this[this.tableStatisticStudents.CountStudentRetakeSIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountStudentRetakeSI\' in table \'StatisticStudents\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStatisticStudents.CountStudentRetakeSIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TeacherName {
                get {
                    try {
                        return ((string)(this[this.tableStatisticStudents.TeacherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeacherName\' in table \'StatisticStudents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatisticStudents.TeacherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableStatisticStudents.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'StatisticStudents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatisticStudents.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrow_numberNull() {
                return this.IsNull(this.tableStatisticStudents.row_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrow_numberNull() {
                this[this.tableStatisticStudents.row_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNameNull() {
                return this.IsNull(this.tableStatisticStudents.SubjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNameNull() {
                this[this.tableStatisticStudents.SubjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNameNull() {
                return this.IsNull(this.tableStatisticStudents.ClassNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNameNull() {
                this[this.tableStatisticStudents.ClassNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountStudentRetakeEndNull() {
                return this.IsNull(this.tableStatisticStudents.CountStudentRetakeEndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountStudentRetakeEndNull() {
                this[this.tableStatisticStudents.CountStudentRetakeEndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountStudentRetakeCenterNull() {
                return this.IsNull(this.tableStatisticStudents.CountStudentRetakeCenterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountStudentRetakeCenterNull() {
                this[this.tableStatisticStudents.CountStudentRetakeCenterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountStudentRetakeSANull() {
                return this.IsNull(this.tableStatisticStudents.CountStudentRetakeSAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountStudentRetakeSANull() {
                this[this.tableStatisticStudents.CountStudentRetakeSAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountStudentRetakeSINull() {
                return this.IsNull(this.tableStatisticStudents.CountStudentRetakeSIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountStudentRetakeSINull() {
                this[this.tableStatisticStudents.CountStudentRetakeSIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeacherNameNull() {
                return this.IsNull(this.tableStatisticStudents.TeacherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeacherNameNull() {
                this[this.tableStatisticStudents.TeacherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableStatisticStudents.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableStatisticStudents.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListMoneySASIRow : global::System.Data.DataRow {
            
            private ListMoneySASIDataTable tableListMoneySASI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListMoneySASIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListMoneySASI = ((ListMoneySASIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string row_number {
                get {
                    try {
                        return ((string)(this[this.tableListMoneySASI.row_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'row_number\' in table \'ListMoneySASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneySASI.row_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StudentName {
                get {
                    try {
                        return ((string)(this[this.tableListMoneySASI.StudentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentName\' in table \'ListMoneySASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneySASI.StudentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassName {
                get {
                    try {
                        return ((string)(this[this.tableListMoneySASI.ClassNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassName\' in table \'ListMoneySASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneySASI.ClassNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubjectName {
                get {
                    try {
                        return ((string)(this[this.tableListMoneySASI.SubjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectName\' in table \'ListMoneySASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneySASI.SubjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TheoryNumber {
                get {
                    try {
                        return ((string)(this[this.tableListMoneySASI.TheoryNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TheoryNumber\' in table \'ListMoneySASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneySASI.TheoryNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PracticeNumber {
                get {
                    try {
                        return ((string)(this[this.tableListMoneySASI.PracticeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PracticeNumber\' in table \'ListMoneySASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneySASI.PracticeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TeacherName {
                get {
                    try {
                        return ((string)(this[this.tableListMoneySASI.TeacherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeacherName\' in table \'ListMoneySASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneySASI.TeacherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneyNumber {
                get {
                    try {
                        return ((string)(this[this.tableListMoneySASI.MoneyNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneyNumber\' in table \'ListMoneySASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneySASI.MoneyNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableListMoneySASI.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ListMoneySASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneySASI.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegisterDay {
                get {
                    try {
                        return ((string)(this[this.tableListMoneySASI.RegisterDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegisterDay\' in table \'ListMoneySASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneySASI.RegisterDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt {
                get {
                    try {
                        return ((string)(this[this.tableListMoneySASI.ReceiptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt\' in table \'ListMoneySASI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListMoneySASI.ReceiptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrow_numberNull() {
                return this.IsNull(this.tableListMoneySASI.row_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrow_numberNull() {
                this[this.tableListMoneySASI.row_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStudentNameNull() {
                return this.IsNull(this.tableListMoneySASI.StudentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStudentNameNull() {
                this[this.tableListMoneySASI.StudentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNameNull() {
                return this.IsNull(this.tableListMoneySASI.ClassNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNameNull() {
                this[this.tableListMoneySASI.ClassNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNameNull() {
                return this.IsNull(this.tableListMoneySASI.SubjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNameNull() {
                this[this.tableListMoneySASI.SubjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTheoryNumberNull() {
                return this.IsNull(this.tableListMoneySASI.TheoryNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTheoryNumberNull() {
                this[this.tableListMoneySASI.TheoryNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPracticeNumberNull() {
                return this.IsNull(this.tableListMoneySASI.PracticeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPracticeNumberNull() {
                this[this.tableListMoneySASI.PracticeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeacherNameNull() {
                return this.IsNull(this.tableListMoneySASI.TeacherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeacherNameNull() {
                this[this.tableListMoneySASI.TeacherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneyNumberNull() {
                return this.IsNull(this.tableListMoneySASI.MoneyNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneyNumberNull() {
                this[this.tableListMoneySASI.MoneyNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableListMoneySASI.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableListMoneySASI.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegisterDayNull() {
                return this.IsNull(this.tableListMoneySASI.RegisterDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegisterDayNull() {
                this[this.tableListMoneySASI.RegisterDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptNull() {
                return this.IsNull(this.tableListMoneySASI.ReceiptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptNull() {
                this[this.tableListMoneySASI.ReceiptColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RetestListRow : global::System.Data.DataRow {
            
            private RetestListDataTable tableRetestList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RetestListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRetestList = ((RetestListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string row_Number {
                get {
                    try {
                        return ((string)(this[this.tableRetestList.row_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'row_Number\' in table \'RetestList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRetestList.row_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StudentName {
                get {
                    try {
                        return ((string)(this[this.tableRetestList.StudentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentName\' in table \'RetestList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRetestList.StudentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassName {
                get {
                    try {
                        return ((string)(this[this.tableRetestList.ClassNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassName\' in table \'RetestList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRetestList.ClassNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubjectName {
                get {
                    try {
                        return ((string)(this[this.tableRetestList.SubjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectName\' in table \'RetestList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRetestList.SubjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TeacherName {
                get {
                    try {
                        return ((string)(this[this.tableRetestList.TeacherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeacherName\' in table \'RetestList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRetestList.TeacherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoneyRetake {
                get {
                    try {
                        return ((string)(this[this.tableRetestList.MoneyRetakeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoneyRetake\' in table \'RetestList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRetestList.MoneyRetakeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LearningType {
                get {
                    try {
                        return ((string)(this[this.tableRetestList.LearningTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LearningType\' in table \'RetestList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRetestList.LearningTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegisterDay {
                get {
                    try {
                        return ((string)(this[this.tableRetestList.RegisterDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegisterDay\' in table \'RetestList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRetestList.RegisterDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt {
                get {
                    try {
                        return ((string)(this[this.tableRetestList.ReceiptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt\' in table \'RetestList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRetestList.ReceiptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrow_NumberNull() {
                return this.IsNull(this.tableRetestList.row_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrow_NumberNull() {
                this[this.tableRetestList.row_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStudentNameNull() {
                return this.IsNull(this.tableRetestList.StudentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStudentNameNull() {
                this[this.tableRetestList.StudentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNameNull() {
                return this.IsNull(this.tableRetestList.ClassNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNameNull() {
                this[this.tableRetestList.ClassNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNameNull() {
                return this.IsNull(this.tableRetestList.SubjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNameNull() {
                this[this.tableRetestList.SubjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeacherNameNull() {
                return this.IsNull(this.tableRetestList.TeacherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeacherNameNull() {
                this[this.tableRetestList.TeacherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneyRetakeNull() {
                return this.IsNull(this.tableRetestList.MoneyRetakeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneyRetakeNull() {
                this[this.tableRetestList.MoneyRetakeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLearningTypeNull() {
                return this.IsNull(this.tableRetestList.LearningTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLearningTypeNull() {
                this[this.tableRetestList.LearningTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegisterDayNull() {
                return this.IsNull(this.tableRetestList.RegisterDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegisterDayNull() {
                this[this.tableRetestList.RegisterDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptNull() {
                return this.IsNull(this.tableRetestList.ReceiptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptNull() {
                this[this.tableRetestList.ReceiptColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListMoneyStudentSIRowChangeEvent : global::System.EventArgs {
            
            private ListMoneyStudentSIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneyStudentSIRowChangeEvent(ListMoneyStudentSIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneyStudentSIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GeneralMoneySASIClassRowChangeEvent : global::System.EventArgs {
            
            private GeneralMoneySASIClassRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralMoneySASIClassRowChangeEvent(GeneralMoneySASIClassRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralMoneySASIClassRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GeneraMoneySASITeacherRowChangeEvent : global::System.EventArgs {
            
            private GeneraMoneySASITeacherRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneraMoneySASITeacherRowChangeEvent(GeneraMoneySASITeacherRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneraMoneySASITeacherRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReceiptRowChangeEvent : global::System.EventArgs {
            
            private ReceiptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReceiptRowChangeEvent(ReceiptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReceiptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListTakeATestSASIRowChangeEvent : global::System.EventArgs {
            
            private ListTakeATestSASIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListTakeATestSASIRowChangeEvent(ListTakeATestSASIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListTakeATestSASIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListStudentToClassRowChangeEvent : global::System.EventArgs {
            
            private ListStudentToClassRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListStudentToClassRowChangeEvent(ListStudentToClassRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListStudentToClassRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListMoneyStudentSIQuaterRowChangeEvent : global::System.EventArgs {
            
            private ListMoneyStudentSIQuaterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneyStudentSIQuaterRowChangeEvent(ListMoneyStudentSIQuaterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneyStudentSIQuaterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GeneralReceiptMoneyRowChangeEvent : global::System.EventArgs {
            
            private GeneralReceiptMoneyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralReceiptMoneyRowChangeEvent(GeneralReceiptMoneyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralReceiptMoneyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StatisticStudentsRowChangeEvent : global::System.EventArgs {
            
            private StatisticStudentsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StatisticStudentsRowChangeEvent(StatisticStudentsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StatisticStudentsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListMoneySASIRowChangeEvent : global::System.EventArgs {
            
            private ListMoneySASIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneySASIRowChangeEvent(ListMoneySASIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListMoneySASIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RetestListRowChangeEvent : global::System.EventArgs {
            
            private RetestListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetestListRowChangeEvent(RetestListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetestListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591