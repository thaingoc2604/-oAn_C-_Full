<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="btnOK.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="btnClose.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtName.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtPassWord.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="labelControl1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="labelControl2.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="groupControl1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="chkSave.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAAAAABoBQAANgAAACAgAAAAAAAAqAgAAJ4FAAAwMAAAAAAAAKgOAABGDgAAKAAAABAA
        AAAgAAAAAQAIAAAAAABAAQAAAAAAAAAAAAAAAAAAAAAAALy6vgAAAAAAsq+wAKugogCuqakAUE5OAEZF
        RQDGxcUAqqmpAJuFgwCri4YAoIN+ALGkogDi3NoAf3l2AOHf3gDS0M8AoJuXALaroQDBu7UAsK2qAKak
        ogCbmZcAlpSSAMnHxQC8urgAtbSzAMqwlQCunIgAr6qkAKOppQCb4eYAjPX/ALH1/wBppbAAgOn/AIni
        9QC38f4AXKa7AHfB1ABy2PYAd4qSAHDF6QBxsM0ANHufAECKsABhzP8AXK7VAG2szABZW1wAvMDCAECi
        1gBTwv8AVafTADFccwBms94AfsTrADtITwDG6/8ATLLuADyHtwA5eJ0AXcL9AHLK/wBzyv0An83oAJvC
        2QBJt/8ARqjpAFG1+QBUuv8AMWyUAJPR/ABcf5YAp9b1AFptegCowtQAcX+IACqR2wAzmuMAK4C+AEex
        /wBnseYAdqC/AC06RACJkJUAMovVADGFxwBDrP8ANoC/AEmv/wBGYngAqMnkAHKEkgA3jNsAO4fMAE2r
        /wBLk9QAV4i2ALzL2QCJkJYAutr7AFRbYgAwMTQA6enqAODg4ADf398A2traANjY2ADW1tYA1NTUANLS
        0gDMzMwAy8vLAMfHxwDBwcEAv7+/ALu7uwC3t7cAtLS0ALGxsQCmpqYAoqKiAI6OjgCJiYkAc3NzAGJi
        YgBdXV0AWVlZAFRUVABTU1MAUFBQAE9PTwBOTk4ATU1NAD4+PgA9PT0AMTExAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEBAQF7ewEBAQEBAQEBAQEBAQF7
        gokBAQEBAQEBAQEBAQFua3OIAQEBATl/AQEBAQEBcHF3BgEBASsmgwEBAQEBAXJyeoUBAUI4L30BAQEB
        AQF1dHt+AQEwQCx9AQEBAQEBeRUOgAFMKjs2AQEBAQGBhhlVSWdLNUQzTQEBAQF2dQgCNzQ8LT5OPQEB
        AQFqcHgNQS5YICNPUGYBAQEBbWwWZChDXiIkWldUfAEBAW9oEVMhYF8JKVJGR3wBAQEHaQ9jZTo/JwtZ
        UVsBAQEBExwxFDJcJR8KYVZ8AQEBARAbF4SHBV0DHkViAQEBAQEBGBIdGgQMAEpIAQEBAQEB/P8AAPj/
        AADw8+TY8OPbyvDDAADwwwBl8IeYRcAHAACADwAAAA8AAAAHAOUAB9zxAA8AAAAPrFcAH15PgD8AACgA
        AAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAb21vAExLTADMy8wAiIKEAKyX
        mADSvLwAhn19AKqkpACVkZEAv76+ALOysgCcm5sA0J6cANKmpQDaop8AvpmXAKOLigDNqqcAmIeEAMe9
        ugC+t7QAs6unALawrQCcmpkA0c/OAJ6bmQChnpwAfXdyAJ+ZlADl4NwA4dzYANjIuQDrw5oAaWZjAIuI
        hQDb19MA8e3pAJWUkwCvrq0A3L2cAKuVfgDtz7AAt6OOAKWbjgCXlpQAb29tAFZWVQDn5+YAnZ2cAJv/
        /wDV//8A8///ADEyMgA5OjoA+Pn5APHy8gCjpKQAlfv/AKH9/wDL/f8Akvn/AIzt8wCP9/4Aj9HWALz5
        /wCLuL0Ahu3/AJft+wB64fYAoe//AH3l/wBnyuUAacHZAIPl/gBw3P8AcNb1AHbd/wBqvNcARqfKAHDY
        /wB02f8AeN3/AG2swQC26/4Att/tAOn4/QA4lroASazVAF/C6ABq0/0Aa8vxAJDU7gA3c40AZsz5AHXT
        +wB+1fsAH1x6AFO67wBfyfsAY8z+AFeiyQBHhqUASV5oAGqFkgASXooASq/pAEyu5QBWvPUAXcP8AEeT
        vQAhQlQAUpO4ABN5ugAcgsIAH2ONADib2ABHsvUATLb3AFO9/wBawP8AYcP/AEhmeABTcIIAb3yEACOJ
        zgAoeK0AJm+gADWNygBDpusASbX/ACdhhwBMsfgATrT7AFC2+gBSuf8AVbv/AFe8/wBTqucAYrTtAGvE
        /wBGf6cAeMr/AHqz2ABgdoUAYG12ABV7xwAlidYAInWyADOY5QA5oO4ALHq0AD6l8gBCqPIAMXetACde
        iABLsf8ATbP/AE+1/wBNksYAKUxnADthfgBhncsAXIeoAJzU/QA5pP8ARKr/AEet/wApY5IAQGSBAIXJ
        /wArP08Aa5W3AFlsewDE5P0AGIbnACGO7AAuk+4AMJbwADae/wA1m/cAOZ/+ADqi/wA8ov4AOp70AD+l
        /wBDqP8AW7D/AHi7+QCJsdQAMjk/AC6X/gAymv4ANJr/AHWw6ACdxOsApMXkAC80OQB+iJIAsLK0AJ+g
        oQCMjY4Afn+AAHSm2wDh5eoAkZKUAN3e4AB1dnoAxcXGAP///wD19fUA7e3tAOrq6gDj4+MA29vbANbW
        1gDU1NQA0tLSAM7OzgDIyMgAwsLCAMHBwQC8vLwAu7u7ALm5uQC2trYAtbW1AK+vrwCtra0Aq6urAKmp
        qQCnp6cApKSkAKOjowCfn58AmpqaAJeXlwCUlJQAk5OTAISEhAB6enoAcnJyAHBwcABvb28AYGBgAFlZ
        WQBSUlIARkZGAEBAQAA/Pz8APDw8ADo6OgA4ODgANzc3ADU1NQAAAAAAAAAAAAAAAAAAAAAA8PIv/fMA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOXd1NTzNQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4tHO
        1gr7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoztkL2PcAAAAAAAAAAGdvbzXvAAAAAAAAAAAAAAAA
        AOzQ3OHa+QAAAAAAAABuj0hIYf0AAAAAAAAAAAAAAADcA9PlCuL6AAAAAAAAAHBWRENP+wAAAAAAAAAA
        AAAAAADIOOTd5fwAAAAAAABlaVWqh0n4AAAAAAAAAAAAAAAAAO/ayNvt9gAAAAAAAGVcX7hNV+8AAAAA
        AAAAAAAAAADk2Njt28r1AAAAAAAAZTx1mEVhAAAAAAAAAAAAAAAAAADlzsnc8fAAAAAAAKxXVJVeT3wA
        AAAAAAAAAAAAAAAA7u8Kyd30AAAAAABlSWB1lUyDAAAAAAAAAAAAAAAAANDc5OrvCi8AAAAAAJBORpNi
        WHsAAAAAAAAAAAAAAAAA4dfl7SMVAvYAAABwl2tbk15zAAAAAAAAAAAAAPIv/vzK2SfJaKKaq/oAjz55
        t5Nqa60AAAAAAAAAAADqCgvm8/HgF6x2ZHd0oL5PPaaxcm1/AAAAAAAAAAAA3tcK3tU4A+PHilFtnE1Z
        lFtRtZJ0anoAAAAAAAAAAADizuDk2tLRHr1jUrqcUTJFWniycXZ+AAAAAAAAAAAAAOLVC8jQ1NHMi0dk
        wZ1ROj1QiHF9makAAAAAAAAAAAAA3jDi6+HfH8NjQ6fBnkoyP1GGcbiXyQAAAAAAAAAAAAAK0+Lr5/HP
        ikNRwbOWV0Q7UIe1tJv+AAAAAAAAAAAA6No44DHNLMRaPZ2/s42RXUBGibO5gYPFAAAAAAAAAADo1tPf
        6SbKiz1Hv8CxrRIFelNUu7Z4bJsAAAAAAAAAAOgw0t3oHayONFa8v8CffBAQZ2akuolsoQAAAAAAAAAA
        6DjR09kLyMuqVjSkt4JIaBATg6+5eIDGAAAAAAAAAAAY6dDU0TcwJMS8rjRUjEs+Bw17sLqFqAAAAAAA
        AAAAABgpKS7o3tbTJc68pDM8RD8HD5DAupatAAAAAAAAAAAAGCEo9/XYCww5ChnEqkEzQhEQo6W3lwAA
        AAAAAAAAAAAYKyoi/vfs2dfg5hrGn0ITDgeKtrSpAAAAAAAAAAAAAADqKCocAjb9+fj4+gIBBRITQEe5
        k8YAAAAAAAAAAAAAAAAYKyogFhsxDBsWFAYFBI9KSoTCAAAAAAAAAAAAAAAAAAAALR0WFBkDFQgJGAAA
        AK6uAAAAAAAAAAAAAAAAAAAAAAAAAADo6OjoAAAAAAAAAAAAAAAAAAAAAAAAAP/wf///4H///+B////g
        f4P/4H8D/8B/A//gfgP/4H4D/8B+B//gfAf/wPgP/4D4D/+AcB/4ACAf8AAAP+AAAD/gAAB/4AAAf+AA
        AH/gAAB/wAAAP8AAAD/AAAA/wAAAP8AAAH/AAAB/wAAA/8AAAP/gAAD/8AAB//wA5///h///KAAAADAA
        AABgAAAAAQAIAAAAAACACgAAAAAAAAAAAAAAAAAAAAAAAAAAAADInZ0A0qioAM6wsADCpqYA4cPDALei
        ogDu3d0ArqWlAJqUlACIg4MA08zMAMrExABta2sA1tTUANu7tgCaiocA3NfWAIR8egB8dXMAr5WMAOXT
        yQCNgHgA+9OrANCxkgCzopIAxrWlAHBubADivZYA/OnVAJ+alADZ1M4Az8vGANnQvwCtrawAm///AImz
        swCexsYAcoODAPH//wD5//8AmfL1AKX6/ADG/v8AlPr/AJfn7AC6/P8A0v3/AN39/wDo/v8Akvj/AI7z
        /wCU9P4Ac9nmANf1+QBozuAAf+X3AInu/wCF6/8Ahuz/AIPg8wB33fQAguj/AE2zzQCA5f8ATbPUAGvR
        7wB53v4ARajKAG7U+gB12/8Ak+P+AMXi7ABr0fkAb9X+AHHX/gCx6P8AVLXfAGvR/wBt0v8AdNT/AHjW
        /wCr5f8AGUxmAD+fzQA7kb0ARqzdAB1HWwBcwvQAZMr/AGbM/gBozv8AV6zVACU9SQDB6v8AYGZpAAVm
        mQAJb6oAFnesAEmv5wBVu/UAX7rtADNWaQButNkALjU5AA91tQAwkssATrT0AEyy7gBSuPkAWL76AF3C
        /gA2a4wAKVBnAKvT6wBkcHcAG4HJABp+wAAba6EAKY/XACmP0wAdXYgANJjdACp7rwAiVXcASa/yAEyy
        +ABPtfcAU7n/AFS6/wBXvf8AUJjIADdfegBShakAgMz+AJfO8gBykqgAWWp1AHB9hgAddrsAI4fOACWL
        1gAtkNwANZvmAD6k8QA9nuYAQKXwAEOp9gBKsP0ASa/7AEyy/wBOtP4AKkphAGN3hgByf4kAIITVACSK
        3AAskuQAN53zADqg8wA1jtkAR63/ACZbhQBGdJoAMURTAIy32QAoi+IALZPwADWb+AA7ofkAPaP/AD6k
        /wBApv8AV636AGe0+wCxyuEA1uz/ADGX+wAzmf8AOJ7+ADWO4wA+nv4AQ5zyAEul/QBMofQAyNXiAMjO
        1AD+/v4A+vr6APX19QDz8/MA8PDwAO3t7QDq6uoA5ubmAOXl5QDj4+MA4eHhAN/f3wDc3NwA2dnZANfX
        1wDU1NQA0dHRAM7OzgDMzMwAycnJAMbGxgDBwcEAvr6+ALy8vAC6uroAubm5ALe3twC0tLQAs7OzALGx
        sQCurq4Aq6urAKmpqQCnp6cApKSkAKOjowCgoKAAn5+fAJycnACbm5sAmZmZAJaWlgCUlJQAkpKSAI6O
        jgCMjIwAi4uLAIaGhgCDg4MAgYGBAH5+fgB6enoAdnZ2AHNzcwBxcXEAZmZmAGRkZABjY2MAXV1dAFhY
        WABWVlYAS0tLAEVFRQA/Pz8APT09ADk5OQA2NjYAMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAivb9+4oAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD07Nbj9fyKAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAOrSxL+8zfX7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4c27wMTDu+z9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4eC8vcnj
        wtD4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOTOvNDkvtT4AAAAAAAAAAAA
        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
        nYkAAAAAAAAAAAAAAAAAAAAAABAXFxv4/vYAAAAAAAAAAOTv9KOIDQQCEJmCobKoewAAAAAAAAAAAAAA
        AAAAAAAAAOsYFw8T9fn9/vvz8/Pz8/r59/IQAw8QJipDobKnhAAAAAAAAAAAAAAAAAAAAAAAAADxGRcd
        GhDy9Pb29vb29PIKCA8FBBKZKSojM7OmAAAAAAAAAAAAAAAAAAAAAAAAAAAA6BMZFR0dFR/JyA4LEQcH
        FQYS8QAArVpvfZ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADk8hIeIiDJyA4MCAnt8uQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADo6Ojo6Ojo6OgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///////8AAP//4P///wAA///Af///AAD//4B///8AAP//AH///wAA//8Af///AAD//4B/+B8AAP//
        gH/wDwAA//8Af/APAAD//wB/8A8AAP//gH/gDwAA//+Af8APAAD//wB/wA8AAP//AH/AHwAA//8Af8Af
        AAD//wB/gB8AAP//AH8APwAA//4AfwA/AAD//AD+AH8AAP/8APwAfwAA//wAOAD/AAD+AAAYAP8AAPwA
        AAAB/wAA/AAAAAH/AAD4AAAAA/8AAPgAAAAD/wAA+AAAAAf/AAD4AAAAB/8AAPgAAAAP/wAA8AAAAAf/
        AADwAAAAA/8AAPAAAAAB/wAA8AAAAAH/AADwAAAAAf8AAPAAAAAB/wAA8AAAAAP/AADwAAAAA/8AAPAA
        AAAD/wAA8AAAAAf/AADwAAAAB/8AAPAwAAAP/wAA8D8AAA//AAD4D/AAH/8AAPgAAAAf/wAA/AAAAD//
        AAD+AAAwf/8AAP+AAP///wAA//AH////AAA=
</value>
  </data>
</root>