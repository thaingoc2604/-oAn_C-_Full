//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QUANLYKHACHSAN {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("QUANLYKHACHSANKIMANHDataSet")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class QUANLYKHACHSANKIMANHDataSet : System.Data.DataSet {
        
        private BAO_CAO_DOANH_THUDataTable tableBAO_CAO_DOANH_THU;
        
        private CHI_TIET_BAO_CAO_DOANH_THUDataTable tableCHI_TIET_BAO_CAO_DOANH_THU;
        
        private CHI_TIET_HOA_DONDataTable tableCHI_TIET_HOA_DON;
        
        private CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable tableCHI_TIET_MAT_DO_SU_DUNG_PHONG;
        
        private CHI_TIET_PHIEU_NHAN_PHONGDataTable tableCHI_TIET_PHIEU_NHAN_PHONG;
        
        private CHI_TIET_PHIEU_THUE_PHONGDataTable tableCHI_TIET_PHIEU_THUE_PHONG;
        
        private CHINH_SACH_TRA_PHONGDataTable tableCHINH_SACH_TRA_PHONG;
        
        private DANH_SACH_SU_DUNG_DICH_VUDataTable tableDANH_SACH_SU_DUNG_DICH_VU;
        
        private DICH_VUDataTable tableDICH_VU;
        
        private DON_VIDataTable tableDON_VI;
        
        private HOA_DONDataTable tableHOA_DON;
        
        private KHACH_HANGDataTable tableKHACH_HANG;
        
        private LOAI_DICH_VUDataTable tableLOAI_DICH_VU;
        
        private LOAI_NGUOI_DUNGDataTable tableLOAI_NGUOI_DUNG;
        
        private LOAI_PHONGDataTable tableLOAI_PHONG;
        
        private LOAI_TINH_TRANGDataTable tableLOAI_TINH_TRANG;
        
        private MAT_DO_SU_DUNG_PHONGDataTable tableMAT_DO_SU_DUNG_PHONG;
        
        private NGUOI_DUNGDataTable tableNGUOI_DUNG;
        
        private PHIEU_NHAN_PHONGDataTable tablePHIEU_NHAN_PHONG;
        
        private PHIEU_THUE_PHONGDataTable tablePHIEU_THUE_PHONG;
        
        private PHONGDataTable tablePHONG;
        
        private QUI_DINHDataTable tableQUI_DINH;
        
        private THAM_SODataTable tableTHAM_SO;
        
        private THIET_BIDataTable tableTHIET_BI;
        
        private System.Data.DataRelation relationFK_CHI_TIET_HOA_DON_CHINH_SACH_TRA_PHONG;
        
        private System.Data.DataRelation relationFK_CHI_TIET_HOA_DON_DANH_SACH_SU_DUNG_DICH_VU1;
        
        private System.Data.DataRelation relationFK_CHI_TIET_HOA_DON_HOA_DON;
        
        private System.Data.DataRelation relationFK_CHI_TIET_HOA_DON_PHONG;
        
        private System.Data.DataRelation relationFK_CHI_TIET_PHIEU_NHAN_PHONG_PHIEU_NHAN_PHONG;
        
        private System.Data.DataRelation relationFK_CHI_TIET_PHIEU_NHAN_PHONG_PHONG;
        
        private System.Data.DataRelation relationFK_CHI_TIET_PHIEU_THUE_PHONG_PHIEU_THUE_PHONG;
        
        private System.Data.DataRelation relationFK_CHI_TIET_PHIEU_THUE_PHONG_PHONG;
        
        private System.Data.DataRelation relationFK_DANH_SACH_SU_DUNG_DICH_VU_DICH_VU;
        
        private System.Data.DataRelation relationFK_DANH_SACH_SU_DUNG_DICH_VU_PHIEU_NHAN_PHONG;
        
        private System.Data.DataRelation relationFK_DICH_VU_DON_VI;
        
        private System.Data.DataRelation relationFK_DICH_VU_LOAI_DICH_VU;
        
        private System.Data.DataRelation relationFK_HOA_DON_KHACH_HANG;
        
        private System.Data.DataRelation relationFK_HOA_DON_PHIEU_NHAN_PHONG;
        
        private System.Data.DataRelation relationFK_NGUOI_DUNG_LOAI_NGUOI_DUNG;
        
        private System.Data.DataRelation relationFK_PHIEU_NHAN_PHONG_KHACH_HANG;
        
        private System.Data.DataRelation relationFK_PHIEU_NHAN_PHONG_PHIEU_THUE_PHONG;
        
        private System.Data.DataRelation relationFK_PHIEU_THUE_PHONG_KHACH_HANG;
        
        private System.Data.DataRelation relationFK_PHONG_LOAI_PHONG;
        
        private System.Data.DataRelation relationFK_PHONG_LOAI_TINH_TRANG;
        
        private System.Data.DataRelation relationFK_THIET_BI_LOAI_PHONG;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QUANLYKHACHSANKIMANHDataSet() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected QUANLYKHACHSANKIMANHDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["BAO_CAO_DOANH_THU"] != null)) {
                    base.Tables.Add(new BAO_CAO_DOANH_THUDataTable(ds.Tables["BAO_CAO_DOANH_THU"]));
                }
                if ((ds.Tables["CHI_TIET_BAO_CAO_DOANH_THU"] != null)) {
                    base.Tables.Add(new CHI_TIET_BAO_CAO_DOANH_THUDataTable(ds.Tables["CHI_TIET_BAO_CAO_DOANH_THU"]));
                }
                if ((ds.Tables["CHI_TIET_HOA_DON"] != null)) {
                    base.Tables.Add(new CHI_TIET_HOA_DONDataTable(ds.Tables["CHI_TIET_HOA_DON"]));
                }
                if ((ds.Tables["CHI_TIET_MAT_DO_SU_DUNG_PHONG"] != null)) {
                    base.Tables.Add(new CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable(ds.Tables["CHI_TIET_MAT_DO_SU_DUNG_PHONG"]));
                }
                if ((ds.Tables["CHI_TIET_PHIEU_NHAN_PHONG"] != null)) {
                    base.Tables.Add(new CHI_TIET_PHIEU_NHAN_PHONGDataTable(ds.Tables["CHI_TIET_PHIEU_NHAN_PHONG"]));
                }
                if ((ds.Tables["CHI_TIET_PHIEU_THUE_PHONG"] != null)) {
                    base.Tables.Add(new CHI_TIET_PHIEU_THUE_PHONGDataTable(ds.Tables["CHI_TIET_PHIEU_THUE_PHONG"]));
                }
                if ((ds.Tables["CHINH_SACH_TRA_PHONG"] != null)) {
                    base.Tables.Add(new CHINH_SACH_TRA_PHONGDataTable(ds.Tables["CHINH_SACH_TRA_PHONG"]));
                }
                if ((ds.Tables["DANH_SACH_SU_DUNG_DICH_VU"] != null)) {
                    base.Tables.Add(new DANH_SACH_SU_DUNG_DICH_VUDataTable(ds.Tables["DANH_SACH_SU_DUNG_DICH_VU"]));
                }
                if ((ds.Tables["DICH_VU"] != null)) {
                    base.Tables.Add(new DICH_VUDataTable(ds.Tables["DICH_VU"]));
                }
                if ((ds.Tables["DON_VI"] != null)) {
                    base.Tables.Add(new DON_VIDataTable(ds.Tables["DON_VI"]));
                }
                if ((ds.Tables["HOA_DON"] != null)) {
                    base.Tables.Add(new HOA_DONDataTable(ds.Tables["HOA_DON"]));
                }
                if ((ds.Tables["KHACH_HANG"] != null)) {
                    base.Tables.Add(new KHACH_HANGDataTable(ds.Tables["KHACH_HANG"]));
                }
                if ((ds.Tables["LOAI_DICH_VU"] != null)) {
                    base.Tables.Add(new LOAI_DICH_VUDataTable(ds.Tables["LOAI_DICH_VU"]));
                }
                if ((ds.Tables["LOAI_NGUOI_DUNG"] != null)) {
                    base.Tables.Add(new LOAI_NGUOI_DUNGDataTable(ds.Tables["LOAI_NGUOI_DUNG"]));
                }
                if ((ds.Tables["LOAI_PHONG"] != null)) {
                    base.Tables.Add(new LOAI_PHONGDataTable(ds.Tables["LOAI_PHONG"]));
                }
                if ((ds.Tables["LOAI_TINH_TRANG"] != null)) {
                    base.Tables.Add(new LOAI_TINH_TRANGDataTable(ds.Tables["LOAI_TINH_TRANG"]));
                }
                if ((ds.Tables["MAT_DO_SU_DUNG_PHONG"] != null)) {
                    base.Tables.Add(new MAT_DO_SU_DUNG_PHONGDataTable(ds.Tables["MAT_DO_SU_DUNG_PHONG"]));
                }
                if ((ds.Tables["NGUOI_DUNG"] != null)) {
                    base.Tables.Add(new NGUOI_DUNGDataTable(ds.Tables["NGUOI_DUNG"]));
                }
                if ((ds.Tables["PHIEU_NHAN_PHONG"] != null)) {
                    base.Tables.Add(new PHIEU_NHAN_PHONGDataTable(ds.Tables["PHIEU_NHAN_PHONG"]));
                }
                if ((ds.Tables["PHIEU_THUE_PHONG"] != null)) {
                    base.Tables.Add(new PHIEU_THUE_PHONGDataTable(ds.Tables["PHIEU_THUE_PHONG"]));
                }
                if ((ds.Tables["PHONG"] != null)) {
                    base.Tables.Add(new PHONGDataTable(ds.Tables["PHONG"]));
                }
                if ((ds.Tables["QUI_DINH"] != null)) {
                    base.Tables.Add(new QUI_DINHDataTable(ds.Tables["QUI_DINH"]));
                }
                if ((ds.Tables["THAM_SO"] != null)) {
                    base.Tables.Add(new THAM_SODataTable(ds.Tables["THAM_SO"]));
                }
                if ((ds.Tables["THIET_BI"] != null)) {
                    base.Tables.Add(new THIET_BIDataTable(ds.Tables["THIET_BI"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BAO_CAO_DOANH_THUDataTable BAO_CAO_DOANH_THU {
            get {
                return this.tableBAO_CAO_DOANH_THU;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHI_TIET_BAO_CAO_DOANH_THUDataTable CHI_TIET_BAO_CAO_DOANH_THU {
            get {
                return this.tableCHI_TIET_BAO_CAO_DOANH_THU;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHI_TIET_HOA_DONDataTable CHI_TIET_HOA_DON {
            get {
                return this.tableCHI_TIET_HOA_DON;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable CHI_TIET_MAT_DO_SU_DUNG_PHONG {
            get {
                return this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHI_TIET_PHIEU_NHAN_PHONGDataTable CHI_TIET_PHIEU_NHAN_PHONG {
            get {
                return this.tableCHI_TIET_PHIEU_NHAN_PHONG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHI_TIET_PHIEU_THUE_PHONGDataTable CHI_TIET_PHIEU_THUE_PHONG {
            get {
                return this.tableCHI_TIET_PHIEU_THUE_PHONG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHINH_SACH_TRA_PHONGDataTable CHINH_SACH_TRA_PHONG {
            get {
                return this.tableCHINH_SACH_TRA_PHONG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DANH_SACH_SU_DUNG_DICH_VUDataTable DANH_SACH_SU_DUNG_DICH_VU {
            get {
                return this.tableDANH_SACH_SU_DUNG_DICH_VU;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DICH_VUDataTable DICH_VU {
            get {
                return this.tableDICH_VU;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DON_VIDataTable DON_VI {
            get {
                return this.tableDON_VI;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HOA_DONDataTable HOA_DON {
            get {
                return this.tableHOA_DON;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KHACH_HANGDataTable KHACH_HANG {
            get {
                return this.tableKHACH_HANG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LOAI_DICH_VUDataTable LOAI_DICH_VU {
            get {
                return this.tableLOAI_DICH_VU;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LOAI_NGUOI_DUNGDataTable LOAI_NGUOI_DUNG {
            get {
                return this.tableLOAI_NGUOI_DUNG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LOAI_PHONGDataTable LOAI_PHONG {
            get {
                return this.tableLOAI_PHONG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LOAI_TINH_TRANGDataTable LOAI_TINH_TRANG {
            get {
                return this.tableLOAI_TINH_TRANG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MAT_DO_SU_DUNG_PHONGDataTable MAT_DO_SU_DUNG_PHONG {
            get {
                return this.tableMAT_DO_SU_DUNG_PHONG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NGUOI_DUNGDataTable NGUOI_DUNG {
            get {
                return this.tableNGUOI_DUNG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PHIEU_NHAN_PHONGDataTable PHIEU_NHAN_PHONG {
            get {
                return this.tablePHIEU_NHAN_PHONG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PHIEU_THUE_PHONGDataTable PHIEU_THUE_PHONG {
            get {
                return this.tablePHIEU_THUE_PHONG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PHONGDataTable PHONG {
            get {
                return this.tablePHONG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QUI_DINHDataTable QUI_DINH {
            get {
                return this.tableQUI_DINH;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public THAM_SODataTable THAM_SO {
            get {
                return this.tableTHAM_SO;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public THIET_BIDataTable THIET_BI {
            get {
                return this.tableTHIET_BI;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            QUANLYKHACHSANKIMANHDataSet cln = ((QUANLYKHACHSANKIMANHDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BAO_CAO_DOANH_THU"] != null)) {
                    base.Tables.Add(new BAO_CAO_DOANH_THUDataTable(ds.Tables["BAO_CAO_DOANH_THU"]));
                }
                if ((ds.Tables["CHI_TIET_BAO_CAO_DOANH_THU"] != null)) {
                    base.Tables.Add(new CHI_TIET_BAO_CAO_DOANH_THUDataTable(ds.Tables["CHI_TIET_BAO_CAO_DOANH_THU"]));
                }
                if ((ds.Tables["CHI_TIET_HOA_DON"] != null)) {
                    base.Tables.Add(new CHI_TIET_HOA_DONDataTable(ds.Tables["CHI_TIET_HOA_DON"]));
                }
                if ((ds.Tables["CHI_TIET_MAT_DO_SU_DUNG_PHONG"] != null)) {
                    base.Tables.Add(new CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable(ds.Tables["CHI_TIET_MAT_DO_SU_DUNG_PHONG"]));
                }
                if ((ds.Tables["CHI_TIET_PHIEU_NHAN_PHONG"] != null)) {
                    base.Tables.Add(new CHI_TIET_PHIEU_NHAN_PHONGDataTable(ds.Tables["CHI_TIET_PHIEU_NHAN_PHONG"]));
                }
                if ((ds.Tables["CHI_TIET_PHIEU_THUE_PHONG"] != null)) {
                    base.Tables.Add(new CHI_TIET_PHIEU_THUE_PHONGDataTable(ds.Tables["CHI_TIET_PHIEU_THUE_PHONG"]));
                }
                if ((ds.Tables["CHINH_SACH_TRA_PHONG"] != null)) {
                    base.Tables.Add(new CHINH_SACH_TRA_PHONGDataTable(ds.Tables["CHINH_SACH_TRA_PHONG"]));
                }
                if ((ds.Tables["DANH_SACH_SU_DUNG_DICH_VU"] != null)) {
                    base.Tables.Add(new DANH_SACH_SU_DUNG_DICH_VUDataTable(ds.Tables["DANH_SACH_SU_DUNG_DICH_VU"]));
                }
                if ((ds.Tables["DICH_VU"] != null)) {
                    base.Tables.Add(new DICH_VUDataTable(ds.Tables["DICH_VU"]));
                }
                if ((ds.Tables["DON_VI"] != null)) {
                    base.Tables.Add(new DON_VIDataTable(ds.Tables["DON_VI"]));
                }
                if ((ds.Tables["HOA_DON"] != null)) {
                    base.Tables.Add(new HOA_DONDataTable(ds.Tables["HOA_DON"]));
                }
                if ((ds.Tables["KHACH_HANG"] != null)) {
                    base.Tables.Add(new KHACH_HANGDataTable(ds.Tables["KHACH_HANG"]));
                }
                if ((ds.Tables["LOAI_DICH_VU"] != null)) {
                    base.Tables.Add(new LOAI_DICH_VUDataTable(ds.Tables["LOAI_DICH_VU"]));
                }
                if ((ds.Tables["LOAI_NGUOI_DUNG"] != null)) {
                    base.Tables.Add(new LOAI_NGUOI_DUNGDataTable(ds.Tables["LOAI_NGUOI_DUNG"]));
                }
                if ((ds.Tables["LOAI_PHONG"] != null)) {
                    base.Tables.Add(new LOAI_PHONGDataTable(ds.Tables["LOAI_PHONG"]));
                }
                if ((ds.Tables["LOAI_TINH_TRANG"] != null)) {
                    base.Tables.Add(new LOAI_TINH_TRANGDataTable(ds.Tables["LOAI_TINH_TRANG"]));
                }
                if ((ds.Tables["MAT_DO_SU_DUNG_PHONG"] != null)) {
                    base.Tables.Add(new MAT_DO_SU_DUNG_PHONGDataTable(ds.Tables["MAT_DO_SU_DUNG_PHONG"]));
                }
                if ((ds.Tables["NGUOI_DUNG"] != null)) {
                    base.Tables.Add(new NGUOI_DUNGDataTable(ds.Tables["NGUOI_DUNG"]));
                }
                if ((ds.Tables["PHIEU_NHAN_PHONG"] != null)) {
                    base.Tables.Add(new PHIEU_NHAN_PHONGDataTable(ds.Tables["PHIEU_NHAN_PHONG"]));
                }
                if ((ds.Tables["PHIEU_THUE_PHONG"] != null)) {
                    base.Tables.Add(new PHIEU_THUE_PHONGDataTable(ds.Tables["PHIEU_THUE_PHONG"]));
                }
                if ((ds.Tables["PHONG"] != null)) {
                    base.Tables.Add(new PHONGDataTable(ds.Tables["PHONG"]));
                }
                if ((ds.Tables["QUI_DINH"] != null)) {
                    base.Tables.Add(new QUI_DINHDataTable(ds.Tables["QUI_DINH"]));
                }
                if ((ds.Tables["THAM_SO"] != null)) {
                    base.Tables.Add(new THAM_SODataTable(ds.Tables["THAM_SO"]));
                }
                if ((ds.Tables["THIET_BI"] != null)) {
                    base.Tables.Add(new THIET_BIDataTable(ds.Tables["THIET_BI"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableBAO_CAO_DOANH_THU = ((BAO_CAO_DOANH_THUDataTable)(base.Tables["BAO_CAO_DOANH_THU"]));
            if ((initTable == true)) {
                if ((this.tableBAO_CAO_DOANH_THU != null)) {
                    this.tableBAO_CAO_DOANH_THU.InitVars();
                }
            }
            this.tableCHI_TIET_BAO_CAO_DOANH_THU = ((CHI_TIET_BAO_CAO_DOANH_THUDataTable)(base.Tables["CHI_TIET_BAO_CAO_DOANH_THU"]));
            if ((initTable == true)) {
                if ((this.tableCHI_TIET_BAO_CAO_DOANH_THU != null)) {
                    this.tableCHI_TIET_BAO_CAO_DOANH_THU.InitVars();
                }
            }
            this.tableCHI_TIET_HOA_DON = ((CHI_TIET_HOA_DONDataTable)(base.Tables["CHI_TIET_HOA_DON"]));
            if ((initTable == true)) {
                if ((this.tableCHI_TIET_HOA_DON != null)) {
                    this.tableCHI_TIET_HOA_DON.InitVars();
                }
            }
            this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG = ((CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable)(base.Tables["CHI_TIET_MAT_DO_SU_DUNG_PHONG"]));
            if ((initTable == true)) {
                if ((this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG != null)) {
                    this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.InitVars();
                }
            }
            this.tableCHI_TIET_PHIEU_NHAN_PHONG = ((CHI_TIET_PHIEU_NHAN_PHONGDataTable)(base.Tables["CHI_TIET_PHIEU_NHAN_PHONG"]));
            if ((initTable == true)) {
                if ((this.tableCHI_TIET_PHIEU_NHAN_PHONG != null)) {
                    this.tableCHI_TIET_PHIEU_NHAN_PHONG.InitVars();
                }
            }
            this.tableCHI_TIET_PHIEU_THUE_PHONG = ((CHI_TIET_PHIEU_THUE_PHONGDataTable)(base.Tables["CHI_TIET_PHIEU_THUE_PHONG"]));
            if ((initTable == true)) {
                if ((this.tableCHI_TIET_PHIEU_THUE_PHONG != null)) {
                    this.tableCHI_TIET_PHIEU_THUE_PHONG.InitVars();
                }
            }
            this.tableCHINH_SACH_TRA_PHONG = ((CHINH_SACH_TRA_PHONGDataTable)(base.Tables["CHINH_SACH_TRA_PHONG"]));
            if ((initTable == true)) {
                if ((this.tableCHINH_SACH_TRA_PHONG != null)) {
                    this.tableCHINH_SACH_TRA_PHONG.InitVars();
                }
            }
            this.tableDANH_SACH_SU_DUNG_DICH_VU = ((DANH_SACH_SU_DUNG_DICH_VUDataTable)(base.Tables["DANH_SACH_SU_DUNG_DICH_VU"]));
            if ((initTable == true)) {
                if ((this.tableDANH_SACH_SU_DUNG_DICH_VU != null)) {
                    this.tableDANH_SACH_SU_DUNG_DICH_VU.InitVars();
                }
            }
            this.tableDICH_VU = ((DICH_VUDataTable)(base.Tables["DICH_VU"]));
            if ((initTable == true)) {
                if ((this.tableDICH_VU != null)) {
                    this.tableDICH_VU.InitVars();
                }
            }
            this.tableDON_VI = ((DON_VIDataTable)(base.Tables["DON_VI"]));
            if ((initTable == true)) {
                if ((this.tableDON_VI != null)) {
                    this.tableDON_VI.InitVars();
                }
            }
            this.tableHOA_DON = ((HOA_DONDataTable)(base.Tables["HOA_DON"]));
            if ((initTable == true)) {
                if ((this.tableHOA_DON != null)) {
                    this.tableHOA_DON.InitVars();
                }
            }
            this.tableKHACH_HANG = ((KHACH_HANGDataTable)(base.Tables["KHACH_HANG"]));
            if ((initTable == true)) {
                if ((this.tableKHACH_HANG != null)) {
                    this.tableKHACH_HANG.InitVars();
                }
            }
            this.tableLOAI_DICH_VU = ((LOAI_DICH_VUDataTable)(base.Tables["LOAI_DICH_VU"]));
            if ((initTable == true)) {
                if ((this.tableLOAI_DICH_VU != null)) {
                    this.tableLOAI_DICH_VU.InitVars();
                }
            }
            this.tableLOAI_NGUOI_DUNG = ((LOAI_NGUOI_DUNGDataTable)(base.Tables["LOAI_NGUOI_DUNG"]));
            if ((initTable == true)) {
                if ((this.tableLOAI_NGUOI_DUNG != null)) {
                    this.tableLOAI_NGUOI_DUNG.InitVars();
                }
            }
            this.tableLOAI_PHONG = ((LOAI_PHONGDataTable)(base.Tables["LOAI_PHONG"]));
            if ((initTable == true)) {
                if ((this.tableLOAI_PHONG != null)) {
                    this.tableLOAI_PHONG.InitVars();
                }
            }
            this.tableLOAI_TINH_TRANG = ((LOAI_TINH_TRANGDataTable)(base.Tables["LOAI_TINH_TRANG"]));
            if ((initTable == true)) {
                if ((this.tableLOAI_TINH_TRANG != null)) {
                    this.tableLOAI_TINH_TRANG.InitVars();
                }
            }
            this.tableMAT_DO_SU_DUNG_PHONG = ((MAT_DO_SU_DUNG_PHONGDataTable)(base.Tables["MAT_DO_SU_DUNG_PHONG"]));
            if ((initTable == true)) {
                if ((this.tableMAT_DO_SU_DUNG_PHONG != null)) {
                    this.tableMAT_DO_SU_DUNG_PHONG.InitVars();
                }
            }
            this.tableNGUOI_DUNG = ((NGUOI_DUNGDataTable)(base.Tables["NGUOI_DUNG"]));
            if ((initTable == true)) {
                if ((this.tableNGUOI_DUNG != null)) {
                    this.tableNGUOI_DUNG.InitVars();
                }
            }
            this.tablePHIEU_NHAN_PHONG = ((PHIEU_NHAN_PHONGDataTable)(base.Tables["PHIEU_NHAN_PHONG"]));
            if ((initTable == true)) {
                if ((this.tablePHIEU_NHAN_PHONG != null)) {
                    this.tablePHIEU_NHAN_PHONG.InitVars();
                }
            }
            this.tablePHIEU_THUE_PHONG = ((PHIEU_THUE_PHONGDataTable)(base.Tables["PHIEU_THUE_PHONG"]));
            if ((initTable == true)) {
                if ((this.tablePHIEU_THUE_PHONG != null)) {
                    this.tablePHIEU_THUE_PHONG.InitVars();
                }
            }
            this.tablePHONG = ((PHONGDataTable)(base.Tables["PHONG"]));
            if ((initTable == true)) {
                if ((this.tablePHONG != null)) {
                    this.tablePHONG.InitVars();
                }
            }
            this.tableQUI_DINH = ((QUI_DINHDataTable)(base.Tables["QUI_DINH"]));
            if ((initTable == true)) {
                if ((this.tableQUI_DINH != null)) {
                    this.tableQUI_DINH.InitVars();
                }
            }
            this.tableTHAM_SO = ((THAM_SODataTable)(base.Tables["THAM_SO"]));
            if ((initTable == true)) {
                if ((this.tableTHAM_SO != null)) {
                    this.tableTHAM_SO.InitVars();
                }
            }
            this.tableTHIET_BI = ((THIET_BIDataTable)(base.Tables["THIET_BI"]));
            if ((initTable == true)) {
                if ((this.tableTHIET_BI != null)) {
                    this.tableTHIET_BI.InitVars();
                }
            }
            this.relationFK_CHI_TIET_HOA_DON_CHINH_SACH_TRA_PHONG = this.Relations["FK_CHI_TIET_HOA_DON_CHINH_SACH_TRA_PHONG"];
            this.relationFK_CHI_TIET_HOA_DON_DANH_SACH_SU_DUNG_DICH_VU1 = this.Relations["FK_CHI_TIET_HOA_DON_DANH_SACH_SU_DUNG_DICH_VU1"];
            this.relationFK_CHI_TIET_HOA_DON_HOA_DON = this.Relations["FK_CHI_TIET_HOA_DON_HOA_DON"];
            this.relationFK_CHI_TIET_HOA_DON_PHONG = this.Relations["FK_CHI_TIET_HOA_DON_PHONG"];
            this.relationFK_CHI_TIET_PHIEU_NHAN_PHONG_PHIEU_NHAN_PHONG = this.Relations["FK_CHI_TIET_PHIEU_NHAN_PHONG_PHIEU_NHAN_PHONG"];
            this.relationFK_CHI_TIET_PHIEU_NHAN_PHONG_PHONG = this.Relations["FK_CHI_TIET_PHIEU_NHAN_PHONG_PHONG"];
            this.relationFK_CHI_TIET_PHIEU_THUE_PHONG_PHIEU_THUE_PHONG = this.Relations["FK_CHI_TIET_PHIEU_THUE_PHONG_PHIEU_THUE_PHONG"];
            this.relationFK_CHI_TIET_PHIEU_THUE_PHONG_PHONG = this.Relations["FK_CHI_TIET_PHIEU_THUE_PHONG_PHONG"];
            this.relationFK_DANH_SACH_SU_DUNG_DICH_VU_DICH_VU = this.Relations["FK_DANH_SACH_SU_DUNG_DICH_VU_DICH_VU"];
            this.relationFK_DANH_SACH_SU_DUNG_DICH_VU_PHIEU_NHAN_PHONG = this.Relations["FK_DANH_SACH_SU_DUNG_DICH_VU_PHIEU_NHAN_PHONG"];
            this.relationFK_DICH_VU_DON_VI = this.Relations["FK_DICH_VU_DON_VI"];
            this.relationFK_DICH_VU_LOAI_DICH_VU = this.Relations["FK_DICH_VU_LOAI_DICH_VU"];
            this.relationFK_HOA_DON_KHACH_HANG = this.Relations["FK_HOA_DON_KHACH_HANG"];
            this.relationFK_HOA_DON_PHIEU_NHAN_PHONG = this.Relations["FK_HOA_DON_PHIEU_NHAN_PHONG"];
            this.relationFK_NGUOI_DUNG_LOAI_NGUOI_DUNG = this.Relations["FK_NGUOI_DUNG_LOAI_NGUOI_DUNG"];
            this.relationFK_PHIEU_NHAN_PHONG_KHACH_HANG = this.Relations["FK_PHIEU_NHAN_PHONG_KHACH_HANG"];
            this.relationFK_PHIEU_NHAN_PHONG_PHIEU_THUE_PHONG = this.Relations["FK_PHIEU_NHAN_PHONG_PHIEU_THUE_PHONG"];
            this.relationFK_PHIEU_THUE_PHONG_KHACH_HANG = this.Relations["FK_PHIEU_THUE_PHONG_KHACH_HANG"];
            this.relationFK_PHONG_LOAI_PHONG = this.Relations["FK_PHONG_LOAI_PHONG"];
            this.relationFK_PHONG_LOAI_TINH_TRANG = this.Relations["FK_PHONG_LOAI_TINH_TRANG"];
            this.relationFK_THIET_BI_LOAI_PHONG = this.Relations["FK_THIET_BI_LOAI_PHONG"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "QUANLYKHACHSANKIMANHDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/QUANLYKHACHSANKIMANHDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBAO_CAO_DOANH_THU = new BAO_CAO_DOANH_THUDataTable();
            base.Tables.Add(this.tableBAO_CAO_DOANH_THU);
            this.tableCHI_TIET_BAO_CAO_DOANH_THU = new CHI_TIET_BAO_CAO_DOANH_THUDataTable();
            base.Tables.Add(this.tableCHI_TIET_BAO_CAO_DOANH_THU);
            this.tableCHI_TIET_HOA_DON = new CHI_TIET_HOA_DONDataTable();
            base.Tables.Add(this.tableCHI_TIET_HOA_DON);
            this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG = new CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable();
            base.Tables.Add(this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG);
            this.tableCHI_TIET_PHIEU_NHAN_PHONG = new CHI_TIET_PHIEU_NHAN_PHONGDataTable();
            base.Tables.Add(this.tableCHI_TIET_PHIEU_NHAN_PHONG);
            this.tableCHI_TIET_PHIEU_THUE_PHONG = new CHI_TIET_PHIEU_THUE_PHONGDataTable();
            base.Tables.Add(this.tableCHI_TIET_PHIEU_THUE_PHONG);
            this.tableCHINH_SACH_TRA_PHONG = new CHINH_SACH_TRA_PHONGDataTable();
            base.Tables.Add(this.tableCHINH_SACH_TRA_PHONG);
            this.tableDANH_SACH_SU_DUNG_DICH_VU = new DANH_SACH_SU_DUNG_DICH_VUDataTable();
            base.Tables.Add(this.tableDANH_SACH_SU_DUNG_DICH_VU);
            this.tableDICH_VU = new DICH_VUDataTable();
            base.Tables.Add(this.tableDICH_VU);
            this.tableDON_VI = new DON_VIDataTable();
            base.Tables.Add(this.tableDON_VI);
            this.tableHOA_DON = new HOA_DONDataTable();
            base.Tables.Add(this.tableHOA_DON);
            this.tableKHACH_HANG = new KHACH_HANGDataTable();
            base.Tables.Add(this.tableKHACH_HANG);
            this.tableLOAI_DICH_VU = new LOAI_DICH_VUDataTable();
            base.Tables.Add(this.tableLOAI_DICH_VU);
            this.tableLOAI_NGUOI_DUNG = new LOAI_NGUOI_DUNGDataTable();
            base.Tables.Add(this.tableLOAI_NGUOI_DUNG);
            this.tableLOAI_PHONG = new LOAI_PHONGDataTable();
            base.Tables.Add(this.tableLOAI_PHONG);
            this.tableLOAI_TINH_TRANG = new LOAI_TINH_TRANGDataTable();
            base.Tables.Add(this.tableLOAI_TINH_TRANG);
            this.tableMAT_DO_SU_DUNG_PHONG = new MAT_DO_SU_DUNG_PHONGDataTable();
            base.Tables.Add(this.tableMAT_DO_SU_DUNG_PHONG);
            this.tableNGUOI_DUNG = new NGUOI_DUNGDataTable();
            base.Tables.Add(this.tableNGUOI_DUNG);
            this.tablePHIEU_NHAN_PHONG = new PHIEU_NHAN_PHONGDataTable();
            base.Tables.Add(this.tablePHIEU_NHAN_PHONG);
            this.tablePHIEU_THUE_PHONG = new PHIEU_THUE_PHONGDataTable();
            base.Tables.Add(this.tablePHIEU_THUE_PHONG);
            this.tablePHONG = new PHONGDataTable();
            base.Tables.Add(this.tablePHONG);
            this.tableQUI_DINH = new QUI_DINHDataTable();
            base.Tables.Add(this.tableQUI_DINH);
            this.tableTHAM_SO = new THAM_SODataTable();
            base.Tables.Add(this.tableTHAM_SO);
            this.tableTHIET_BI = new THIET_BIDataTable();
            base.Tables.Add(this.tableTHIET_BI);
            this.relationFK_CHI_TIET_HOA_DON_CHINH_SACH_TRA_PHONG = new System.Data.DataRelation("FK_CHI_TIET_HOA_DON_CHINH_SACH_TRA_PHONG", new System.Data.DataColumn[] {
                        this.tableCHINH_SACH_TRA_PHONG.MaChinhSachColumn}, new System.Data.DataColumn[] {
                        this.tableCHI_TIET_HOA_DON.MaChinhSachColumn}, false);
            this.Relations.Add(this.relationFK_CHI_TIET_HOA_DON_CHINH_SACH_TRA_PHONG);
            this.relationFK_CHI_TIET_HOA_DON_DANH_SACH_SU_DUNG_DICH_VU1 = new System.Data.DataRelation("FK_CHI_TIET_HOA_DON_DANH_SACH_SU_DUNG_DICH_VU1", new System.Data.DataColumn[] {
                        this.tableDANH_SACH_SU_DUNG_DICH_VU.MaSuDungDvuColumn}, new System.Data.DataColumn[] {
                        this.tableCHI_TIET_HOA_DON.MaSuDungDichVuColumn}, false);
            this.Relations.Add(this.relationFK_CHI_TIET_HOA_DON_DANH_SACH_SU_DUNG_DICH_VU1);
            this.relationFK_CHI_TIET_HOA_DON_HOA_DON = new System.Data.DataRelation("FK_CHI_TIET_HOA_DON_HOA_DON", new System.Data.DataColumn[] {
                        this.tableHOA_DON.MaHoaDonColumn}, new System.Data.DataColumn[] {
                        this.tableCHI_TIET_HOA_DON.MaHoaDonColumn}, false);
            this.Relations.Add(this.relationFK_CHI_TIET_HOA_DON_HOA_DON);
            this.relationFK_CHI_TIET_HOA_DON_PHONG = new System.Data.DataRelation("FK_CHI_TIET_HOA_DON_PHONG", new System.Data.DataColumn[] {
                        this.tablePHONG.MaPhongColumn}, new System.Data.DataColumn[] {
                        this.tableCHI_TIET_HOA_DON.MaPhongColumn}, false);
            this.Relations.Add(this.relationFK_CHI_TIET_HOA_DON_PHONG);
            this.relationFK_CHI_TIET_PHIEU_NHAN_PHONG_PHIEU_NHAN_PHONG = new System.Data.DataRelation("FK_CHI_TIET_PHIEU_NHAN_PHONG_PHIEU_NHAN_PHONG", new System.Data.DataColumn[] {
                        this.tablePHIEU_NHAN_PHONG.MaNhanPhongColumn}, new System.Data.DataColumn[] {
                        this.tableCHI_TIET_PHIEU_NHAN_PHONG.MaNhanPhongColumn}, false);
            this.Relations.Add(this.relationFK_CHI_TIET_PHIEU_NHAN_PHONG_PHIEU_NHAN_PHONG);
            this.relationFK_CHI_TIET_PHIEU_NHAN_PHONG_PHONG = new System.Data.DataRelation("FK_CHI_TIET_PHIEU_NHAN_PHONG_PHONG", new System.Data.DataColumn[] {
                        this.tablePHONG.MaPhongColumn}, new System.Data.DataColumn[] {
                        this.tableCHI_TIET_PHIEU_NHAN_PHONG.MaPhongColumn}, false);
            this.Relations.Add(this.relationFK_CHI_TIET_PHIEU_NHAN_PHONG_PHONG);
            this.relationFK_CHI_TIET_PHIEU_THUE_PHONG_PHIEU_THUE_PHONG = new System.Data.DataRelation("FK_CHI_TIET_PHIEU_THUE_PHONG_PHIEU_THUE_PHONG", new System.Data.DataColumn[] {
                        this.tablePHIEU_THUE_PHONG.MaPhieuThueColumn}, new System.Data.DataColumn[] {
                        this.tableCHI_TIET_PHIEU_THUE_PHONG.MaPhieuThueColumn}, false);
            this.Relations.Add(this.relationFK_CHI_TIET_PHIEU_THUE_PHONG_PHIEU_THUE_PHONG);
            this.relationFK_CHI_TIET_PHIEU_THUE_PHONG_PHONG = new System.Data.DataRelation("FK_CHI_TIET_PHIEU_THUE_PHONG_PHONG", new System.Data.DataColumn[] {
                        this.tablePHONG.MaPhongColumn}, new System.Data.DataColumn[] {
                        this.tableCHI_TIET_PHIEU_THUE_PHONG.MaPhongColumn}, false);
            this.Relations.Add(this.relationFK_CHI_TIET_PHIEU_THUE_PHONG_PHONG);
            this.relationFK_DANH_SACH_SU_DUNG_DICH_VU_DICH_VU = new System.Data.DataRelation("FK_DANH_SACH_SU_DUNG_DICH_VU_DICH_VU", new System.Data.DataColumn[] {
                        this.tableDICH_VU.MaDichVuColumn}, new System.Data.DataColumn[] {
                        this.tableDANH_SACH_SU_DUNG_DICH_VU.MaDichVuColumn}, false);
            this.Relations.Add(this.relationFK_DANH_SACH_SU_DUNG_DICH_VU_DICH_VU);
            this.relationFK_DANH_SACH_SU_DUNG_DICH_VU_PHIEU_NHAN_PHONG = new System.Data.DataRelation("FK_DANH_SACH_SU_DUNG_DICH_VU_PHIEU_NHAN_PHONG", new System.Data.DataColumn[] {
                        this.tablePHIEU_NHAN_PHONG.MaNhanPhongColumn}, new System.Data.DataColumn[] {
                        this.tableDANH_SACH_SU_DUNG_DICH_VU.MaNhanPhongColumn}, false);
            this.Relations.Add(this.relationFK_DANH_SACH_SU_DUNG_DICH_VU_PHIEU_NHAN_PHONG);
            this.relationFK_DICH_VU_DON_VI = new System.Data.DataRelation("FK_DICH_VU_DON_VI", new System.Data.DataColumn[] {
                        this.tableDON_VI.MaDonViColumn}, new System.Data.DataColumn[] {
                        this.tableDICH_VU.MaDonViColumn}, false);
            this.Relations.Add(this.relationFK_DICH_VU_DON_VI);
            this.relationFK_DICH_VU_LOAI_DICH_VU = new System.Data.DataRelation("FK_DICH_VU_LOAI_DICH_VU", new System.Data.DataColumn[] {
                        this.tableLOAI_DICH_VU.MaLoaiDichVuColumn}, new System.Data.DataColumn[] {
                        this.tableDICH_VU.MaLoaiDichVuColumn}, false);
            this.Relations.Add(this.relationFK_DICH_VU_LOAI_DICH_VU);
            this.relationFK_HOA_DON_KHACH_HANG = new System.Data.DataRelation("FK_HOA_DON_KHACH_HANG", new System.Data.DataColumn[] {
                        this.tableKHACH_HANG.MaKhachHangColumn}, new System.Data.DataColumn[] {
                        this.tableHOA_DON.MaKhachHangColumn}, false);
            this.Relations.Add(this.relationFK_HOA_DON_KHACH_HANG);
            this.relationFK_HOA_DON_PHIEU_NHAN_PHONG = new System.Data.DataRelation("FK_HOA_DON_PHIEU_NHAN_PHONG", new System.Data.DataColumn[] {
                        this.tablePHIEU_NHAN_PHONG.MaNhanPhongColumn}, new System.Data.DataColumn[] {
                        this.tableHOA_DON.MaNhanPhongColumn}, false);
            this.Relations.Add(this.relationFK_HOA_DON_PHIEU_NHAN_PHONG);
            this.relationFK_NGUOI_DUNG_LOAI_NGUOI_DUNG = new System.Data.DataRelation("FK_NGUOI_DUNG_LOAI_NGUOI_DUNG", new System.Data.DataColumn[] {
                        this.tableLOAI_NGUOI_DUNG.LoaiNguoiDungColumn}, new System.Data.DataColumn[] {
                        this.tableNGUOI_DUNG.LoaiNguoiDungColumn}, false);
            this.Relations.Add(this.relationFK_NGUOI_DUNG_LOAI_NGUOI_DUNG);
            this.relationFK_PHIEU_NHAN_PHONG_KHACH_HANG = new System.Data.DataRelation("FK_PHIEU_NHAN_PHONG_KHACH_HANG", new System.Data.DataColumn[] {
                        this.tableKHACH_HANG.MaKhachHangColumn}, new System.Data.DataColumn[] {
                        this.tablePHIEU_NHAN_PHONG.MaKhachHangColumn}, false);
            this.Relations.Add(this.relationFK_PHIEU_NHAN_PHONG_KHACH_HANG);
            this.relationFK_PHIEU_NHAN_PHONG_PHIEU_THUE_PHONG = new System.Data.DataRelation("FK_PHIEU_NHAN_PHONG_PHIEU_THUE_PHONG", new System.Data.DataColumn[] {
                        this.tablePHIEU_THUE_PHONG.MaPhieuThueColumn}, new System.Data.DataColumn[] {
                        this.tablePHIEU_NHAN_PHONG.MaPhieuThueColumn}, false);
            this.Relations.Add(this.relationFK_PHIEU_NHAN_PHONG_PHIEU_THUE_PHONG);
            this.relationFK_PHIEU_THUE_PHONG_KHACH_HANG = new System.Data.DataRelation("FK_PHIEU_THUE_PHONG_KHACH_HANG", new System.Data.DataColumn[] {
                        this.tableKHACH_HANG.MaKhachHangColumn}, new System.Data.DataColumn[] {
                        this.tablePHIEU_THUE_PHONG.MaKhachHangColumn}, false);
            this.Relations.Add(this.relationFK_PHIEU_THUE_PHONG_KHACH_HANG);
            this.relationFK_PHONG_LOAI_PHONG = new System.Data.DataRelation("FK_PHONG_LOAI_PHONG", new System.Data.DataColumn[] {
                        this.tableLOAI_PHONG.MaLoaiPhongColumn}, new System.Data.DataColumn[] {
                        this.tablePHONG.MaLoaiPhongColumn}, false);
            this.Relations.Add(this.relationFK_PHONG_LOAI_PHONG);
            this.relationFK_PHONG_LOAI_TINH_TRANG = new System.Data.DataRelation("FK_PHONG_LOAI_TINH_TRANG", new System.Data.DataColumn[] {
                        this.tableLOAI_TINH_TRANG.MaLoaiTinhTrangPhongColumn}, new System.Data.DataColumn[] {
                        this.tablePHONG.MaLoaiTinhTrangPhongColumn}, false);
            this.Relations.Add(this.relationFK_PHONG_LOAI_TINH_TRANG);
            this.relationFK_THIET_BI_LOAI_PHONG = new System.Data.DataRelation("FK_THIET_BI_LOAI_PHONG", new System.Data.DataColumn[] {
                        this.tableLOAI_PHONG.MaLoaiPhongColumn}, new System.Data.DataColumn[] {
                        this.tableTHIET_BI.MaLoaiPhongColumn}, false);
            this.Relations.Add(this.relationFK_THIET_BI_LOAI_PHONG);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBAO_CAO_DOANH_THU() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCHI_TIET_BAO_CAO_DOANH_THU() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCHI_TIET_HOA_DON() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCHI_TIET_MAT_DO_SU_DUNG_PHONG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCHI_TIET_PHIEU_NHAN_PHONG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCHI_TIET_PHIEU_THUE_PHONG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCHINH_SACH_TRA_PHONG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDANH_SACH_SU_DUNG_DICH_VU() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDICH_VU() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDON_VI() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHOA_DON() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKHACH_HANG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLOAI_DICH_VU() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLOAI_NGUOI_DUNG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLOAI_PHONG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLOAI_TINH_TRANG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMAT_DO_SU_DUNG_PHONG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNGUOI_DUNG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePHIEU_NHAN_PHONG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePHIEU_THUE_PHONG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePHONG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeQUI_DINH() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTHAM_SO() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTHIET_BI() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void BAO_CAO_DOANH_THURowChangeEventHandler(object sender, BAO_CAO_DOANH_THURowChangeEvent e);
        
        public delegate void CHI_TIET_BAO_CAO_DOANH_THURowChangeEventHandler(object sender, CHI_TIET_BAO_CAO_DOANH_THURowChangeEvent e);
        
        public delegate void CHI_TIET_HOA_DONRowChangeEventHandler(object sender, CHI_TIET_HOA_DONRowChangeEvent e);
        
        public delegate void CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChangeEventHandler(object sender, CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChangeEvent e);
        
        public delegate void CHI_TIET_PHIEU_NHAN_PHONGRowChangeEventHandler(object sender, CHI_TIET_PHIEU_NHAN_PHONGRowChangeEvent e);
        
        public delegate void CHI_TIET_PHIEU_THUE_PHONGRowChangeEventHandler(object sender, CHI_TIET_PHIEU_THUE_PHONGRowChangeEvent e);
        
        public delegate void CHINH_SACH_TRA_PHONGRowChangeEventHandler(object sender, CHINH_SACH_TRA_PHONGRowChangeEvent e);
        
        public delegate void DANH_SACH_SU_DUNG_DICH_VURowChangeEventHandler(object sender, DANH_SACH_SU_DUNG_DICH_VURowChangeEvent e);
        
        public delegate void DICH_VURowChangeEventHandler(object sender, DICH_VURowChangeEvent e);
        
        public delegate void DON_VIRowChangeEventHandler(object sender, DON_VIRowChangeEvent e);
        
        public delegate void HOA_DONRowChangeEventHandler(object sender, HOA_DONRowChangeEvent e);
        
        public delegate void KHACH_HANGRowChangeEventHandler(object sender, KHACH_HANGRowChangeEvent e);
        
        public delegate void LOAI_DICH_VURowChangeEventHandler(object sender, LOAI_DICH_VURowChangeEvent e);
        
        public delegate void LOAI_NGUOI_DUNGRowChangeEventHandler(object sender, LOAI_NGUOI_DUNGRowChangeEvent e);
        
        public delegate void LOAI_PHONGRowChangeEventHandler(object sender, LOAI_PHONGRowChangeEvent e);
        
        public delegate void LOAI_TINH_TRANGRowChangeEventHandler(object sender, LOAI_TINH_TRANGRowChangeEvent e);
        
        public delegate void MAT_DO_SU_DUNG_PHONGRowChangeEventHandler(object sender, MAT_DO_SU_DUNG_PHONGRowChangeEvent e);
        
        public delegate void NGUOI_DUNGRowChangeEventHandler(object sender, NGUOI_DUNGRowChangeEvent e);
        
        public delegate void PHIEU_NHAN_PHONGRowChangeEventHandler(object sender, PHIEU_NHAN_PHONGRowChangeEvent e);
        
        public delegate void PHIEU_THUE_PHONGRowChangeEventHandler(object sender, PHIEU_THUE_PHONGRowChangeEvent e);
        
        public delegate void PHONGRowChangeEventHandler(object sender, PHONGRowChangeEvent e);
        
        public delegate void QUI_DINHRowChangeEventHandler(object sender, QUI_DINHRowChangeEvent e);
        
        public delegate void THAM_SORowChangeEventHandler(object sender, THAM_SORowChangeEvent e);
        
        public delegate void THIET_BIRowChangeEventHandler(object sender, THIET_BIRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BAO_CAO_DOANH_THUDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaDoanhThu;
            
            private System.Data.DataColumn columnThang;
            
            private System.Data.DataColumn columnTongDoanhThu;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAO_CAO_DOANH_THUDataTable() {
                this.TableName = "BAO_CAO_DOANH_THU";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BAO_CAO_DOANH_THUDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BAO_CAO_DOANH_THUDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaDoanhThuColumn {
                get {
                    return this.columnMaDoanhThu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ThangColumn {
                get {
                    return this.columnThang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TongDoanhThuColumn {
                get {
                    return this.columnTongDoanhThu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAO_CAO_DOANH_THURow this[int index] {
                get {
                    return ((BAO_CAO_DOANH_THURow)(this.Rows[index]));
                }
            }
            
            public event BAO_CAO_DOANH_THURowChangeEventHandler BAO_CAO_DOANH_THURowChanging;
            
            public event BAO_CAO_DOANH_THURowChangeEventHandler BAO_CAO_DOANH_THURowChanged;
            
            public event BAO_CAO_DOANH_THURowChangeEventHandler BAO_CAO_DOANH_THURowDeleting;
            
            public event BAO_CAO_DOANH_THURowChangeEventHandler BAO_CAO_DOANH_THURowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBAO_CAO_DOANH_THURow(BAO_CAO_DOANH_THURow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAO_CAO_DOANH_THURow AddBAO_CAO_DOANH_THURow(string MaDoanhThu, System.DateTime Thang, double TongDoanhThu) {
                BAO_CAO_DOANH_THURow rowBAO_CAO_DOANH_THURow = ((BAO_CAO_DOANH_THURow)(this.NewRow()));
                rowBAO_CAO_DOANH_THURow.ItemArray = new object[] {
                        MaDoanhThu,
                        Thang,
                        TongDoanhThu};
                this.Rows.Add(rowBAO_CAO_DOANH_THURow);
                return rowBAO_CAO_DOANH_THURow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAO_CAO_DOANH_THURow FindByMaDoanhThu(string MaDoanhThu) {
                return ((BAO_CAO_DOANH_THURow)(this.Rows.Find(new object[] {
                            MaDoanhThu})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                BAO_CAO_DOANH_THUDataTable cln = ((BAO_CAO_DOANH_THUDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new BAO_CAO_DOANH_THUDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaDoanhThu = base.Columns["MaDoanhThu"];
                this.columnThang = base.Columns["Thang"];
                this.columnTongDoanhThu = base.Columns["TongDoanhThu"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaDoanhThu = new System.Data.DataColumn("MaDoanhThu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaDoanhThu);
                this.columnThang = new System.Data.DataColumn("Thang", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnThang);
                this.columnTongDoanhThu = new System.Data.DataColumn("TongDoanhThu", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTongDoanhThu);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaDoanhThu}, true));
                this.columnMaDoanhThu.AllowDBNull = false;
                this.columnMaDoanhThu.Unique = true;
                this.columnMaDoanhThu.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAO_CAO_DOANH_THURow NewBAO_CAO_DOANH_THURow() {
                return ((BAO_CAO_DOANH_THURow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new BAO_CAO_DOANH_THURow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(BAO_CAO_DOANH_THURow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BAO_CAO_DOANH_THURowChanged != null)) {
                    this.BAO_CAO_DOANH_THURowChanged(this, new BAO_CAO_DOANH_THURowChangeEvent(((BAO_CAO_DOANH_THURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BAO_CAO_DOANH_THURowChanging != null)) {
                    this.BAO_CAO_DOANH_THURowChanging(this, new BAO_CAO_DOANH_THURowChangeEvent(((BAO_CAO_DOANH_THURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BAO_CAO_DOANH_THURowDeleted != null)) {
                    this.BAO_CAO_DOANH_THURowDeleted(this, new BAO_CAO_DOANH_THURowChangeEvent(((BAO_CAO_DOANH_THURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BAO_CAO_DOANH_THURowDeleting != null)) {
                    this.BAO_CAO_DOANH_THURowDeleting(this, new BAO_CAO_DOANH_THURowChangeEvent(((BAO_CAO_DOANH_THURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBAO_CAO_DOANH_THURow(BAO_CAO_DOANH_THURow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BAO_CAO_DOANH_THUDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHI_TIET_BAO_CAO_DOANH_THUDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaChiTietDoanhThu;
            
            private System.Data.DataColumn columnMaDoanhThu;
            
            private System.Data.DataColumn columnMaLoaiPhong;
            
            private System.Data.DataColumn columnDoanhThu;
            
            private System.Data.DataColumn columnTyLe;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_BAO_CAO_DOANH_THUDataTable() {
                this.TableName = "CHI_TIET_BAO_CAO_DOANH_THU";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHI_TIET_BAO_CAO_DOANH_THUDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CHI_TIET_BAO_CAO_DOANH_THUDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaChiTietDoanhThuColumn {
                get {
                    return this.columnMaChiTietDoanhThu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaDoanhThuColumn {
                get {
                    return this.columnMaDoanhThu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiPhongColumn {
                get {
                    return this.columnMaLoaiPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DoanhThuColumn {
                get {
                    return this.columnDoanhThu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TyLeColumn {
                get {
                    return this.columnTyLe;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_BAO_CAO_DOANH_THURow this[int index] {
                get {
                    return ((CHI_TIET_BAO_CAO_DOANH_THURow)(this.Rows[index]));
                }
            }
            
            public event CHI_TIET_BAO_CAO_DOANH_THURowChangeEventHandler CHI_TIET_BAO_CAO_DOANH_THURowChanging;
            
            public event CHI_TIET_BAO_CAO_DOANH_THURowChangeEventHandler CHI_TIET_BAO_CAO_DOANH_THURowChanged;
            
            public event CHI_TIET_BAO_CAO_DOANH_THURowChangeEventHandler CHI_TIET_BAO_CAO_DOANH_THURowDeleting;
            
            public event CHI_TIET_BAO_CAO_DOANH_THURowChangeEventHandler CHI_TIET_BAO_CAO_DOANH_THURowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCHI_TIET_BAO_CAO_DOANH_THURow(CHI_TIET_BAO_CAO_DOANH_THURow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_BAO_CAO_DOANH_THURow AddCHI_TIET_BAO_CAO_DOANH_THURow(string MaChiTietDoanhThu, string MaDoanhThu, string MaLoaiPhong, double DoanhThu, double TyLe) {
                CHI_TIET_BAO_CAO_DOANH_THURow rowCHI_TIET_BAO_CAO_DOANH_THURow = ((CHI_TIET_BAO_CAO_DOANH_THURow)(this.NewRow()));
                rowCHI_TIET_BAO_CAO_DOANH_THURow.ItemArray = new object[] {
                        MaChiTietDoanhThu,
                        MaDoanhThu,
                        MaLoaiPhong,
                        DoanhThu,
                        TyLe};
                this.Rows.Add(rowCHI_TIET_BAO_CAO_DOANH_THURow);
                return rowCHI_TIET_BAO_CAO_DOANH_THURow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_BAO_CAO_DOANH_THURow FindByMaChiTietDoanhThu(string MaChiTietDoanhThu) {
                return ((CHI_TIET_BAO_CAO_DOANH_THURow)(this.Rows.Find(new object[] {
                            MaChiTietDoanhThu})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CHI_TIET_BAO_CAO_DOANH_THUDataTable cln = ((CHI_TIET_BAO_CAO_DOANH_THUDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CHI_TIET_BAO_CAO_DOANH_THUDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaChiTietDoanhThu = base.Columns["MaChiTietDoanhThu"];
                this.columnMaDoanhThu = base.Columns["MaDoanhThu"];
                this.columnMaLoaiPhong = base.Columns["MaLoaiPhong"];
                this.columnDoanhThu = base.Columns["DoanhThu"];
                this.columnTyLe = base.Columns["TyLe"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaChiTietDoanhThu = new System.Data.DataColumn("MaChiTietDoanhThu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaChiTietDoanhThu);
                this.columnMaDoanhThu = new System.Data.DataColumn("MaDoanhThu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaDoanhThu);
                this.columnMaLoaiPhong = new System.Data.DataColumn("MaLoaiPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiPhong);
                this.columnDoanhThu = new System.Data.DataColumn("DoanhThu", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoanhThu);
                this.columnTyLe = new System.Data.DataColumn("TyLe", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTyLe);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaChiTietDoanhThu}, true));
                this.columnMaChiTietDoanhThu.AllowDBNull = false;
                this.columnMaChiTietDoanhThu.Unique = true;
                this.columnMaChiTietDoanhThu.MaxLength = 10;
                this.columnMaDoanhThu.AllowDBNull = false;
                this.columnMaDoanhThu.MaxLength = 10;
                this.columnMaLoaiPhong.AllowDBNull = false;
                this.columnMaLoaiPhong.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_BAO_CAO_DOANH_THURow NewCHI_TIET_BAO_CAO_DOANH_THURow() {
                return ((CHI_TIET_BAO_CAO_DOANH_THURow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CHI_TIET_BAO_CAO_DOANH_THURow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CHI_TIET_BAO_CAO_DOANH_THURow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHI_TIET_BAO_CAO_DOANH_THURowChanged != null)) {
                    this.CHI_TIET_BAO_CAO_DOANH_THURowChanged(this, new CHI_TIET_BAO_CAO_DOANH_THURowChangeEvent(((CHI_TIET_BAO_CAO_DOANH_THURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHI_TIET_BAO_CAO_DOANH_THURowChanging != null)) {
                    this.CHI_TIET_BAO_CAO_DOANH_THURowChanging(this, new CHI_TIET_BAO_CAO_DOANH_THURowChangeEvent(((CHI_TIET_BAO_CAO_DOANH_THURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHI_TIET_BAO_CAO_DOANH_THURowDeleted != null)) {
                    this.CHI_TIET_BAO_CAO_DOANH_THURowDeleted(this, new CHI_TIET_BAO_CAO_DOANH_THURowChangeEvent(((CHI_TIET_BAO_CAO_DOANH_THURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHI_TIET_BAO_CAO_DOANH_THURowDeleting != null)) {
                    this.CHI_TIET_BAO_CAO_DOANH_THURowDeleting(this, new CHI_TIET_BAO_CAO_DOANH_THURowChangeEvent(((CHI_TIET_BAO_CAO_DOANH_THURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCHI_TIET_BAO_CAO_DOANH_THURow(CHI_TIET_BAO_CAO_DOANH_THURow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHI_TIET_BAO_CAO_DOANH_THUDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHI_TIET_HOA_DONDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaHoaDon;
            
            private System.Data.DataColumn columnMaPhong;
            
            private System.Data.DataColumn columnMaSuDungDichVu;
            
            private System.Data.DataColumn columnMaChinhSach;
            
            private System.Data.DataColumn columnTienPhong;
            
            private System.Data.DataColumn columnTienDichVu;
            
            private System.Data.DataColumn columnGiamGiaKH;
            
            private System.Data.DataColumn columnHinhThucThanhToan;
            
            private System.Data.DataColumn columnSoDem;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_HOA_DONDataTable() {
                this.TableName = "CHI_TIET_HOA_DON";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHI_TIET_HOA_DONDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CHI_TIET_HOA_DONDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaHoaDonColumn {
                get {
                    return this.columnMaHoaDon;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaPhongColumn {
                get {
                    return this.columnMaPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaSuDungDichVuColumn {
                get {
                    return this.columnMaSuDungDichVu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaChinhSachColumn {
                get {
                    return this.columnMaChinhSach;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TienPhongColumn {
                get {
                    return this.columnTienPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TienDichVuColumn {
                get {
                    return this.columnTienDichVu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GiamGiaKHColumn {
                get {
                    return this.columnGiamGiaKH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HinhThucThanhToanColumn {
                get {
                    return this.columnHinhThucThanhToan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoDemColumn {
                get {
                    return this.columnSoDem;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_HOA_DONRow this[int index] {
                get {
                    return ((CHI_TIET_HOA_DONRow)(this.Rows[index]));
                }
            }
            
            public event CHI_TIET_HOA_DONRowChangeEventHandler CHI_TIET_HOA_DONRowChanging;
            
            public event CHI_TIET_HOA_DONRowChangeEventHandler CHI_TIET_HOA_DONRowChanged;
            
            public event CHI_TIET_HOA_DONRowChangeEventHandler CHI_TIET_HOA_DONRowDeleting;
            
            public event CHI_TIET_HOA_DONRowChangeEventHandler CHI_TIET_HOA_DONRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCHI_TIET_HOA_DONRow(CHI_TIET_HOA_DONRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_HOA_DONRow AddCHI_TIET_HOA_DONRow(HOA_DONRow parentHOA_DONRowByFK_CHI_TIET_HOA_DON_HOA_DON, PHONGRow parentPHONGRowByFK_CHI_TIET_HOA_DON_PHONG, DANH_SACH_SU_DUNG_DICH_VURow parentDANH_SACH_SU_DUNG_DICH_VURowByFK_CHI_TIET_HOA_DON_DANH_SACH_SU_DUNG_DICH_VU1, CHINH_SACH_TRA_PHONGRow parentCHINH_SACH_TRA_PHONGRowByFK_CHI_TIET_HOA_DON_CHINH_SACH_TRA_PHONG, double TienPhong, double TienDichVu, double GiamGiaKH, string HinhThucThanhToan, int SoDem) {
                CHI_TIET_HOA_DONRow rowCHI_TIET_HOA_DONRow = ((CHI_TIET_HOA_DONRow)(this.NewRow()));
                rowCHI_TIET_HOA_DONRow.ItemArray = new object[] {
                        parentHOA_DONRowByFK_CHI_TIET_HOA_DON_HOA_DON[0],
                        parentPHONGRowByFK_CHI_TIET_HOA_DON_PHONG[0],
                        parentDANH_SACH_SU_DUNG_DICH_VURowByFK_CHI_TIET_HOA_DON_DANH_SACH_SU_DUNG_DICH_VU1[0],
                        parentCHINH_SACH_TRA_PHONGRowByFK_CHI_TIET_HOA_DON_CHINH_SACH_TRA_PHONG[0],
                        TienPhong,
                        TienDichVu,
                        GiamGiaKH,
                        HinhThucThanhToan,
                        SoDem};
                this.Rows.Add(rowCHI_TIET_HOA_DONRow);
                return rowCHI_TIET_HOA_DONRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_HOA_DONRow FindByMaHoaDonMaPhongMaSuDungDichVuMaChinhSach(string MaHoaDon, string MaPhong, string MaSuDungDichVu, string MaChinhSach) {
                return ((CHI_TIET_HOA_DONRow)(this.Rows.Find(new object[] {
                            MaHoaDon,
                            MaPhong,
                            MaSuDungDichVu,
                            MaChinhSach})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CHI_TIET_HOA_DONDataTable cln = ((CHI_TIET_HOA_DONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CHI_TIET_HOA_DONDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaHoaDon = base.Columns["MaHoaDon"];
                this.columnMaPhong = base.Columns["MaPhong"];
                this.columnMaSuDungDichVu = base.Columns["MaSuDungDichVu"];
                this.columnMaChinhSach = base.Columns["MaChinhSach"];
                this.columnTienPhong = base.Columns["TienPhong"];
                this.columnTienDichVu = base.Columns["TienDichVu"];
                this.columnGiamGiaKH = base.Columns["GiamGiaKH"];
                this.columnHinhThucThanhToan = base.Columns["HinhThucThanhToan"];
                this.columnSoDem = base.Columns["SoDem"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaHoaDon = new System.Data.DataColumn("MaHoaDon", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaHoaDon);
                this.columnMaPhong = new System.Data.DataColumn("MaPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaPhong);
                this.columnMaSuDungDichVu = new System.Data.DataColumn("MaSuDungDichVu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaSuDungDichVu);
                this.columnMaChinhSach = new System.Data.DataColumn("MaChinhSach", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaChinhSach);
                this.columnTienPhong = new System.Data.DataColumn("TienPhong", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTienPhong);
                this.columnTienDichVu = new System.Data.DataColumn("TienDichVu", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTienDichVu);
                this.columnGiamGiaKH = new System.Data.DataColumn("GiamGiaKH", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGiamGiaKH);
                this.columnHinhThucThanhToan = new System.Data.DataColumn("HinhThucThanhToan", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHinhThucThanhToan);
                this.columnSoDem = new System.Data.DataColumn("SoDem", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoDem);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaHoaDon,
                                this.columnMaPhong,
                                this.columnMaSuDungDichVu,
                                this.columnMaChinhSach}, true));
                this.columnMaHoaDon.AllowDBNull = false;
                this.columnMaHoaDon.MaxLength = 10;
                this.columnMaPhong.AllowDBNull = false;
                this.columnMaPhong.MaxLength = 10;
                this.columnMaSuDungDichVu.AllowDBNull = false;
                this.columnMaSuDungDichVu.MaxLength = 10;
                this.columnMaChinhSach.AllowDBNull = false;
                this.columnMaChinhSach.MaxLength = 10;
                this.columnHinhThucThanhToan.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_HOA_DONRow NewCHI_TIET_HOA_DONRow() {
                return ((CHI_TIET_HOA_DONRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CHI_TIET_HOA_DONRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CHI_TIET_HOA_DONRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHI_TIET_HOA_DONRowChanged != null)) {
                    this.CHI_TIET_HOA_DONRowChanged(this, new CHI_TIET_HOA_DONRowChangeEvent(((CHI_TIET_HOA_DONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHI_TIET_HOA_DONRowChanging != null)) {
                    this.CHI_TIET_HOA_DONRowChanging(this, new CHI_TIET_HOA_DONRowChangeEvent(((CHI_TIET_HOA_DONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHI_TIET_HOA_DONRowDeleted != null)) {
                    this.CHI_TIET_HOA_DONRowDeleted(this, new CHI_TIET_HOA_DONRowChangeEvent(((CHI_TIET_HOA_DONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHI_TIET_HOA_DONRowDeleting != null)) {
                    this.CHI_TIET_HOA_DONRowDeleting(this, new CHI_TIET_HOA_DONRowChangeEvent(((CHI_TIET_HOA_DONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCHI_TIET_HOA_DONRow(CHI_TIET_HOA_DONRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHI_TIET_HOA_DONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaChiTietMatDo;
            
            private System.Data.DataColumn columnMaMatDo;
            
            private System.Data.DataColumn columnMaPhong;
            
            private System.Data.DataColumn columnSoNgayThue;
            
            private System.Data.DataColumn columnTyLe;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable() {
                this.TableName = "CHI_TIET_MAT_DO_SU_DUNG_PHONG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaChiTietMatDoColumn {
                get {
                    return this.columnMaChiTietMatDo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaMatDoColumn {
                get {
                    return this.columnMaMatDo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaPhongColumn {
                get {
                    return this.columnMaPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoNgayThueColumn {
                get {
                    return this.columnSoNgayThue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TyLeColumn {
                get {
                    return this.columnTyLe;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_MAT_DO_SU_DUNG_PHONGRow this[int index] {
                get {
                    return ((CHI_TIET_MAT_DO_SU_DUNG_PHONGRow)(this.Rows[index]));
                }
            }
            
            public event CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChangeEventHandler CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChanging;
            
            public event CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChangeEventHandler CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChanged;
            
            public event CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChangeEventHandler CHI_TIET_MAT_DO_SU_DUNG_PHONGRowDeleting;
            
            public event CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChangeEventHandler CHI_TIET_MAT_DO_SU_DUNG_PHONGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCHI_TIET_MAT_DO_SU_DUNG_PHONGRow(CHI_TIET_MAT_DO_SU_DUNG_PHONGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_MAT_DO_SU_DUNG_PHONGRow AddCHI_TIET_MAT_DO_SU_DUNG_PHONGRow(string MaChiTietMatDo, string MaMatDo, string MaPhong, int SoNgayThue, double TyLe) {
                CHI_TIET_MAT_DO_SU_DUNG_PHONGRow rowCHI_TIET_MAT_DO_SU_DUNG_PHONGRow = ((CHI_TIET_MAT_DO_SU_DUNG_PHONGRow)(this.NewRow()));
                rowCHI_TIET_MAT_DO_SU_DUNG_PHONGRow.ItemArray = new object[] {
                        MaChiTietMatDo,
                        MaMatDo,
                        MaPhong,
                        SoNgayThue,
                        TyLe};
                this.Rows.Add(rowCHI_TIET_MAT_DO_SU_DUNG_PHONGRow);
                return rowCHI_TIET_MAT_DO_SU_DUNG_PHONGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_MAT_DO_SU_DUNG_PHONGRow FindByMaChiTietMatDo(string MaChiTietMatDo) {
                return ((CHI_TIET_MAT_DO_SU_DUNG_PHONGRow)(this.Rows.Find(new object[] {
                            MaChiTietMatDo})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable cln = ((CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaChiTietMatDo = base.Columns["MaChiTietMatDo"];
                this.columnMaMatDo = base.Columns["MaMatDo"];
                this.columnMaPhong = base.Columns["MaPhong"];
                this.columnSoNgayThue = base.Columns["SoNgayThue"];
                this.columnTyLe = base.Columns["TyLe"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaChiTietMatDo = new System.Data.DataColumn("MaChiTietMatDo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaChiTietMatDo);
                this.columnMaMatDo = new System.Data.DataColumn("MaMatDo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaMatDo);
                this.columnMaPhong = new System.Data.DataColumn("MaPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaPhong);
                this.columnSoNgayThue = new System.Data.DataColumn("SoNgayThue", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoNgayThue);
                this.columnTyLe = new System.Data.DataColumn("TyLe", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTyLe);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaChiTietMatDo}, true));
                this.columnMaChiTietMatDo.AllowDBNull = false;
                this.columnMaChiTietMatDo.Unique = true;
                this.columnMaChiTietMatDo.MaxLength = 10;
                this.columnMaMatDo.AllowDBNull = false;
                this.columnMaMatDo.MaxLength = 10;
                this.columnMaPhong.AllowDBNull = false;
                this.columnMaPhong.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_MAT_DO_SU_DUNG_PHONGRow NewCHI_TIET_MAT_DO_SU_DUNG_PHONGRow() {
                return ((CHI_TIET_MAT_DO_SU_DUNG_PHONGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CHI_TIET_MAT_DO_SU_DUNG_PHONGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CHI_TIET_MAT_DO_SU_DUNG_PHONGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChanged != null)) {
                    this.CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChanged(this, new CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChangeEvent(((CHI_TIET_MAT_DO_SU_DUNG_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChanging != null)) {
                    this.CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChanging(this, new CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChangeEvent(((CHI_TIET_MAT_DO_SU_DUNG_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHI_TIET_MAT_DO_SU_DUNG_PHONGRowDeleted != null)) {
                    this.CHI_TIET_MAT_DO_SU_DUNG_PHONGRowDeleted(this, new CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChangeEvent(((CHI_TIET_MAT_DO_SU_DUNG_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHI_TIET_MAT_DO_SU_DUNG_PHONGRowDeleting != null)) {
                    this.CHI_TIET_MAT_DO_SU_DUNG_PHONGRowDeleting(this, new CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChangeEvent(((CHI_TIET_MAT_DO_SU_DUNG_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCHI_TIET_MAT_DO_SU_DUNG_PHONGRow(CHI_TIET_MAT_DO_SU_DUNG_PHONGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHI_TIET_PHIEU_NHAN_PHONGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSTT;
            
            private System.Data.DataColumn columnMaNhanPhong;
            
            private System.Data.DataColumn columnMaPhong;
            
            private System.Data.DataColumn columnHoTenKhachHang;
            
            private System.Data.DataColumn columnCMND;
            
            private System.Data.DataColumn columnNgayNhan;
            
            private System.Data.DataColumn columnNgayTraDuKien;
            
            private System.Data.DataColumn columnNgayTraThucTe;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_NHAN_PHONGDataTable() {
                this.TableName = "CHI_TIET_PHIEU_NHAN_PHONG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHI_TIET_PHIEU_NHAN_PHONGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CHI_TIET_PHIEU_NHAN_PHONGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STTColumn {
                get {
                    return this.columnSTT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaNhanPhongColumn {
                get {
                    return this.columnMaNhanPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaPhongColumn {
                get {
                    return this.columnMaPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HoTenKhachHangColumn {
                get {
                    return this.columnHoTenKhachHang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CMNDColumn {
                get {
                    return this.columnCMND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayNhanColumn {
                get {
                    return this.columnNgayNhan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayTraDuKienColumn {
                get {
                    return this.columnNgayTraDuKien;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayTraThucTeColumn {
                get {
                    return this.columnNgayTraThucTe;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_NHAN_PHONGRow this[int index] {
                get {
                    return ((CHI_TIET_PHIEU_NHAN_PHONGRow)(this.Rows[index]));
                }
            }
            
            public event CHI_TIET_PHIEU_NHAN_PHONGRowChangeEventHandler CHI_TIET_PHIEU_NHAN_PHONGRowChanging;
            
            public event CHI_TIET_PHIEU_NHAN_PHONGRowChangeEventHandler CHI_TIET_PHIEU_NHAN_PHONGRowChanged;
            
            public event CHI_TIET_PHIEU_NHAN_PHONGRowChangeEventHandler CHI_TIET_PHIEU_NHAN_PHONGRowDeleting;
            
            public event CHI_TIET_PHIEU_NHAN_PHONGRowChangeEventHandler CHI_TIET_PHIEU_NHAN_PHONGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCHI_TIET_PHIEU_NHAN_PHONGRow(CHI_TIET_PHIEU_NHAN_PHONGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_NHAN_PHONGRow AddCHI_TIET_PHIEU_NHAN_PHONGRow(long STT, PHIEU_NHAN_PHONGRow parentPHIEU_NHAN_PHONGRowByFK_CHI_TIET_PHIEU_NHAN_PHONG_PHIEU_NHAN_PHONG, PHONGRow parentPHONGRowByFK_CHI_TIET_PHIEU_NHAN_PHONG_PHONG, string HoTenKhachHang, string CMND, System.DateTime NgayNhan, System.DateTime NgayTraDuKien, System.DateTime NgayTraThucTe) {
                CHI_TIET_PHIEU_NHAN_PHONGRow rowCHI_TIET_PHIEU_NHAN_PHONGRow = ((CHI_TIET_PHIEU_NHAN_PHONGRow)(this.NewRow()));
                rowCHI_TIET_PHIEU_NHAN_PHONGRow.ItemArray = new object[] {
                        STT,
                        parentPHIEU_NHAN_PHONGRowByFK_CHI_TIET_PHIEU_NHAN_PHONG_PHIEU_NHAN_PHONG[0],
                        parentPHONGRowByFK_CHI_TIET_PHIEU_NHAN_PHONG_PHONG[0],
                        HoTenKhachHang,
                        CMND,
                        NgayNhan,
                        NgayTraDuKien,
                        NgayTraThucTe};
                this.Rows.Add(rowCHI_TIET_PHIEU_NHAN_PHONGRow);
                return rowCHI_TIET_PHIEU_NHAN_PHONGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_NHAN_PHONGRow FindByMaNhanPhongMaPhong(string MaNhanPhong, string MaPhong) {
                return ((CHI_TIET_PHIEU_NHAN_PHONGRow)(this.Rows.Find(new object[] {
                            MaNhanPhong,
                            MaPhong})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CHI_TIET_PHIEU_NHAN_PHONGDataTable cln = ((CHI_TIET_PHIEU_NHAN_PHONGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CHI_TIET_PHIEU_NHAN_PHONGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSTT = base.Columns["STT"];
                this.columnMaNhanPhong = base.Columns["MaNhanPhong"];
                this.columnMaPhong = base.Columns["MaPhong"];
                this.columnHoTenKhachHang = base.Columns["HoTenKhachHang"];
                this.columnCMND = base.Columns["CMND"];
                this.columnNgayNhan = base.Columns["NgayNhan"];
                this.columnNgayTraDuKien = base.Columns["NgayTraDuKien"];
                this.columnNgayTraThucTe = base.Columns["NgayTraThucTe"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSTT = new System.Data.DataColumn("STT", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTT);
                this.columnMaNhanPhong = new System.Data.DataColumn("MaNhanPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaNhanPhong);
                this.columnMaPhong = new System.Data.DataColumn("MaPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaPhong);
                this.columnHoTenKhachHang = new System.Data.DataColumn("HoTenKhachHang", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoTenKhachHang);
                this.columnCMND = new System.Data.DataColumn("CMND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMND);
                this.columnNgayNhan = new System.Data.DataColumn("NgayNhan", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayNhan);
                this.columnNgayTraDuKien = new System.Data.DataColumn("NgayTraDuKien", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayTraDuKien);
                this.columnNgayTraThucTe = new System.Data.DataColumn("NgayTraThucTe", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayTraThucTe);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaNhanPhong,
                                this.columnMaPhong}, true));
                this.columnSTT.AllowDBNull = false;
                this.columnMaNhanPhong.AllowDBNull = false;
                this.columnMaNhanPhong.MaxLength = 10;
                this.columnMaPhong.AllowDBNull = false;
                this.columnMaPhong.MaxLength = 10;
                this.columnHoTenKhachHang.MaxLength = 50;
                this.columnCMND.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_NHAN_PHONGRow NewCHI_TIET_PHIEU_NHAN_PHONGRow() {
                return ((CHI_TIET_PHIEU_NHAN_PHONGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CHI_TIET_PHIEU_NHAN_PHONGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CHI_TIET_PHIEU_NHAN_PHONGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHI_TIET_PHIEU_NHAN_PHONGRowChanged != null)) {
                    this.CHI_TIET_PHIEU_NHAN_PHONGRowChanged(this, new CHI_TIET_PHIEU_NHAN_PHONGRowChangeEvent(((CHI_TIET_PHIEU_NHAN_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHI_TIET_PHIEU_NHAN_PHONGRowChanging != null)) {
                    this.CHI_TIET_PHIEU_NHAN_PHONGRowChanging(this, new CHI_TIET_PHIEU_NHAN_PHONGRowChangeEvent(((CHI_TIET_PHIEU_NHAN_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHI_TIET_PHIEU_NHAN_PHONGRowDeleted != null)) {
                    this.CHI_TIET_PHIEU_NHAN_PHONGRowDeleted(this, new CHI_TIET_PHIEU_NHAN_PHONGRowChangeEvent(((CHI_TIET_PHIEU_NHAN_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHI_TIET_PHIEU_NHAN_PHONGRowDeleting != null)) {
                    this.CHI_TIET_PHIEU_NHAN_PHONGRowDeleting(this, new CHI_TIET_PHIEU_NHAN_PHONGRowChangeEvent(((CHI_TIET_PHIEU_NHAN_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCHI_TIET_PHIEU_NHAN_PHONGRow(CHI_TIET_PHIEU_NHAN_PHONGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHI_TIET_PHIEU_NHAN_PHONGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHI_TIET_PHIEU_THUE_PHONGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSTT;
            
            private System.Data.DataColumn columnMaPhieuThue;
            
            private System.Data.DataColumn columnMaPhong;
            
            private System.Data.DataColumn columnNgayDangKy;
            
            private System.Data.DataColumn columnNgayNhan;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_THUE_PHONGDataTable() {
                this.TableName = "CHI_TIET_PHIEU_THUE_PHONG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHI_TIET_PHIEU_THUE_PHONGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CHI_TIET_PHIEU_THUE_PHONGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STTColumn {
                get {
                    return this.columnSTT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaPhieuThueColumn {
                get {
                    return this.columnMaPhieuThue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaPhongColumn {
                get {
                    return this.columnMaPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayDangKyColumn {
                get {
                    return this.columnNgayDangKy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayNhanColumn {
                get {
                    return this.columnNgayNhan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_THUE_PHONGRow this[int index] {
                get {
                    return ((CHI_TIET_PHIEU_THUE_PHONGRow)(this.Rows[index]));
                }
            }
            
            public event CHI_TIET_PHIEU_THUE_PHONGRowChangeEventHandler CHI_TIET_PHIEU_THUE_PHONGRowChanging;
            
            public event CHI_TIET_PHIEU_THUE_PHONGRowChangeEventHandler CHI_TIET_PHIEU_THUE_PHONGRowChanged;
            
            public event CHI_TIET_PHIEU_THUE_PHONGRowChangeEventHandler CHI_TIET_PHIEU_THUE_PHONGRowDeleting;
            
            public event CHI_TIET_PHIEU_THUE_PHONGRowChangeEventHandler CHI_TIET_PHIEU_THUE_PHONGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCHI_TIET_PHIEU_THUE_PHONGRow(CHI_TIET_PHIEU_THUE_PHONGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_THUE_PHONGRow AddCHI_TIET_PHIEU_THUE_PHONGRow(long STT, PHIEU_THUE_PHONGRow parentPHIEU_THUE_PHONGRowByFK_CHI_TIET_PHIEU_THUE_PHONG_PHIEU_THUE_PHONG, PHONGRow parentPHONGRowByFK_CHI_TIET_PHIEU_THUE_PHONG_PHONG, System.DateTime NgayDangKy, System.DateTime NgayNhan) {
                CHI_TIET_PHIEU_THUE_PHONGRow rowCHI_TIET_PHIEU_THUE_PHONGRow = ((CHI_TIET_PHIEU_THUE_PHONGRow)(this.NewRow()));
                rowCHI_TIET_PHIEU_THUE_PHONGRow.ItemArray = new object[] {
                        STT,
                        parentPHIEU_THUE_PHONGRowByFK_CHI_TIET_PHIEU_THUE_PHONG_PHIEU_THUE_PHONG[0],
                        parentPHONGRowByFK_CHI_TIET_PHIEU_THUE_PHONG_PHONG[0],
                        NgayDangKy,
                        NgayNhan};
                this.Rows.Add(rowCHI_TIET_PHIEU_THUE_PHONGRow);
                return rowCHI_TIET_PHIEU_THUE_PHONGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_THUE_PHONGRow FindByMaPhieuThueMaPhong(string MaPhieuThue, string MaPhong) {
                return ((CHI_TIET_PHIEU_THUE_PHONGRow)(this.Rows.Find(new object[] {
                            MaPhieuThue,
                            MaPhong})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CHI_TIET_PHIEU_THUE_PHONGDataTable cln = ((CHI_TIET_PHIEU_THUE_PHONGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CHI_TIET_PHIEU_THUE_PHONGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSTT = base.Columns["STT"];
                this.columnMaPhieuThue = base.Columns["MaPhieuThue"];
                this.columnMaPhong = base.Columns["MaPhong"];
                this.columnNgayDangKy = base.Columns["NgayDangKy"];
                this.columnNgayNhan = base.Columns["NgayNhan"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSTT = new System.Data.DataColumn("STT", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTT);
                this.columnMaPhieuThue = new System.Data.DataColumn("MaPhieuThue", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaPhieuThue);
                this.columnMaPhong = new System.Data.DataColumn("MaPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaPhong);
                this.columnNgayDangKy = new System.Data.DataColumn("NgayDangKy", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayDangKy);
                this.columnNgayNhan = new System.Data.DataColumn("NgayNhan", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayNhan);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaPhieuThue,
                                this.columnMaPhong}, true));
                this.columnSTT.AllowDBNull = false;
                this.columnMaPhieuThue.AllowDBNull = false;
                this.columnMaPhieuThue.MaxLength = 10;
                this.columnMaPhong.AllowDBNull = false;
                this.columnMaPhong.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_THUE_PHONGRow NewCHI_TIET_PHIEU_THUE_PHONGRow() {
                return ((CHI_TIET_PHIEU_THUE_PHONGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CHI_TIET_PHIEU_THUE_PHONGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CHI_TIET_PHIEU_THUE_PHONGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHI_TIET_PHIEU_THUE_PHONGRowChanged != null)) {
                    this.CHI_TIET_PHIEU_THUE_PHONGRowChanged(this, new CHI_TIET_PHIEU_THUE_PHONGRowChangeEvent(((CHI_TIET_PHIEU_THUE_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHI_TIET_PHIEU_THUE_PHONGRowChanging != null)) {
                    this.CHI_TIET_PHIEU_THUE_PHONGRowChanging(this, new CHI_TIET_PHIEU_THUE_PHONGRowChangeEvent(((CHI_TIET_PHIEU_THUE_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHI_TIET_PHIEU_THUE_PHONGRowDeleted != null)) {
                    this.CHI_TIET_PHIEU_THUE_PHONGRowDeleted(this, new CHI_TIET_PHIEU_THUE_PHONGRowChangeEvent(((CHI_TIET_PHIEU_THUE_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHI_TIET_PHIEU_THUE_PHONGRowDeleting != null)) {
                    this.CHI_TIET_PHIEU_THUE_PHONGRowDeleting(this, new CHI_TIET_PHIEU_THUE_PHONGRowChangeEvent(((CHI_TIET_PHIEU_THUE_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCHI_TIET_PHIEU_THUE_PHONGRow(CHI_TIET_PHIEU_THUE_PHONGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHI_TIET_PHIEU_THUE_PHONGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHINH_SACH_TRA_PHONGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaChinhSach;
            
            private System.Data.DataColumn columnThoiGianQuiDinh;
            
            private System.Data.DataColumn columnPhuThu;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHINH_SACH_TRA_PHONGDataTable() {
                this.TableName = "CHINH_SACH_TRA_PHONG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHINH_SACH_TRA_PHONGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CHINH_SACH_TRA_PHONGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaChinhSachColumn {
                get {
                    return this.columnMaChinhSach;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ThoiGianQuiDinhColumn {
                get {
                    return this.columnThoiGianQuiDinh;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PhuThuColumn {
                get {
                    return this.columnPhuThu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHINH_SACH_TRA_PHONGRow this[int index] {
                get {
                    return ((CHINH_SACH_TRA_PHONGRow)(this.Rows[index]));
                }
            }
            
            public event CHINH_SACH_TRA_PHONGRowChangeEventHandler CHINH_SACH_TRA_PHONGRowChanging;
            
            public event CHINH_SACH_TRA_PHONGRowChangeEventHandler CHINH_SACH_TRA_PHONGRowChanged;
            
            public event CHINH_SACH_TRA_PHONGRowChangeEventHandler CHINH_SACH_TRA_PHONGRowDeleting;
            
            public event CHINH_SACH_TRA_PHONGRowChangeEventHandler CHINH_SACH_TRA_PHONGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCHINH_SACH_TRA_PHONGRow(CHINH_SACH_TRA_PHONGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHINH_SACH_TRA_PHONGRow AddCHINH_SACH_TRA_PHONGRow(string MaChinhSach, string ThoiGianQuiDinh, double PhuThu) {
                CHINH_SACH_TRA_PHONGRow rowCHINH_SACH_TRA_PHONGRow = ((CHINH_SACH_TRA_PHONGRow)(this.NewRow()));
                rowCHINH_SACH_TRA_PHONGRow.ItemArray = new object[] {
                        MaChinhSach,
                        ThoiGianQuiDinh,
                        PhuThu};
                this.Rows.Add(rowCHINH_SACH_TRA_PHONGRow);
                return rowCHINH_SACH_TRA_PHONGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHINH_SACH_TRA_PHONGRow FindByMaChinhSach(string MaChinhSach) {
                return ((CHINH_SACH_TRA_PHONGRow)(this.Rows.Find(new object[] {
                            MaChinhSach})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CHINH_SACH_TRA_PHONGDataTable cln = ((CHINH_SACH_TRA_PHONGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CHINH_SACH_TRA_PHONGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaChinhSach = base.Columns["MaChinhSach"];
                this.columnThoiGianQuiDinh = base.Columns["ThoiGianQuiDinh"];
                this.columnPhuThu = base.Columns["PhuThu"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaChinhSach = new System.Data.DataColumn("MaChinhSach", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaChinhSach);
                this.columnThoiGianQuiDinh = new System.Data.DataColumn("ThoiGianQuiDinh", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnThoiGianQuiDinh);
                this.columnPhuThu = new System.Data.DataColumn("PhuThu", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhuThu);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaChinhSach}, true));
                this.columnMaChinhSach.AllowDBNull = false;
                this.columnMaChinhSach.Unique = true;
                this.columnMaChinhSach.MaxLength = 10;
                this.columnThoiGianQuiDinh.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHINH_SACH_TRA_PHONGRow NewCHINH_SACH_TRA_PHONGRow() {
                return ((CHINH_SACH_TRA_PHONGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CHINH_SACH_TRA_PHONGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CHINH_SACH_TRA_PHONGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHINH_SACH_TRA_PHONGRowChanged != null)) {
                    this.CHINH_SACH_TRA_PHONGRowChanged(this, new CHINH_SACH_TRA_PHONGRowChangeEvent(((CHINH_SACH_TRA_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHINH_SACH_TRA_PHONGRowChanging != null)) {
                    this.CHINH_SACH_TRA_PHONGRowChanging(this, new CHINH_SACH_TRA_PHONGRowChangeEvent(((CHINH_SACH_TRA_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHINH_SACH_TRA_PHONGRowDeleted != null)) {
                    this.CHINH_SACH_TRA_PHONGRowDeleted(this, new CHINH_SACH_TRA_PHONGRowChangeEvent(((CHINH_SACH_TRA_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHINH_SACH_TRA_PHONGRowDeleting != null)) {
                    this.CHINH_SACH_TRA_PHONGRowDeleting(this, new CHINH_SACH_TRA_PHONGRowChangeEvent(((CHINH_SACH_TRA_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCHINH_SACH_TRA_PHONGRow(CHINH_SACH_TRA_PHONGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHINH_SACH_TRA_PHONGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DANH_SACH_SU_DUNG_DICH_VUDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaSuDungDvu;
            
            private System.Data.DataColumn columnMaDichVu;
            
            private System.Data.DataColumn columnMaNhanPhong;
            
            private System.Data.DataColumn columnSoLuong;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANH_SACH_SU_DUNG_DICH_VUDataTable() {
                this.TableName = "DANH_SACH_SU_DUNG_DICH_VU";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DANH_SACH_SU_DUNG_DICH_VUDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DANH_SACH_SU_DUNG_DICH_VUDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaSuDungDvuColumn {
                get {
                    return this.columnMaSuDungDvu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaDichVuColumn {
                get {
                    return this.columnMaDichVu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaNhanPhongColumn {
                get {
                    return this.columnMaNhanPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoLuongColumn {
                get {
                    return this.columnSoLuong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANH_SACH_SU_DUNG_DICH_VURow this[int index] {
                get {
                    return ((DANH_SACH_SU_DUNG_DICH_VURow)(this.Rows[index]));
                }
            }
            
            public event DANH_SACH_SU_DUNG_DICH_VURowChangeEventHandler DANH_SACH_SU_DUNG_DICH_VURowChanging;
            
            public event DANH_SACH_SU_DUNG_DICH_VURowChangeEventHandler DANH_SACH_SU_DUNG_DICH_VURowChanged;
            
            public event DANH_SACH_SU_DUNG_DICH_VURowChangeEventHandler DANH_SACH_SU_DUNG_DICH_VURowDeleting;
            
            public event DANH_SACH_SU_DUNG_DICH_VURowChangeEventHandler DANH_SACH_SU_DUNG_DICH_VURowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDANH_SACH_SU_DUNG_DICH_VURow(DANH_SACH_SU_DUNG_DICH_VURow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANH_SACH_SU_DUNG_DICH_VURow AddDANH_SACH_SU_DUNG_DICH_VURow(string MaSuDungDvu, DICH_VURow parentDICH_VURowByFK_DANH_SACH_SU_DUNG_DICH_VU_DICH_VU, PHIEU_NHAN_PHONGRow parentPHIEU_NHAN_PHONGRowByFK_DANH_SACH_SU_DUNG_DICH_VU_PHIEU_NHAN_PHONG, int SoLuong) {
                DANH_SACH_SU_DUNG_DICH_VURow rowDANH_SACH_SU_DUNG_DICH_VURow = ((DANH_SACH_SU_DUNG_DICH_VURow)(this.NewRow()));
                rowDANH_SACH_SU_DUNG_DICH_VURow.ItemArray = new object[] {
                        MaSuDungDvu,
                        parentDICH_VURowByFK_DANH_SACH_SU_DUNG_DICH_VU_DICH_VU[0],
                        parentPHIEU_NHAN_PHONGRowByFK_DANH_SACH_SU_DUNG_DICH_VU_PHIEU_NHAN_PHONG[0],
                        SoLuong};
                this.Rows.Add(rowDANH_SACH_SU_DUNG_DICH_VURow);
                return rowDANH_SACH_SU_DUNG_DICH_VURow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANH_SACH_SU_DUNG_DICH_VURow FindByMaSuDungDvu(string MaSuDungDvu) {
                return ((DANH_SACH_SU_DUNG_DICH_VURow)(this.Rows.Find(new object[] {
                            MaSuDungDvu})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DANH_SACH_SU_DUNG_DICH_VUDataTable cln = ((DANH_SACH_SU_DUNG_DICH_VUDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DANH_SACH_SU_DUNG_DICH_VUDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaSuDungDvu = base.Columns["MaSuDungDvu"];
                this.columnMaDichVu = base.Columns["MaDichVu"];
                this.columnMaNhanPhong = base.Columns["MaNhanPhong"];
                this.columnSoLuong = base.Columns["SoLuong"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaSuDungDvu = new System.Data.DataColumn("MaSuDungDvu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaSuDungDvu);
                this.columnMaDichVu = new System.Data.DataColumn("MaDichVu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaDichVu);
                this.columnMaNhanPhong = new System.Data.DataColumn("MaNhanPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaNhanPhong);
                this.columnSoLuong = new System.Data.DataColumn("SoLuong", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoLuong);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaSuDungDvu}, true));
                this.columnMaSuDungDvu.AllowDBNull = false;
                this.columnMaSuDungDvu.Unique = true;
                this.columnMaSuDungDvu.MaxLength = 10;
                this.columnMaDichVu.AllowDBNull = false;
                this.columnMaDichVu.MaxLength = 10;
                this.columnMaNhanPhong.AllowDBNull = false;
                this.columnMaNhanPhong.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANH_SACH_SU_DUNG_DICH_VURow NewDANH_SACH_SU_DUNG_DICH_VURow() {
                return ((DANH_SACH_SU_DUNG_DICH_VURow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DANH_SACH_SU_DUNG_DICH_VURow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DANH_SACH_SU_DUNG_DICH_VURow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DANH_SACH_SU_DUNG_DICH_VURowChanged != null)) {
                    this.DANH_SACH_SU_DUNG_DICH_VURowChanged(this, new DANH_SACH_SU_DUNG_DICH_VURowChangeEvent(((DANH_SACH_SU_DUNG_DICH_VURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DANH_SACH_SU_DUNG_DICH_VURowChanging != null)) {
                    this.DANH_SACH_SU_DUNG_DICH_VURowChanging(this, new DANH_SACH_SU_DUNG_DICH_VURowChangeEvent(((DANH_SACH_SU_DUNG_DICH_VURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DANH_SACH_SU_DUNG_DICH_VURowDeleted != null)) {
                    this.DANH_SACH_SU_DUNG_DICH_VURowDeleted(this, new DANH_SACH_SU_DUNG_DICH_VURowChangeEvent(((DANH_SACH_SU_DUNG_DICH_VURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DANH_SACH_SU_DUNG_DICH_VURowDeleting != null)) {
                    this.DANH_SACH_SU_DUNG_DICH_VURowDeleting(this, new DANH_SACH_SU_DUNG_DICH_VURowChangeEvent(((DANH_SACH_SU_DUNG_DICH_VURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDANH_SACH_SU_DUNG_DICH_VURow(DANH_SACH_SU_DUNG_DICH_VURow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DANH_SACH_SU_DUNG_DICH_VUDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DICH_VUDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaDichVu;
            
            private System.Data.DataColumn columnMaLoaiDichVu;
            
            private System.Data.DataColumn columnMaDonVi;
            
            private System.Data.DataColumn columnDonGia;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICH_VUDataTable() {
                this.TableName = "DICH_VU";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DICH_VUDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DICH_VUDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaDichVuColumn {
                get {
                    return this.columnMaDichVu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiDichVuColumn {
                get {
                    return this.columnMaLoaiDichVu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaDonViColumn {
                get {
                    return this.columnMaDonVi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DonGiaColumn {
                get {
                    return this.columnDonGia;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICH_VURow this[int index] {
                get {
                    return ((DICH_VURow)(this.Rows[index]));
                }
            }
            
            public event DICH_VURowChangeEventHandler DICH_VURowChanging;
            
            public event DICH_VURowChangeEventHandler DICH_VURowChanged;
            
            public event DICH_VURowChangeEventHandler DICH_VURowDeleting;
            
            public event DICH_VURowChangeEventHandler DICH_VURowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDICH_VURow(DICH_VURow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICH_VURow AddDICH_VURow(string MaDichVu, LOAI_DICH_VURow parentLOAI_DICH_VURowByFK_DICH_VU_LOAI_DICH_VU, DON_VIRow parentDON_VIRowByFK_DICH_VU_DON_VI, double DonGia) {
                DICH_VURow rowDICH_VURow = ((DICH_VURow)(this.NewRow()));
                rowDICH_VURow.ItemArray = new object[] {
                        MaDichVu,
                        parentLOAI_DICH_VURowByFK_DICH_VU_LOAI_DICH_VU[0],
                        parentDON_VIRowByFK_DICH_VU_DON_VI[0],
                        DonGia};
                this.Rows.Add(rowDICH_VURow);
                return rowDICH_VURow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICH_VURow FindByMaDichVu(string MaDichVu) {
                return ((DICH_VURow)(this.Rows.Find(new object[] {
                            MaDichVu})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DICH_VUDataTable cln = ((DICH_VUDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DICH_VUDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaDichVu = base.Columns["MaDichVu"];
                this.columnMaLoaiDichVu = base.Columns["MaLoaiDichVu"];
                this.columnMaDonVi = base.Columns["MaDonVi"];
                this.columnDonGia = base.Columns["DonGia"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaDichVu = new System.Data.DataColumn("MaDichVu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaDichVu);
                this.columnMaLoaiDichVu = new System.Data.DataColumn("MaLoaiDichVu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiDichVu);
                this.columnMaDonVi = new System.Data.DataColumn("MaDonVi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaDonVi);
                this.columnDonGia = new System.Data.DataColumn("DonGia", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDonGia);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaDichVu}, true));
                this.columnMaDichVu.AllowDBNull = false;
                this.columnMaDichVu.Unique = true;
                this.columnMaDichVu.MaxLength = 10;
                this.columnMaLoaiDichVu.AllowDBNull = false;
                this.columnMaLoaiDichVu.MaxLength = 10;
                this.columnMaDonVi.AllowDBNull = false;
                this.columnMaDonVi.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICH_VURow NewDICH_VURow() {
                return ((DICH_VURow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DICH_VURow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DICH_VURow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DICH_VURowChanged != null)) {
                    this.DICH_VURowChanged(this, new DICH_VURowChangeEvent(((DICH_VURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DICH_VURowChanging != null)) {
                    this.DICH_VURowChanging(this, new DICH_VURowChangeEvent(((DICH_VURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DICH_VURowDeleted != null)) {
                    this.DICH_VURowDeleted(this, new DICH_VURowChangeEvent(((DICH_VURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DICH_VURowDeleting != null)) {
                    this.DICH_VURowDeleting(this, new DICH_VURowChangeEvent(((DICH_VURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDICH_VURow(DICH_VURow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DICH_VUDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DON_VIDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaDonVi;
            
            private System.Data.DataColumn columnTenDonVi;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DON_VIDataTable() {
                this.TableName = "DON_VI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DON_VIDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DON_VIDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaDonViColumn {
                get {
                    return this.columnMaDonVi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenDonViColumn {
                get {
                    return this.columnTenDonVi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DON_VIRow this[int index] {
                get {
                    return ((DON_VIRow)(this.Rows[index]));
                }
            }
            
            public event DON_VIRowChangeEventHandler DON_VIRowChanging;
            
            public event DON_VIRowChangeEventHandler DON_VIRowChanged;
            
            public event DON_VIRowChangeEventHandler DON_VIRowDeleting;
            
            public event DON_VIRowChangeEventHandler DON_VIRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDON_VIRow(DON_VIRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DON_VIRow AddDON_VIRow(string MaDonVi, string TenDonVi) {
                DON_VIRow rowDON_VIRow = ((DON_VIRow)(this.NewRow()));
                rowDON_VIRow.ItemArray = new object[] {
                        MaDonVi,
                        TenDonVi};
                this.Rows.Add(rowDON_VIRow);
                return rowDON_VIRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DON_VIRow FindByMaDonVi(string MaDonVi) {
                return ((DON_VIRow)(this.Rows.Find(new object[] {
                            MaDonVi})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DON_VIDataTable cln = ((DON_VIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DON_VIDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaDonVi = base.Columns["MaDonVi"];
                this.columnTenDonVi = base.Columns["TenDonVi"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaDonVi = new System.Data.DataColumn("MaDonVi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaDonVi);
                this.columnTenDonVi = new System.Data.DataColumn("TenDonVi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenDonVi);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaDonVi}, true));
                this.columnMaDonVi.AllowDBNull = false;
                this.columnMaDonVi.Unique = true;
                this.columnMaDonVi.MaxLength = 10;
                this.columnTenDonVi.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DON_VIRow NewDON_VIRow() {
                return ((DON_VIRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DON_VIRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DON_VIRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DON_VIRowChanged != null)) {
                    this.DON_VIRowChanged(this, new DON_VIRowChangeEvent(((DON_VIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DON_VIRowChanging != null)) {
                    this.DON_VIRowChanging(this, new DON_VIRowChangeEvent(((DON_VIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DON_VIRowDeleted != null)) {
                    this.DON_VIRowDeleted(this, new DON_VIRowChangeEvent(((DON_VIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DON_VIRowDeleting != null)) {
                    this.DON_VIRowDeleting(this, new DON_VIRowChangeEvent(((DON_VIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDON_VIRow(DON_VIRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DON_VIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HOA_DONDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaHoaDon;
            
            private System.Data.DataColumn columnNhanVienLap;
            
            private System.Data.DataColumn columnMaKhachHang;
            
            private System.Data.DataColumn columnMaNhanPhong;
            
            private System.Data.DataColumn columnTongTien;
            
            private System.Data.DataColumn columnNgayLap;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONDataTable() {
                this.TableName = "HOA_DON";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HOA_DONDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HOA_DONDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaHoaDonColumn {
                get {
                    return this.columnMaHoaDon;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NhanVienLapColumn {
                get {
                    return this.columnNhanVienLap;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaKhachHangColumn {
                get {
                    return this.columnMaKhachHang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaNhanPhongColumn {
                get {
                    return this.columnMaNhanPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TongTienColumn {
                get {
                    return this.columnTongTien;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayLapColumn {
                get {
                    return this.columnNgayLap;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow this[int index] {
                get {
                    return ((HOA_DONRow)(this.Rows[index]));
                }
            }
            
            public event HOA_DONRowChangeEventHandler HOA_DONRowChanging;
            
            public event HOA_DONRowChangeEventHandler HOA_DONRowChanged;
            
            public event HOA_DONRowChangeEventHandler HOA_DONRowDeleting;
            
            public event HOA_DONRowChangeEventHandler HOA_DONRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHOA_DONRow(HOA_DONRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow AddHOA_DONRow(string MaHoaDon, string NhanVienLap, KHACH_HANGRow parentKHACH_HANGRowByFK_HOA_DON_KHACH_HANG, PHIEU_NHAN_PHONGRow parentPHIEU_NHAN_PHONGRowByFK_HOA_DON_PHIEU_NHAN_PHONG, double TongTien, System.DateTime NgayLap) {
                HOA_DONRow rowHOA_DONRow = ((HOA_DONRow)(this.NewRow()));
                rowHOA_DONRow.ItemArray = new object[] {
                        MaHoaDon,
                        NhanVienLap,
                        parentKHACH_HANGRowByFK_HOA_DON_KHACH_HANG[0],
                        parentPHIEU_NHAN_PHONGRowByFK_HOA_DON_PHIEU_NHAN_PHONG[0],
                        TongTien,
                        NgayLap};
                this.Rows.Add(rowHOA_DONRow);
                return rowHOA_DONRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow FindByMaHoaDon(string MaHoaDon) {
                return ((HOA_DONRow)(this.Rows.Find(new object[] {
                            MaHoaDon})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                HOA_DONDataTable cln = ((HOA_DONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new HOA_DONDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaHoaDon = base.Columns["MaHoaDon"];
                this.columnNhanVienLap = base.Columns["NhanVienLap"];
                this.columnMaKhachHang = base.Columns["MaKhachHang"];
                this.columnMaNhanPhong = base.Columns["MaNhanPhong"];
                this.columnTongTien = base.Columns["TongTien"];
                this.columnNgayLap = base.Columns["NgayLap"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaHoaDon = new System.Data.DataColumn("MaHoaDon", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaHoaDon);
                this.columnNhanVienLap = new System.Data.DataColumn("NhanVienLap", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNhanVienLap);
                this.columnMaKhachHang = new System.Data.DataColumn("MaKhachHang", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaKhachHang);
                this.columnMaNhanPhong = new System.Data.DataColumn("MaNhanPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaNhanPhong);
                this.columnTongTien = new System.Data.DataColumn("TongTien", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTongTien);
                this.columnNgayLap = new System.Data.DataColumn("NgayLap", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayLap);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaHoaDon}, true));
                this.columnMaHoaDon.AllowDBNull = false;
                this.columnMaHoaDon.Unique = true;
                this.columnMaHoaDon.MaxLength = 10;
                this.columnNhanVienLap.MaxLength = 50;
                this.columnMaKhachHang.AllowDBNull = false;
                this.columnMaKhachHang.MaxLength = 10;
                this.columnMaNhanPhong.AllowDBNull = false;
                this.columnMaNhanPhong.MaxLength = 10;
                this.columnNgayLap.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow NewHOA_DONRow() {
                return ((HOA_DONRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new HOA_DONRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(HOA_DONRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HOA_DONRowChanged != null)) {
                    this.HOA_DONRowChanged(this, new HOA_DONRowChangeEvent(((HOA_DONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HOA_DONRowChanging != null)) {
                    this.HOA_DONRowChanging(this, new HOA_DONRowChangeEvent(((HOA_DONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HOA_DONRowDeleted != null)) {
                    this.HOA_DONRowDeleted(this, new HOA_DONRowChangeEvent(((HOA_DONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HOA_DONRowDeleting != null)) {
                    this.HOA_DONRowDeleting(this, new HOA_DONRowChangeEvent(((HOA_DONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHOA_DONRow(HOA_DONRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HOA_DONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KHACH_HANGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaKhachHang;
            
            private System.Data.DataColumn columnTenKhachHang;
            
            private System.Data.DataColumn columnCMND;
            
            private System.Data.DataColumn columnGioiTinh;
            
            private System.Data.DataColumn columnDiaChi;
            
            private System.Data.DataColumn columnDienThoai;
            
            private System.Data.DataColumn columnQuocTich;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGDataTable() {
                this.TableName = "KHACH_HANG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KHACH_HANGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KHACH_HANGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaKhachHangColumn {
                get {
                    return this.columnMaKhachHang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenKhachHangColumn {
                get {
                    return this.columnTenKhachHang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CMNDColumn {
                get {
                    return this.columnCMND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GioiTinhColumn {
                get {
                    return this.columnGioiTinh;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiaChiColumn {
                get {
                    return this.columnDiaChi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DienThoaiColumn {
                get {
                    return this.columnDienThoai;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QuocTichColumn {
                get {
                    return this.columnQuocTich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow this[int index] {
                get {
                    return ((KHACH_HANGRow)(this.Rows[index]));
                }
            }
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowChanging;
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowChanged;
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowDeleting;
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKHACH_HANGRow(KHACH_HANGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow AddKHACH_HANGRow(string MaKhachHang, string TenKhachHang, string CMND, string GioiTinh, string DiaChi, int DienThoai, string QuocTich) {
                KHACH_HANGRow rowKHACH_HANGRow = ((KHACH_HANGRow)(this.NewRow()));
                rowKHACH_HANGRow.ItemArray = new object[] {
                        MaKhachHang,
                        TenKhachHang,
                        CMND,
                        GioiTinh,
                        DiaChi,
                        DienThoai,
                        QuocTich};
                this.Rows.Add(rowKHACH_HANGRow);
                return rowKHACH_HANGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow FindByMaKhachHang(string MaKhachHang) {
                return ((KHACH_HANGRow)(this.Rows.Find(new object[] {
                            MaKhachHang})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                KHACH_HANGDataTable cln = ((KHACH_HANGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new KHACH_HANGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaKhachHang = base.Columns["MaKhachHang"];
                this.columnTenKhachHang = base.Columns["TenKhachHang"];
                this.columnCMND = base.Columns["CMND"];
                this.columnGioiTinh = base.Columns["GioiTinh"];
                this.columnDiaChi = base.Columns["DiaChi"];
                this.columnDienThoai = base.Columns["DienThoai"];
                this.columnQuocTich = base.Columns["QuocTich"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaKhachHang = new System.Data.DataColumn("MaKhachHang", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaKhachHang);
                this.columnTenKhachHang = new System.Data.DataColumn("TenKhachHang", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenKhachHang);
                this.columnCMND = new System.Data.DataColumn("CMND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMND);
                this.columnGioiTinh = new System.Data.DataColumn("GioiTinh", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGioiTinh);
                this.columnDiaChi = new System.Data.DataColumn("DiaChi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiaChi);
                this.columnDienThoai = new System.Data.DataColumn("DienThoai", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDienThoai);
                this.columnQuocTich = new System.Data.DataColumn("QuocTich", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuocTich);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaKhachHang}, true));
                this.columnMaKhachHang.AllowDBNull = false;
                this.columnMaKhachHang.Unique = true;
                this.columnMaKhachHang.MaxLength = 10;
                this.columnTenKhachHang.MaxLength = 50;
                this.columnCMND.MaxLength = 15;
                this.columnGioiTinh.MaxLength = 50;
                this.columnDiaChi.MaxLength = 50;
                this.columnQuocTich.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow NewKHACH_HANGRow() {
                return ((KHACH_HANGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new KHACH_HANGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(KHACH_HANGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KHACH_HANGRowChanged != null)) {
                    this.KHACH_HANGRowChanged(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KHACH_HANGRowChanging != null)) {
                    this.KHACH_HANGRowChanging(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KHACH_HANGRowDeleted != null)) {
                    this.KHACH_HANGRowDeleted(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KHACH_HANGRowDeleting != null)) {
                    this.KHACH_HANGRowDeleting(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKHACH_HANGRow(KHACH_HANGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KHACH_HANGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LOAI_DICH_VUDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaLoaiDichVu;
            
            private System.Data.DataColumn columnTenLoaiDichVu;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DICH_VUDataTable() {
                this.TableName = "LOAI_DICH_VU";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_DICH_VUDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LOAI_DICH_VUDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiDichVuColumn {
                get {
                    return this.columnMaLoaiDichVu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenLoaiDichVuColumn {
                get {
                    return this.columnTenLoaiDichVu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DICH_VURow this[int index] {
                get {
                    return ((LOAI_DICH_VURow)(this.Rows[index]));
                }
            }
            
            public event LOAI_DICH_VURowChangeEventHandler LOAI_DICH_VURowChanging;
            
            public event LOAI_DICH_VURowChangeEventHandler LOAI_DICH_VURowChanged;
            
            public event LOAI_DICH_VURowChangeEventHandler LOAI_DICH_VURowDeleting;
            
            public event LOAI_DICH_VURowChangeEventHandler LOAI_DICH_VURowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLOAI_DICH_VURow(LOAI_DICH_VURow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DICH_VURow AddLOAI_DICH_VURow(string MaLoaiDichVu, string TenLoaiDichVu) {
                LOAI_DICH_VURow rowLOAI_DICH_VURow = ((LOAI_DICH_VURow)(this.NewRow()));
                rowLOAI_DICH_VURow.ItemArray = new object[] {
                        MaLoaiDichVu,
                        TenLoaiDichVu};
                this.Rows.Add(rowLOAI_DICH_VURow);
                return rowLOAI_DICH_VURow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DICH_VURow FindByMaLoaiDichVu(string MaLoaiDichVu) {
                return ((LOAI_DICH_VURow)(this.Rows.Find(new object[] {
                            MaLoaiDichVu})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                LOAI_DICH_VUDataTable cln = ((LOAI_DICH_VUDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new LOAI_DICH_VUDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaLoaiDichVu = base.Columns["MaLoaiDichVu"];
                this.columnTenLoaiDichVu = base.Columns["TenLoaiDichVu"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaLoaiDichVu = new System.Data.DataColumn("MaLoaiDichVu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiDichVu);
                this.columnTenLoaiDichVu = new System.Data.DataColumn("TenLoaiDichVu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenLoaiDichVu);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaLoaiDichVu}, true));
                this.columnMaLoaiDichVu.AllowDBNull = false;
                this.columnMaLoaiDichVu.Unique = true;
                this.columnMaLoaiDichVu.MaxLength = 10;
                this.columnTenLoaiDichVu.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DICH_VURow NewLOAI_DICH_VURow() {
                return ((LOAI_DICH_VURow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new LOAI_DICH_VURow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(LOAI_DICH_VURow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LOAI_DICH_VURowChanged != null)) {
                    this.LOAI_DICH_VURowChanged(this, new LOAI_DICH_VURowChangeEvent(((LOAI_DICH_VURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LOAI_DICH_VURowChanging != null)) {
                    this.LOAI_DICH_VURowChanging(this, new LOAI_DICH_VURowChangeEvent(((LOAI_DICH_VURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LOAI_DICH_VURowDeleted != null)) {
                    this.LOAI_DICH_VURowDeleted(this, new LOAI_DICH_VURowChangeEvent(((LOAI_DICH_VURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LOAI_DICH_VURowDeleting != null)) {
                    this.LOAI_DICH_VURowDeleting(this, new LOAI_DICH_VURowChangeEvent(((LOAI_DICH_VURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLOAI_DICH_VURow(LOAI_DICH_VURow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LOAI_DICH_VUDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LOAI_NGUOI_DUNGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnLoaiNguoiDung;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NGUOI_DUNGDataTable() {
                this.TableName = "LOAI_NGUOI_DUNG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_NGUOI_DUNGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LOAI_NGUOI_DUNGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LoaiNguoiDungColumn {
                get {
                    return this.columnLoaiNguoiDung;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NGUOI_DUNGRow this[int index] {
                get {
                    return ((LOAI_NGUOI_DUNGRow)(this.Rows[index]));
                }
            }
            
            public event LOAI_NGUOI_DUNGRowChangeEventHandler LOAI_NGUOI_DUNGRowChanging;
            
            public event LOAI_NGUOI_DUNGRowChangeEventHandler LOAI_NGUOI_DUNGRowChanged;
            
            public event LOAI_NGUOI_DUNGRowChangeEventHandler LOAI_NGUOI_DUNGRowDeleting;
            
            public event LOAI_NGUOI_DUNGRowChangeEventHandler LOAI_NGUOI_DUNGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLOAI_NGUOI_DUNGRow(LOAI_NGUOI_DUNGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NGUOI_DUNGRow AddLOAI_NGUOI_DUNGRow(string LoaiNguoiDung) {
                LOAI_NGUOI_DUNGRow rowLOAI_NGUOI_DUNGRow = ((LOAI_NGUOI_DUNGRow)(this.NewRow()));
                rowLOAI_NGUOI_DUNGRow.ItemArray = new object[] {
                        LoaiNguoiDung};
                this.Rows.Add(rowLOAI_NGUOI_DUNGRow);
                return rowLOAI_NGUOI_DUNGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NGUOI_DUNGRow FindByLoaiNguoiDung(string LoaiNguoiDung) {
                return ((LOAI_NGUOI_DUNGRow)(this.Rows.Find(new object[] {
                            LoaiNguoiDung})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                LOAI_NGUOI_DUNGDataTable cln = ((LOAI_NGUOI_DUNGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new LOAI_NGUOI_DUNGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLoaiNguoiDung = base.Columns["LoaiNguoiDung"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLoaiNguoiDung = new System.Data.DataColumn("LoaiNguoiDung", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoaiNguoiDung);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnLoaiNguoiDung}, true));
                this.columnLoaiNguoiDung.AllowDBNull = false;
                this.columnLoaiNguoiDung.Unique = true;
                this.columnLoaiNguoiDung.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NGUOI_DUNGRow NewLOAI_NGUOI_DUNGRow() {
                return ((LOAI_NGUOI_DUNGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new LOAI_NGUOI_DUNGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(LOAI_NGUOI_DUNGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LOAI_NGUOI_DUNGRowChanged != null)) {
                    this.LOAI_NGUOI_DUNGRowChanged(this, new LOAI_NGUOI_DUNGRowChangeEvent(((LOAI_NGUOI_DUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LOAI_NGUOI_DUNGRowChanging != null)) {
                    this.LOAI_NGUOI_DUNGRowChanging(this, new LOAI_NGUOI_DUNGRowChangeEvent(((LOAI_NGUOI_DUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LOAI_NGUOI_DUNGRowDeleted != null)) {
                    this.LOAI_NGUOI_DUNGRowDeleted(this, new LOAI_NGUOI_DUNGRowChangeEvent(((LOAI_NGUOI_DUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LOAI_NGUOI_DUNGRowDeleting != null)) {
                    this.LOAI_NGUOI_DUNGRowDeleting(this, new LOAI_NGUOI_DUNGRowChangeEvent(((LOAI_NGUOI_DUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLOAI_NGUOI_DUNGRow(LOAI_NGUOI_DUNGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LOAI_NGUOI_DUNGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LOAI_PHONGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaLoaiPhong;
            
            private System.Data.DataColumn columnTenLoaiPhong;
            
            private System.Data.DataColumn columnDonGia;
            
            private System.Data.DataColumn columnSoNguoiChuan;
            
            private System.Data.DataColumn columnSoNguoiToiDa;
            
            private System.Data.DataColumn columnTyLeTang;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGDataTable() {
                this.TableName = "LOAI_PHONG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_PHONGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LOAI_PHONGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiPhongColumn {
                get {
                    return this.columnMaLoaiPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenLoaiPhongColumn {
                get {
                    return this.columnTenLoaiPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DonGiaColumn {
                get {
                    return this.columnDonGia;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoNguoiChuanColumn {
                get {
                    return this.columnSoNguoiChuan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoNguoiToiDaColumn {
                get {
                    return this.columnSoNguoiToiDa;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TyLeTangColumn {
                get {
                    return this.columnTyLeTang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRow this[int index] {
                get {
                    return ((LOAI_PHONGRow)(this.Rows[index]));
                }
            }
            
            public event LOAI_PHONGRowChangeEventHandler LOAI_PHONGRowChanging;
            
            public event LOAI_PHONGRowChangeEventHandler LOAI_PHONGRowChanged;
            
            public event LOAI_PHONGRowChangeEventHandler LOAI_PHONGRowDeleting;
            
            public event LOAI_PHONGRowChangeEventHandler LOAI_PHONGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLOAI_PHONGRow(LOAI_PHONGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRow AddLOAI_PHONGRow(string MaLoaiPhong, string TenLoaiPhong, double DonGia, int SoNguoiChuan, int SoNguoiToiDa, double TyLeTang) {
                LOAI_PHONGRow rowLOAI_PHONGRow = ((LOAI_PHONGRow)(this.NewRow()));
                rowLOAI_PHONGRow.ItemArray = new object[] {
                        MaLoaiPhong,
                        TenLoaiPhong,
                        DonGia,
                        SoNguoiChuan,
                        SoNguoiToiDa,
                        TyLeTang};
                this.Rows.Add(rowLOAI_PHONGRow);
                return rowLOAI_PHONGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRow FindByMaLoaiPhong(string MaLoaiPhong) {
                return ((LOAI_PHONGRow)(this.Rows.Find(new object[] {
                            MaLoaiPhong})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                LOAI_PHONGDataTable cln = ((LOAI_PHONGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new LOAI_PHONGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaLoaiPhong = base.Columns["MaLoaiPhong"];
                this.columnTenLoaiPhong = base.Columns["TenLoaiPhong"];
                this.columnDonGia = base.Columns["DonGia"];
                this.columnSoNguoiChuan = base.Columns["SoNguoiChuan"];
                this.columnSoNguoiToiDa = base.Columns["SoNguoiToiDa"];
                this.columnTyLeTang = base.Columns["TyLeTang"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaLoaiPhong = new System.Data.DataColumn("MaLoaiPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiPhong);
                this.columnTenLoaiPhong = new System.Data.DataColumn("TenLoaiPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenLoaiPhong);
                this.columnDonGia = new System.Data.DataColumn("DonGia", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDonGia);
                this.columnSoNguoiChuan = new System.Data.DataColumn("SoNguoiChuan", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoNguoiChuan);
                this.columnSoNguoiToiDa = new System.Data.DataColumn("SoNguoiToiDa", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoNguoiToiDa);
                this.columnTyLeTang = new System.Data.DataColumn("TyLeTang", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTyLeTang);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaLoaiPhong}, true));
                this.columnMaLoaiPhong.AllowDBNull = false;
                this.columnMaLoaiPhong.Unique = true;
                this.columnMaLoaiPhong.MaxLength = 10;
                this.columnTenLoaiPhong.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRow NewLOAI_PHONGRow() {
                return ((LOAI_PHONGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new LOAI_PHONGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(LOAI_PHONGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LOAI_PHONGRowChanged != null)) {
                    this.LOAI_PHONGRowChanged(this, new LOAI_PHONGRowChangeEvent(((LOAI_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LOAI_PHONGRowChanging != null)) {
                    this.LOAI_PHONGRowChanging(this, new LOAI_PHONGRowChangeEvent(((LOAI_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LOAI_PHONGRowDeleted != null)) {
                    this.LOAI_PHONGRowDeleted(this, new LOAI_PHONGRowChangeEvent(((LOAI_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LOAI_PHONGRowDeleting != null)) {
                    this.LOAI_PHONGRowDeleting(this, new LOAI_PHONGRowChangeEvent(((LOAI_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLOAI_PHONGRow(LOAI_PHONGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LOAI_PHONGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LOAI_TINH_TRANGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaLoaiTinhTrangPhong;
            
            private System.Data.DataColumn columnTenLoaiTinhTrang;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TINH_TRANGDataTable() {
                this.TableName = "LOAI_TINH_TRANG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_TINH_TRANGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LOAI_TINH_TRANGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiTinhTrangPhongColumn {
                get {
                    return this.columnMaLoaiTinhTrangPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenLoaiTinhTrangColumn {
                get {
                    return this.columnTenLoaiTinhTrang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TINH_TRANGRow this[int index] {
                get {
                    return ((LOAI_TINH_TRANGRow)(this.Rows[index]));
                }
            }
            
            public event LOAI_TINH_TRANGRowChangeEventHandler LOAI_TINH_TRANGRowChanging;
            
            public event LOAI_TINH_TRANGRowChangeEventHandler LOAI_TINH_TRANGRowChanged;
            
            public event LOAI_TINH_TRANGRowChangeEventHandler LOAI_TINH_TRANGRowDeleting;
            
            public event LOAI_TINH_TRANGRowChangeEventHandler LOAI_TINH_TRANGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLOAI_TINH_TRANGRow(LOAI_TINH_TRANGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TINH_TRANGRow AddLOAI_TINH_TRANGRow(string MaLoaiTinhTrangPhong, string TenLoaiTinhTrang) {
                LOAI_TINH_TRANGRow rowLOAI_TINH_TRANGRow = ((LOAI_TINH_TRANGRow)(this.NewRow()));
                rowLOAI_TINH_TRANGRow.ItemArray = new object[] {
                        MaLoaiTinhTrangPhong,
                        TenLoaiTinhTrang};
                this.Rows.Add(rowLOAI_TINH_TRANGRow);
                return rowLOAI_TINH_TRANGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TINH_TRANGRow FindByMaLoaiTinhTrangPhong(string MaLoaiTinhTrangPhong) {
                return ((LOAI_TINH_TRANGRow)(this.Rows.Find(new object[] {
                            MaLoaiTinhTrangPhong})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                LOAI_TINH_TRANGDataTable cln = ((LOAI_TINH_TRANGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new LOAI_TINH_TRANGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaLoaiTinhTrangPhong = base.Columns["MaLoaiTinhTrangPhong"];
                this.columnTenLoaiTinhTrang = base.Columns["TenLoaiTinhTrang"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaLoaiTinhTrangPhong = new System.Data.DataColumn("MaLoaiTinhTrangPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiTinhTrangPhong);
                this.columnTenLoaiTinhTrang = new System.Data.DataColumn("TenLoaiTinhTrang", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenLoaiTinhTrang);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaLoaiTinhTrangPhong}, true));
                this.columnMaLoaiTinhTrangPhong.AllowDBNull = false;
                this.columnMaLoaiTinhTrangPhong.Unique = true;
                this.columnMaLoaiTinhTrangPhong.MaxLength = 10;
                this.columnTenLoaiTinhTrang.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TINH_TRANGRow NewLOAI_TINH_TRANGRow() {
                return ((LOAI_TINH_TRANGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new LOAI_TINH_TRANGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(LOAI_TINH_TRANGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LOAI_TINH_TRANGRowChanged != null)) {
                    this.LOAI_TINH_TRANGRowChanged(this, new LOAI_TINH_TRANGRowChangeEvent(((LOAI_TINH_TRANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LOAI_TINH_TRANGRowChanging != null)) {
                    this.LOAI_TINH_TRANGRowChanging(this, new LOAI_TINH_TRANGRowChangeEvent(((LOAI_TINH_TRANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LOAI_TINH_TRANGRowDeleted != null)) {
                    this.LOAI_TINH_TRANGRowDeleted(this, new LOAI_TINH_TRANGRowChangeEvent(((LOAI_TINH_TRANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LOAI_TINH_TRANGRowDeleting != null)) {
                    this.LOAI_TINH_TRANGRowDeleting(this, new LOAI_TINH_TRANGRowChangeEvent(((LOAI_TINH_TRANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLOAI_TINH_TRANGRow(LOAI_TINH_TRANGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LOAI_TINH_TRANGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MAT_DO_SU_DUNG_PHONGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaMatDo;
            
            private System.Data.DataColumn columnTongNgay;
            
            private System.Data.DataColumn columnThang;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_DO_SU_DUNG_PHONGDataTable() {
                this.TableName = "MAT_DO_SU_DUNG_PHONG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MAT_DO_SU_DUNG_PHONGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MAT_DO_SU_DUNG_PHONGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaMatDoColumn {
                get {
                    return this.columnMaMatDo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TongNgayColumn {
                get {
                    return this.columnTongNgay;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ThangColumn {
                get {
                    return this.columnThang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_DO_SU_DUNG_PHONGRow this[int index] {
                get {
                    return ((MAT_DO_SU_DUNG_PHONGRow)(this.Rows[index]));
                }
            }
            
            public event MAT_DO_SU_DUNG_PHONGRowChangeEventHandler MAT_DO_SU_DUNG_PHONGRowChanging;
            
            public event MAT_DO_SU_DUNG_PHONGRowChangeEventHandler MAT_DO_SU_DUNG_PHONGRowChanged;
            
            public event MAT_DO_SU_DUNG_PHONGRowChangeEventHandler MAT_DO_SU_DUNG_PHONGRowDeleting;
            
            public event MAT_DO_SU_DUNG_PHONGRowChangeEventHandler MAT_DO_SU_DUNG_PHONGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMAT_DO_SU_DUNG_PHONGRow(MAT_DO_SU_DUNG_PHONGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_DO_SU_DUNG_PHONGRow AddMAT_DO_SU_DUNG_PHONGRow(string MaMatDo, int TongNgay, System.DateTime Thang) {
                MAT_DO_SU_DUNG_PHONGRow rowMAT_DO_SU_DUNG_PHONGRow = ((MAT_DO_SU_DUNG_PHONGRow)(this.NewRow()));
                rowMAT_DO_SU_DUNG_PHONGRow.ItemArray = new object[] {
                        MaMatDo,
                        TongNgay,
                        Thang};
                this.Rows.Add(rowMAT_DO_SU_DUNG_PHONGRow);
                return rowMAT_DO_SU_DUNG_PHONGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_DO_SU_DUNG_PHONGRow FindByMaMatDo(string MaMatDo) {
                return ((MAT_DO_SU_DUNG_PHONGRow)(this.Rows.Find(new object[] {
                            MaMatDo})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                MAT_DO_SU_DUNG_PHONGDataTable cln = ((MAT_DO_SU_DUNG_PHONGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new MAT_DO_SU_DUNG_PHONGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaMatDo = base.Columns["MaMatDo"];
                this.columnTongNgay = base.Columns["TongNgay"];
                this.columnThang = base.Columns["Thang"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaMatDo = new System.Data.DataColumn("MaMatDo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaMatDo);
                this.columnTongNgay = new System.Data.DataColumn("TongNgay", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTongNgay);
                this.columnThang = new System.Data.DataColumn("Thang", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnThang);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaMatDo}, true));
                this.columnMaMatDo.AllowDBNull = false;
                this.columnMaMatDo.Unique = true;
                this.columnMaMatDo.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_DO_SU_DUNG_PHONGRow NewMAT_DO_SU_DUNG_PHONGRow() {
                return ((MAT_DO_SU_DUNG_PHONGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new MAT_DO_SU_DUNG_PHONGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(MAT_DO_SU_DUNG_PHONGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MAT_DO_SU_DUNG_PHONGRowChanged != null)) {
                    this.MAT_DO_SU_DUNG_PHONGRowChanged(this, new MAT_DO_SU_DUNG_PHONGRowChangeEvent(((MAT_DO_SU_DUNG_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MAT_DO_SU_DUNG_PHONGRowChanging != null)) {
                    this.MAT_DO_SU_DUNG_PHONGRowChanging(this, new MAT_DO_SU_DUNG_PHONGRowChangeEvent(((MAT_DO_SU_DUNG_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MAT_DO_SU_DUNG_PHONGRowDeleted != null)) {
                    this.MAT_DO_SU_DUNG_PHONGRowDeleted(this, new MAT_DO_SU_DUNG_PHONGRowChangeEvent(((MAT_DO_SU_DUNG_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MAT_DO_SU_DUNG_PHONGRowDeleting != null)) {
                    this.MAT_DO_SU_DUNG_PHONGRowDeleting(this, new MAT_DO_SU_DUNG_PHONGRowChangeEvent(((MAT_DO_SU_DUNG_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMAT_DO_SU_DUNG_PHONGRow(MAT_DO_SU_DUNG_PHONGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MAT_DO_SU_DUNG_PHONGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NGUOI_DUNGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTenDangNhap;
            
            private System.Data.DataColumn columnMatKhau;
            
            private System.Data.DataColumn columnLoaiNguoiDung;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOI_DUNGDataTable() {
                this.TableName = "NGUOI_DUNG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NGUOI_DUNGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NGUOI_DUNGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenDangNhapColumn {
                get {
                    return this.columnTenDangNhap;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MatKhauColumn {
                get {
                    return this.columnMatKhau;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LoaiNguoiDungColumn {
                get {
                    return this.columnLoaiNguoiDung;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOI_DUNGRow this[int index] {
                get {
                    return ((NGUOI_DUNGRow)(this.Rows[index]));
                }
            }
            
            public event NGUOI_DUNGRowChangeEventHandler NGUOI_DUNGRowChanging;
            
            public event NGUOI_DUNGRowChangeEventHandler NGUOI_DUNGRowChanged;
            
            public event NGUOI_DUNGRowChangeEventHandler NGUOI_DUNGRowDeleting;
            
            public event NGUOI_DUNGRowChangeEventHandler NGUOI_DUNGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNGUOI_DUNGRow(NGUOI_DUNGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOI_DUNGRow AddNGUOI_DUNGRow(string TenDangNhap, string MatKhau, LOAI_NGUOI_DUNGRow parentLOAI_NGUOI_DUNGRowByFK_NGUOI_DUNG_LOAI_NGUOI_DUNG) {
                NGUOI_DUNGRow rowNGUOI_DUNGRow = ((NGUOI_DUNGRow)(this.NewRow()));
                rowNGUOI_DUNGRow.ItemArray = new object[] {
                        TenDangNhap,
                        MatKhau,
                        parentLOAI_NGUOI_DUNGRowByFK_NGUOI_DUNG_LOAI_NGUOI_DUNG[0]};
                this.Rows.Add(rowNGUOI_DUNGRow);
                return rowNGUOI_DUNGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                NGUOI_DUNGDataTable cln = ((NGUOI_DUNGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new NGUOI_DUNGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTenDangNhap = base.Columns["TenDangNhap"];
                this.columnMatKhau = base.Columns["MatKhau"];
                this.columnLoaiNguoiDung = base.Columns["LoaiNguoiDung"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTenDangNhap = new System.Data.DataColumn("TenDangNhap", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenDangNhap);
                this.columnMatKhau = new System.Data.DataColumn("MatKhau", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatKhau);
                this.columnLoaiNguoiDung = new System.Data.DataColumn("LoaiNguoiDung", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoaiNguoiDung);
                this.columnTenDangNhap.AllowDBNull = false;
                this.columnTenDangNhap.MaxLength = 50;
                this.columnMatKhau.AllowDBNull = false;
                this.columnMatKhau.MaxLength = 50;
                this.columnLoaiNguoiDung.AllowDBNull = false;
                this.columnLoaiNguoiDung.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOI_DUNGRow NewNGUOI_DUNGRow() {
                return ((NGUOI_DUNGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new NGUOI_DUNGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(NGUOI_DUNGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NGUOI_DUNGRowChanged != null)) {
                    this.NGUOI_DUNGRowChanged(this, new NGUOI_DUNGRowChangeEvent(((NGUOI_DUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NGUOI_DUNGRowChanging != null)) {
                    this.NGUOI_DUNGRowChanging(this, new NGUOI_DUNGRowChangeEvent(((NGUOI_DUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NGUOI_DUNGRowDeleted != null)) {
                    this.NGUOI_DUNGRowDeleted(this, new NGUOI_DUNGRowChangeEvent(((NGUOI_DUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NGUOI_DUNGRowDeleting != null)) {
                    this.NGUOI_DUNGRowDeleting(this, new NGUOI_DUNGRowChangeEvent(((NGUOI_DUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNGUOI_DUNGRow(NGUOI_DUNGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NGUOI_DUNGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PHIEU_NHAN_PHONGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaNhanPhong;
            
            private System.Data.DataColumn columnMaPhieuThue;
            
            private System.Data.DataColumn columnMaKhachHang;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_NHAN_PHONGDataTable() {
                this.TableName = "PHIEU_NHAN_PHONG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHIEU_NHAN_PHONGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PHIEU_NHAN_PHONGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaNhanPhongColumn {
                get {
                    return this.columnMaNhanPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaPhieuThueColumn {
                get {
                    return this.columnMaPhieuThue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaKhachHangColumn {
                get {
                    return this.columnMaKhachHang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_NHAN_PHONGRow this[int index] {
                get {
                    return ((PHIEU_NHAN_PHONGRow)(this.Rows[index]));
                }
            }
            
            public event PHIEU_NHAN_PHONGRowChangeEventHandler PHIEU_NHAN_PHONGRowChanging;
            
            public event PHIEU_NHAN_PHONGRowChangeEventHandler PHIEU_NHAN_PHONGRowChanged;
            
            public event PHIEU_NHAN_PHONGRowChangeEventHandler PHIEU_NHAN_PHONGRowDeleting;
            
            public event PHIEU_NHAN_PHONGRowChangeEventHandler PHIEU_NHAN_PHONGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPHIEU_NHAN_PHONGRow(PHIEU_NHAN_PHONGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_NHAN_PHONGRow AddPHIEU_NHAN_PHONGRow(string MaNhanPhong, PHIEU_THUE_PHONGRow parentPHIEU_THUE_PHONGRowByFK_PHIEU_NHAN_PHONG_PHIEU_THUE_PHONG, KHACH_HANGRow parentKHACH_HANGRowByFK_PHIEU_NHAN_PHONG_KHACH_HANG) {
                PHIEU_NHAN_PHONGRow rowPHIEU_NHAN_PHONGRow = ((PHIEU_NHAN_PHONGRow)(this.NewRow()));
                rowPHIEU_NHAN_PHONGRow.ItemArray = new object[] {
                        MaNhanPhong,
                        parentPHIEU_THUE_PHONGRowByFK_PHIEU_NHAN_PHONG_PHIEU_THUE_PHONG[0],
                        parentKHACH_HANGRowByFK_PHIEU_NHAN_PHONG_KHACH_HANG[0]};
                this.Rows.Add(rowPHIEU_NHAN_PHONGRow);
                return rowPHIEU_NHAN_PHONGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_NHAN_PHONGRow FindByMaNhanPhong(string MaNhanPhong) {
                return ((PHIEU_NHAN_PHONGRow)(this.Rows.Find(new object[] {
                            MaNhanPhong})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PHIEU_NHAN_PHONGDataTable cln = ((PHIEU_NHAN_PHONGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PHIEU_NHAN_PHONGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaNhanPhong = base.Columns["MaNhanPhong"];
                this.columnMaPhieuThue = base.Columns["MaPhieuThue"];
                this.columnMaKhachHang = base.Columns["MaKhachHang"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaNhanPhong = new System.Data.DataColumn("MaNhanPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaNhanPhong);
                this.columnMaPhieuThue = new System.Data.DataColumn("MaPhieuThue", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaPhieuThue);
                this.columnMaKhachHang = new System.Data.DataColumn("MaKhachHang", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaKhachHang);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaNhanPhong}, true));
                this.columnMaNhanPhong.AllowDBNull = false;
                this.columnMaNhanPhong.Unique = true;
                this.columnMaNhanPhong.MaxLength = 10;
                this.columnMaPhieuThue.AllowDBNull = false;
                this.columnMaPhieuThue.MaxLength = 10;
                this.columnMaKhachHang.AllowDBNull = false;
                this.columnMaKhachHang.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_NHAN_PHONGRow NewPHIEU_NHAN_PHONGRow() {
                return ((PHIEU_NHAN_PHONGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PHIEU_NHAN_PHONGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PHIEU_NHAN_PHONGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PHIEU_NHAN_PHONGRowChanged != null)) {
                    this.PHIEU_NHAN_PHONGRowChanged(this, new PHIEU_NHAN_PHONGRowChangeEvent(((PHIEU_NHAN_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PHIEU_NHAN_PHONGRowChanging != null)) {
                    this.PHIEU_NHAN_PHONGRowChanging(this, new PHIEU_NHAN_PHONGRowChangeEvent(((PHIEU_NHAN_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PHIEU_NHAN_PHONGRowDeleted != null)) {
                    this.PHIEU_NHAN_PHONGRowDeleted(this, new PHIEU_NHAN_PHONGRowChangeEvent(((PHIEU_NHAN_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PHIEU_NHAN_PHONGRowDeleting != null)) {
                    this.PHIEU_NHAN_PHONGRowDeleting(this, new PHIEU_NHAN_PHONGRowChangeEvent(((PHIEU_NHAN_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePHIEU_NHAN_PHONGRow(PHIEU_NHAN_PHONGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PHIEU_NHAN_PHONGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PHIEU_THUE_PHONGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaPhieuThue;
            
            private System.Data.DataColumn columnMaKhachHang;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGDataTable() {
                this.TableName = "PHIEU_THUE_PHONG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHIEU_THUE_PHONGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PHIEU_THUE_PHONGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaPhieuThueColumn {
                get {
                    return this.columnMaPhieuThue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaKhachHangColumn {
                get {
                    return this.columnMaKhachHang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow this[int index] {
                get {
                    return ((PHIEU_THUE_PHONGRow)(this.Rows[index]));
                }
            }
            
            public event PHIEU_THUE_PHONGRowChangeEventHandler PHIEU_THUE_PHONGRowChanging;
            
            public event PHIEU_THUE_PHONGRowChangeEventHandler PHIEU_THUE_PHONGRowChanged;
            
            public event PHIEU_THUE_PHONGRowChangeEventHandler PHIEU_THUE_PHONGRowDeleting;
            
            public event PHIEU_THUE_PHONGRowChangeEventHandler PHIEU_THUE_PHONGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPHIEU_THUE_PHONGRow(PHIEU_THUE_PHONGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow AddPHIEU_THUE_PHONGRow(string MaPhieuThue, KHACH_HANGRow parentKHACH_HANGRowByFK_PHIEU_THUE_PHONG_KHACH_HANG) {
                PHIEU_THUE_PHONGRow rowPHIEU_THUE_PHONGRow = ((PHIEU_THUE_PHONGRow)(this.NewRow()));
                rowPHIEU_THUE_PHONGRow.ItemArray = new object[] {
                        MaPhieuThue,
                        parentKHACH_HANGRowByFK_PHIEU_THUE_PHONG_KHACH_HANG[0]};
                this.Rows.Add(rowPHIEU_THUE_PHONGRow);
                return rowPHIEU_THUE_PHONGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow FindByMaPhieuThue(string MaPhieuThue) {
                return ((PHIEU_THUE_PHONGRow)(this.Rows.Find(new object[] {
                            MaPhieuThue})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PHIEU_THUE_PHONGDataTable cln = ((PHIEU_THUE_PHONGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PHIEU_THUE_PHONGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaPhieuThue = base.Columns["MaPhieuThue"];
                this.columnMaKhachHang = base.Columns["MaKhachHang"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaPhieuThue = new System.Data.DataColumn("MaPhieuThue", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaPhieuThue);
                this.columnMaKhachHang = new System.Data.DataColumn("MaKhachHang", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaKhachHang);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaPhieuThue}, true));
                this.columnMaPhieuThue.AllowDBNull = false;
                this.columnMaPhieuThue.Unique = true;
                this.columnMaPhieuThue.MaxLength = 10;
                this.columnMaKhachHang.AllowDBNull = false;
                this.columnMaKhachHang.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow NewPHIEU_THUE_PHONGRow() {
                return ((PHIEU_THUE_PHONGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PHIEU_THUE_PHONGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PHIEU_THUE_PHONGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PHIEU_THUE_PHONGRowChanged != null)) {
                    this.PHIEU_THUE_PHONGRowChanged(this, new PHIEU_THUE_PHONGRowChangeEvent(((PHIEU_THUE_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PHIEU_THUE_PHONGRowChanging != null)) {
                    this.PHIEU_THUE_PHONGRowChanging(this, new PHIEU_THUE_PHONGRowChangeEvent(((PHIEU_THUE_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PHIEU_THUE_PHONGRowDeleted != null)) {
                    this.PHIEU_THUE_PHONGRowDeleted(this, new PHIEU_THUE_PHONGRowChangeEvent(((PHIEU_THUE_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PHIEU_THUE_PHONGRowDeleting != null)) {
                    this.PHIEU_THUE_PHONGRowDeleting(this, new PHIEU_THUE_PHONGRowChangeEvent(((PHIEU_THUE_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePHIEU_THUE_PHONGRow(PHIEU_THUE_PHONGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PHIEU_THUE_PHONGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PHONGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaPhong;
            
            private System.Data.DataColumn columnMaLoaiPhong;
            
            private System.Data.DataColumn columnMaLoaiTinhTrangPhong;
            
            private System.Data.DataColumn columnGhiChu;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGDataTable() {
                this.TableName = "PHONG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHONGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PHONGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaPhongColumn {
                get {
                    return this.columnMaPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiPhongColumn {
                get {
                    return this.columnMaLoaiPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiTinhTrangPhongColumn {
                get {
                    return this.columnMaLoaiTinhTrangPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GhiChuColumn {
                get {
                    return this.columnGhiChu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow this[int index] {
                get {
                    return ((PHONGRow)(this.Rows[index]));
                }
            }
            
            public event PHONGRowChangeEventHandler PHONGRowChanging;
            
            public event PHONGRowChangeEventHandler PHONGRowChanged;
            
            public event PHONGRowChangeEventHandler PHONGRowDeleting;
            
            public event PHONGRowChangeEventHandler PHONGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPHONGRow(PHONGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow AddPHONGRow(string MaPhong, LOAI_PHONGRow parentLOAI_PHONGRowByFK_PHONG_LOAI_PHONG, LOAI_TINH_TRANGRow parentLOAI_TINH_TRANGRowByFK_PHONG_LOAI_TINH_TRANG, string GhiChu) {
                PHONGRow rowPHONGRow = ((PHONGRow)(this.NewRow()));
                rowPHONGRow.ItemArray = new object[] {
                        MaPhong,
                        parentLOAI_PHONGRowByFK_PHONG_LOAI_PHONG[0],
                        parentLOAI_TINH_TRANGRowByFK_PHONG_LOAI_TINH_TRANG[0],
                        GhiChu};
                this.Rows.Add(rowPHONGRow);
                return rowPHONGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow FindByMaPhong(string MaPhong) {
                return ((PHONGRow)(this.Rows.Find(new object[] {
                            MaPhong})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PHONGDataTable cln = ((PHONGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PHONGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaPhong = base.Columns["MaPhong"];
                this.columnMaLoaiPhong = base.Columns["MaLoaiPhong"];
                this.columnMaLoaiTinhTrangPhong = base.Columns["MaLoaiTinhTrangPhong"];
                this.columnGhiChu = base.Columns["GhiChu"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaPhong = new System.Data.DataColumn("MaPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaPhong);
                this.columnMaLoaiPhong = new System.Data.DataColumn("MaLoaiPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiPhong);
                this.columnMaLoaiTinhTrangPhong = new System.Data.DataColumn("MaLoaiTinhTrangPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiTinhTrangPhong);
                this.columnGhiChu = new System.Data.DataColumn("GhiChu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGhiChu);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaPhong}, true));
                this.columnMaPhong.AllowDBNull = false;
                this.columnMaPhong.Unique = true;
                this.columnMaPhong.MaxLength = 10;
                this.columnMaLoaiPhong.AllowDBNull = false;
                this.columnMaLoaiPhong.MaxLength = 10;
                this.columnMaLoaiTinhTrangPhong.AllowDBNull = false;
                this.columnMaLoaiTinhTrangPhong.MaxLength = 10;
                this.columnGhiChu.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow NewPHONGRow() {
                return ((PHONGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PHONGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PHONGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PHONGRowChanged != null)) {
                    this.PHONGRowChanged(this, new PHONGRowChangeEvent(((PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PHONGRowChanging != null)) {
                    this.PHONGRowChanging(this, new PHONGRowChangeEvent(((PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PHONGRowDeleted != null)) {
                    this.PHONGRowDeleted(this, new PHONGRowChangeEvent(((PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PHONGRowDeleting != null)) {
                    this.PHONGRowDeleting(this, new PHONGRowChangeEvent(((PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePHONGRow(PHONGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PHONGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QUI_DINHDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTenQuiDinh;
            
            private System.Data.DataColumn columnMoTa;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUI_DINHDataTable() {
                this.TableName = "QUI_DINH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QUI_DINHDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected QUI_DINHDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenQuiDinhColumn {
                get {
                    return this.columnTenQuiDinh;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MoTaColumn {
                get {
                    return this.columnMoTa;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUI_DINHRow this[int index] {
                get {
                    return ((QUI_DINHRow)(this.Rows[index]));
                }
            }
            
            public event QUI_DINHRowChangeEventHandler QUI_DINHRowChanging;
            
            public event QUI_DINHRowChangeEventHandler QUI_DINHRowChanged;
            
            public event QUI_DINHRowChangeEventHandler QUI_DINHRowDeleting;
            
            public event QUI_DINHRowChangeEventHandler QUI_DINHRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddQUI_DINHRow(QUI_DINHRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUI_DINHRow AddQUI_DINHRow(string TenQuiDinh, string MoTa) {
                QUI_DINHRow rowQUI_DINHRow = ((QUI_DINHRow)(this.NewRow()));
                rowQUI_DINHRow.ItemArray = new object[] {
                        TenQuiDinh,
                        MoTa};
                this.Rows.Add(rowQUI_DINHRow);
                return rowQUI_DINHRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                QUI_DINHDataTable cln = ((QUI_DINHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new QUI_DINHDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTenQuiDinh = base.Columns["TenQuiDinh"];
                this.columnMoTa = base.Columns["MoTa"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTenQuiDinh = new System.Data.DataColumn("TenQuiDinh", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenQuiDinh);
                this.columnMoTa = new System.Data.DataColumn("MoTa", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoTa);
                this.columnTenQuiDinh.MaxLength = 50;
                this.columnMoTa.MaxLength = 2147483647;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUI_DINHRow NewQUI_DINHRow() {
                return ((QUI_DINHRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new QUI_DINHRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(QUI_DINHRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QUI_DINHRowChanged != null)) {
                    this.QUI_DINHRowChanged(this, new QUI_DINHRowChangeEvent(((QUI_DINHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QUI_DINHRowChanging != null)) {
                    this.QUI_DINHRowChanging(this, new QUI_DINHRowChangeEvent(((QUI_DINHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QUI_DINHRowDeleted != null)) {
                    this.QUI_DINHRowDeleted(this, new QUI_DINHRowChangeEvent(((QUI_DINHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QUI_DINHRowDeleting != null)) {
                    this.QUI_DINHRowDeleting(this, new QUI_DINHRowChangeEvent(((QUI_DINHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveQUI_DINHRow(QUI_DINHRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QUI_DINHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class THAM_SODataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPhieuDangKy;
            
            private System.Data.DataColumn columnPhieuNhan;
            
            private System.Data.DataColumn columnHoaDon;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THAM_SODataTable() {
                this.TableName = "THAM_SO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal THAM_SODataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected THAM_SODataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PhieuDangKyColumn {
                get {
                    return this.columnPhieuDangKy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PhieuNhanColumn {
                get {
                    return this.columnPhieuNhan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HoaDonColumn {
                get {
                    return this.columnHoaDon;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THAM_SORow this[int index] {
                get {
                    return ((THAM_SORow)(this.Rows[index]));
                }
            }
            
            public event THAM_SORowChangeEventHandler THAM_SORowChanging;
            
            public event THAM_SORowChangeEventHandler THAM_SORowChanged;
            
            public event THAM_SORowChangeEventHandler THAM_SORowDeleting;
            
            public event THAM_SORowChangeEventHandler THAM_SORowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTHAM_SORow(THAM_SORow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THAM_SORow AddTHAM_SORow(int PhieuDangKy, int PhieuNhan, int HoaDon) {
                THAM_SORow rowTHAM_SORow = ((THAM_SORow)(this.NewRow()));
                rowTHAM_SORow.ItemArray = new object[] {
                        PhieuDangKy,
                        PhieuNhan,
                        HoaDon};
                this.Rows.Add(rowTHAM_SORow);
                return rowTHAM_SORow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                THAM_SODataTable cln = ((THAM_SODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new THAM_SODataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPhieuDangKy = base.Columns["PhieuDangKy"];
                this.columnPhieuNhan = base.Columns["PhieuNhan"];
                this.columnHoaDon = base.Columns["HoaDon"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPhieuDangKy = new System.Data.DataColumn("PhieuDangKy", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhieuDangKy);
                this.columnPhieuNhan = new System.Data.DataColumn("PhieuNhan", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhieuNhan);
                this.columnHoaDon = new System.Data.DataColumn("HoaDon", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoaDon);
                this.columnPhieuDangKy.AllowDBNull = false;
                this.columnPhieuNhan.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THAM_SORow NewTHAM_SORow() {
                return ((THAM_SORow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new THAM_SORow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(THAM_SORow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.THAM_SORowChanged != null)) {
                    this.THAM_SORowChanged(this, new THAM_SORowChangeEvent(((THAM_SORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.THAM_SORowChanging != null)) {
                    this.THAM_SORowChanging(this, new THAM_SORowChangeEvent(((THAM_SORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.THAM_SORowDeleted != null)) {
                    this.THAM_SORowDeleted(this, new THAM_SORowChangeEvent(((THAM_SORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.THAM_SORowDeleting != null)) {
                    this.THAM_SORowDeleting(this, new THAM_SORowChangeEvent(((THAM_SORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTHAM_SORow(THAM_SORow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "THAM_SODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class THIET_BIDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaThietBi;
            
            private System.Data.DataColumn columnTenThietBi;
            
            private System.Data.DataColumn columnMaLoaiPhong;
            
            private System.Data.DataColumn columnSoLuong;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THIET_BIDataTable() {
                this.TableName = "THIET_BI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal THIET_BIDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected THIET_BIDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaThietBiColumn {
                get {
                    return this.columnMaThietBi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenThietBiColumn {
                get {
                    return this.columnTenThietBi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiPhongColumn {
                get {
                    return this.columnMaLoaiPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoLuongColumn {
                get {
                    return this.columnSoLuong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THIET_BIRow this[int index] {
                get {
                    return ((THIET_BIRow)(this.Rows[index]));
                }
            }
            
            public event THIET_BIRowChangeEventHandler THIET_BIRowChanging;
            
            public event THIET_BIRowChangeEventHandler THIET_BIRowChanged;
            
            public event THIET_BIRowChangeEventHandler THIET_BIRowDeleting;
            
            public event THIET_BIRowChangeEventHandler THIET_BIRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTHIET_BIRow(THIET_BIRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THIET_BIRow AddTHIET_BIRow(string MaThietBi, string TenThietBi, LOAI_PHONGRow parentLOAI_PHONGRowByFK_THIET_BI_LOAI_PHONG, int SoLuong) {
                THIET_BIRow rowTHIET_BIRow = ((THIET_BIRow)(this.NewRow()));
                rowTHIET_BIRow.ItemArray = new object[] {
                        MaThietBi,
                        TenThietBi,
                        parentLOAI_PHONGRowByFK_THIET_BI_LOAI_PHONG[0],
                        SoLuong};
                this.Rows.Add(rowTHIET_BIRow);
                return rowTHIET_BIRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THIET_BIRow FindByMaThietBi(string MaThietBi) {
                return ((THIET_BIRow)(this.Rows.Find(new object[] {
                            MaThietBi})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                THIET_BIDataTable cln = ((THIET_BIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new THIET_BIDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaThietBi = base.Columns["MaThietBi"];
                this.columnTenThietBi = base.Columns["TenThietBi"];
                this.columnMaLoaiPhong = base.Columns["MaLoaiPhong"];
                this.columnSoLuong = base.Columns["SoLuong"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaThietBi = new System.Data.DataColumn("MaThietBi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaThietBi);
                this.columnTenThietBi = new System.Data.DataColumn("TenThietBi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenThietBi);
                this.columnMaLoaiPhong = new System.Data.DataColumn("MaLoaiPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiPhong);
                this.columnSoLuong = new System.Data.DataColumn("SoLuong", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoLuong);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaThietBi}, true));
                this.columnMaThietBi.AllowDBNull = false;
                this.columnMaThietBi.Unique = true;
                this.columnMaThietBi.MaxLength = 10;
                this.columnTenThietBi.MaxLength = 50;
                this.columnMaLoaiPhong.AllowDBNull = false;
                this.columnMaLoaiPhong.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THIET_BIRow NewTHIET_BIRow() {
                return ((THIET_BIRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new THIET_BIRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(THIET_BIRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.THIET_BIRowChanged != null)) {
                    this.THIET_BIRowChanged(this, new THIET_BIRowChangeEvent(((THIET_BIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.THIET_BIRowChanging != null)) {
                    this.THIET_BIRowChanging(this, new THIET_BIRowChangeEvent(((THIET_BIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.THIET_BIRowDeleted != null)) {
                    this.THIET_BIRowDeleted(this, new THIET_BIRowChangeEvent(((THIET_BIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.THIET_BIRowDeleting != null)) {
                    this.THIET_BIRowDeleting(this, new THIET_BIRowChangeEvent(((THIET_BIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTHIET_BIRow(THIET_BIRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QUANLYKHACHSANKIMANHDataSet ds = new QUANLYKHACHSANKIMANHDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "THIET_BIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BAO_CAO_DOANH_THURow : System.Data.DataRow {
            
            private BAO_CAO_DOANH_THUDataTable tableBAO_CAO_DOANH_THU;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BAO_CAO_DOANH_THURow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBAO_CAO_DOANH_THU = ((BAO_CAO_DOANH_THUDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaDoanhThu {
                get {
                    return ((string)(this[this.tableBAO_CAO_DOANH_THU.MaDoanhThuColumn]));
                }
                set {
                    this[this.tableBAO_CAO_DOANH_THU.MaDoanhThuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Thang {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableBAO_CAO_DOANH_THU.ThangColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Thang\' in table \'BAO_CAO_DOANH_THU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBAO_CAO_DOANH_THU.ThangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TongDoanhThu {
                get {
                    try {
                        return ((double)(this[this.tableBAO_CAO_DOANH_THU.TongDoanhThuColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TongDoanhThu\' in table \'BAO_CAO_DOANH_THU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBAO_CAO_DOANH_THU.TongDoanhThuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThangNull() {
                return this.IsNull(this.tableBAO_CAO_DOANH_THU.ThangColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThangNull() {
                this[this.tableBAO_CAO_DOANH_THU.ThangColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTongDoanhThuNull() {
                return this.IsNull(this.tableBAO_CAO_DOANH_THU.TongDoanhThuColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTongDoanhThuNull() {
                this[this.tableBAO_CAO_DOANH_THU.TongDoanhThuColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CHI_TIET_BAO_CAO_DOANH_THURow : System.Data.DataRow {
            
            private CHI_TIET_BAO_CAO_DOANH_THUDataTable tableCHI_TIET_BAO_CAO_DOANH_THU;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHI_TIET_BAO_CAO_DOANH_THURow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHI_TIET_BAO_CAO_DOANH_THU = ((CHI_TIET_BAO_CAO_DOANH_THUDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaChiTietDoanhThu {
                get {
                    return ((string)(this[this.tableCHI_TIET_BAO_CAO_DOANH_THU.MaChiTietDoanhThuColumn]));
                }
                set {
                    this[this.tableCHI_TIET_BAO_CAO_DOANH_THU.MaChiTietDoanhThuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaDoanhThu {
                get {
                    return ((string)(this[this.tableCHI_TIET_BAO_CAO_DOANH_THU.MaDoanhThuColumn]));
                }
                set {
                    this[this.tableCHI_TIET_BAO_CAO_DOANH_THU.MaDoanhThuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiPhong {
                get {
                    return ((string)(this[this.tableCHI_TIET_BAO_CAO_DOANH_THU.MaLoaiPhongColumn]));
                }
                set {
                    this[this.tableCHI_TIET_BAO_CAO_DOANH_THU.MaLoaiPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DoanhThu {
                get {
                    try {
                        return ((double)(this[this.tableCHI_TIET_BAO_CAO_DOANH_THU.DoanhThuColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DoanhThu\' in table \'CHI_TIET_BAO_CAO_DOANH_THU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_BAO_CAO_DOANH_THU.DoanhThuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TyLe {
                get {
                    try {
                        return ((double)(this[this.tableCHI_TIET_BAO_CAO_DOANH_THU.TyLeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TyLe\' in table \'CHI_TIET_BAO_CAO_DOANH_THU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_BAO_CAO_DOANH_THU.TyLeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoanhThuNull() {
                return this.IsNull(this.tableCHI_TIET_BAO_CAO_DOANH_THU.DoanhThuColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoanhThuNull() {
                this[this.tableCHI_TIET_BAO_CAO_DOANH_THU.DoanhThuColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTyLeNull() {
                return this.IsNull(this.tableCHI_TIET_BAO_CAO_DOANH_THU.TyLeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTyLeNull() {
                this[this.tableCHI_TIET_BAO_CAO_DOANH_THU.TyLeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CHI_TIET_HOA_DONRow : System.Data.DataRow {
            
            private CHI_TIET_HOA_DONDataTable tableCHI_TIET_HOA_DON;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHI_TIET_HOA_DONRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHI_TIET_HOA_DON = ((CHI_TIET_HOA_DONDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaHoaDon {
                get {
                    return ((string)(this[this.tableCHI_TIET_HOA_DON.MaHoaDonColumn]));
                }
                set {
                    this[this.tableCHI_TIET_HOA_DON.MaHoaDonColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaPhong {
                get {
                    return ((string)(this[this.tableCHI_TIET_HOA_DON.MaPhongColumn]));
                }
                set {
                    this[this.tableCHI_TIET_HOA_DON.MaPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaSuDungDichVu {
                get {
                    return ((string)(this[this.tableCHI_TIET_HOA_DON.MaSuDungDichVuColumn]));
                }
                set {
                    this[this.tableCHI_TIET_HOA_DON.MaSuDungDichVuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaChinhSach {
                get {
                    return ((string)(this[this.tableCHI_TIET_HOA_DON.MaChinhSachColumn]));
                }
                set {
                    this[this.tableCHI_TIET_HOA_DON.MaChinhSachColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TienPhong {
                get {
                    try {
                        return ((double)(this[this.tableCHI_TIET_HOA_DON.TienPhongColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TienPhong\' in table \'CHI_TIET_HOA_DON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_HOA_DON.TienPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TienDichVu {
                get {
                    try {
                        return ((double)(this[this.tableCHI_TIET_HOA_DON.TienDichVuColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TienDichVu\' in table \'CHI_TIET_HOA_DON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_HOA_DON.TienDichVuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GiamGiaKH {
                get {
                    try {
                        return ((double)(this[this.tableCHI_TIET_HOA_DON.GiamGiaKHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GiamGiaKH\' in table \'CHI_TIET_HOA_DON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_HOA_DON.GiamGiaKHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HinhThucThanhToan {
                get {
                    try {
                        return ((string)(this[this.tableCHI_TIET_HOA_DON.HinhThucThanhToanColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HinhThucThanhToan\' in table \'CHI_TIET_HOA_DON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_HOA_DON.HinhThucThanhToanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SoDem {
                get {
                    try {
                        return ((int)(this[this.tableCHI_TIET_HOA_DON.SoDemColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SoDem\' in table \'CHI_TIET_HOA_DON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_HOA_DON.SoDemColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHINH_SACH_TRA_PHONGRow CHINH_SACH_TRA_PHONGRow {
                get {
                    return ((CHINH_SACH_TRA_PHONGRow)(this.GetParentRow(this.Table.ParentRelations["FK_CHI_TIET_HOA_DON_CHINH_SACH_TRA_PHONG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CHI_TIET_HOA_DON_CHINH_SACH_TRA_PHONG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANH_SACH_SU_DUNG_DICH_VURow DANH_SACH_SU_DUNG_DICH_VURow {
                get {
                    return ((DANH_SACH_SU_DUNG_DICH_VURow)(this.GetParentRow(this.Table.ParentRelations["FK_CHI_TIET_HOA_DON_DANH_SACH_SU_DUNG_DICH_VU1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CHI_TIET_HOA_DON_DANH_SACH_SU_DUNG_DICH_VU1"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow HOA_DONRow {
                get {
                    return ((HOA_DONRow)(this.GetParentRow(this.Table.ParentRelations["FK_CHI_TIET_HOA_DON_HOA_DON"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CHI_TIET_HOA_DON_HOA_DON"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow PHONGRow {
                get {
                    return ((PHONGRow)(this.GetParentRow(this.Table.ParentRelations["FK_CHI_TIET_HOA_DON_PHONG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CHI_TIET_HOA_DON_PHONG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTienPhongNull() {
                return this.IsNull(this.tableCHI_TIET_HOA_DON.TienPhongColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTienPhongNull() {
                this[this.tableCHI_TIET_HOA_DON.TienPhongColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTienDichVuNull() {
                return this.IsNull(this.tableCHI_TIET_HOA_DON.TienDichVuColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTienDichVuNull() {
                this[this.tableCHI_TIET_HOA_DON.TienDichVuColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGiamGiaKHNull() {
                return this.IsNull(this.tableCHI_TIET_HOA_DON.GiamGiaKHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGiamGiaKHNull() {
                this[this.tableCHI_TIET_HOA_DON.GiamGiaKHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHinhThucThanhToanNull() {
                return this.IsNull(this.tableCHI_TIET_HOA_DON.HinhThucThanhToanColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHinhThucThanhToanNull() {
                this[this.tableCHI_TIET_HOA_DON.HinhThucThanhToanColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoDemNull() {
                return this.IsNull(this.tableCHI_TIET_HOA_DON.SoDemColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoDemNull() {
                this[this.tableCHI_TIET_HOA_DON.SoDemColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CHI_TIET_MAT_DO_SU_DUNG_PHONGRow : System.Data.DataRow {
            
            private CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable tableCHI_TIET_MAT_DO_SU_DUNG_PHONG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHI_TIET_MAT_DO_SU_DUNG_PHONGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG = ((CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaChiTietMatDo {
                get {
                    return ((string)(this[this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.MaChiTietMatDoColumn]));
                }
                set {
                    this[this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.MaChiTietMatDoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaMatDo {
                get {
                    return ((string)(this[this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.MaMatDoColumn]));
                }
                set {
                    this[this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.MaMatDoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaPhong {
                get {
                    return ((string)(this[this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.MaPhongColumn]));
                }
                set {
                    this[this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.MaPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SoNgayThue {
                get {
                    try {
                        return ((int)(this[this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.SoNgayThueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SoNgayThue\' in table \'CHI_TIET_MAT_DO_SU_DUNG_PHONG\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.SoNgayThueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TyLe {
                get {
                    try {
                        return ((double)(this[this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.TyLeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TyLe\' in table \'CHI_TIET_MAT_DO_SU_DUNG_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.TyLeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoNgayThueNull() {
                return this.IsNull(this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.SoNgayThueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoNgayThueNull() {
                this[this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.SoNgayThueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTyLeNull() {
                return this.IsNull(this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.TyLeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTyLeNull() {
                this[this.tableCHI_TIET_MAT_DO_SU_DUNG_PHONG.TyLeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CHI_TIET_PHIEU_NHAN_PHONGRow : System.Data.DataRow {
            
            private CHI_TIET_PHIEU_NHAN_PHONGDataTable tableCHI_TIET_PHIEU_NHAN_PHONG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHI_TIET_PHIEU_NHAN_PHONGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHI_TIET_PHIEU_NHAN_PHONG = ((CHI_TIET_PHIEU_NHAN_PHONGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long STT {
                get {
                    return ((long)(this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.STTColumn]));
                }
                set {
                    this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.STTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaNhanPhong {
                get {
                    return ((string)(this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.MaNhanPhongColumn]));
                }
                set {
                    this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.MaNhanPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaPhong {
                get {
                    return ((string)(this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.MaPhongColumn]));
                }
                set {
                    this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.MaPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HoTenKhachHang {
                get {
                    try {
                        return ((string)(this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.HoTenKhachHangColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HoTenKhachHang\' in table \'CHI_TIET_PHIEU_NHAN_PHONG\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.HoTenKhachHangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMND {
                get {
                    try {
                        return ((string)(this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.CMNDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CMND\' in table \'CHI_TIET_PHIEU_NHAN_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.CMNDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayNhan {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.NgayNhanColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgayNhan\' in table \'CHI_TIET_PHIEU_NHAN_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.NgayNhanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayTraDuKien {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.NgayTraDuKienColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgayTraDuKien\' in table \'CHI_TIET_PHIEU_NHAN_PHONG\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.NgayTraDuKienColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayTraThucTe {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.NgayTraThucTeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgayTraThucTe\' in table \'CHI_TIET_PHIEU_NHAN_PHONG\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.NgayTraThucTeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_NHAN_PHONGRow PHIEU_NHAN_PHONGRow {
                get {
                    return ((PHIEU_NHAN_PHONGRow)(this.GetParentRow(this.Table.ParentRelations["FK_CHI_TIET_PHIEU_NHAN_PHONG_PHIEU_NHAN_PHONG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CHI_TIET_PHIEU_NHAN_PHONG_PHIEU_NHAN_PHONG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow PHONGRow {
                get {
                    return ((PHONGRow)(this.GetParentRow(this.Table.ParentRelations["FK_CHI_TIET_PHIEU_NHAN_PHONG_PHONG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CHI_TIET_PHIEU_NHAN_PHONG_PHONG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHoTenKhachHangNull() {
                return this.IsNull(this.tableCHI_TIET_PHIEU_NHAN_PHONG.HoTenKhachHangColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHoTenKhachHangNull() {
                this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.HoTenKhachHangColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMNDNull() {
                return this.IsNull(this.tableCHI_TIET_PHIEU_NHAN_PHONG.CMNDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMNDNull() {
                this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.CMNDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayNhanNull() {
                return this.IsNull(this.tableCHI_TIET_PHIEU_NHAN_PHONG.NgayNhanColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayNhanNull() {
                this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.NgayNhanColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayTraDuKienNull() {
                return this.IsNull(this.tableCHI_TIET_PHIEU_NHAN_PHONG.NgayTraDuKienColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayTraDuKienNull() {
                this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.NgayTraDuKienColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayTraThucTeNull() {
                return this.IsNull(this.tableCHI_TIET_PHIEU_NHAN_PHONG.NgayTraThucTeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayTraThucTeNull() {
                this[this.tableCHI_TIET_PHIEU_NHAN_PHONG.NgayTraThucTeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CHI_TIET_PHIEU_THUE_PHONGRow : System.Data.DataRow {
            
            private CHI_TIET_PHIEU_THUE_PHONGDataTable tableCHI_TIET_PHIEU_THUE_PHONG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHI_TIET_PHIEU_THUE_PHONGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHI_TIET_PHIEU_THUE_PHONG = ((CHI_TIET_PHIEU_THUE_PHONGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long STT {
                get {
                    return ((long)(this[this.tableCHI_TIET_PHIEU_THUE_PHONG.STTColumn]));
                }
                set {
                    this[this.tableCHI_TIET_PHIEU_THUE_PHONG.STTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaPhieuThue {
                get {
                    return ((string)(this[this.tableCHI_TIET_PHIEU_THUE_PHONG.MaPhieuThueColumn]));
                }
                set {
                    this[this.tableCHI_TIET_PHIEU_THUE_PHONG.MaPhieuThueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaPhong {
                get {
                    return ((string)(this[this.tableCHI_TIET_PHIEU_THUE_PHONG.MaPhongColumn]));
                }
                set {
                    this[this.tableCHI_TIET_PHIEU_THUE_PHONG.MaPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayDangKy {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCHI_TIET_PHIEU_THUE_PHONG.NgayDangKyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgayDangKy\' in table \'CHI_TIET_PHIEU_THUE_PHONG\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_PHIEU_THUE_PHONG.NgayDangKyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayNhan {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCHI_TIET_PHIEU_THUE_PHONG.NgayNhanColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgayNhan\' in table \'CHI_TIET_PHIEU_THUE_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_PHIEU_THUE_PHONG.NgayNhanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow PHIEU_THUE_PHONGRow {
                get {
                    return ((PHIEU_THUE_PHONGRow)(this.GetParentRow(this.Table.ParentRelations["FK_CHI_TIET_PHIEU_THUE_PHONG_PHIEU_THUE_PHONG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CHI_TIET_PHIEU_THUE_PHONG_PHIEU_THUE_PHONG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow PHONGRow {
                get {
                    return ((PHONGRow)(this.GetParentRow(this.Table.ParentRelations["FK_CHI_TIET_PHIEU_THUE_PHONG_PHONG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CHI_TIET_PHIEU_THUE_PHONG_PHONG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayDangKyNull() {
                return this.IsNull(this.tableCHI_TIET_PHIEU_THUE_PHONG.NgayDangKyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayDangKyNull() {
                this[this.tableCHI_TIET_PHIEU_THUE_PHONG.NgayDangKyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayNhanNull() {
                return this.IsNull(this.tableCHI_TIET_PHIEU_THUE_PHONG.NgayNhanColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayNhanNull() {
                this[this.tableCHI_TIET_PHIEU_THUE_PHONG.NgayNhanColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CHINH_SACH_TRA_PHONGRow : System.Data.DataRow {
            
            private CHINH_SACH_TRA_PHONGDataTable tableCHINH_SACH_TRA_PHONG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHINH_SACH_TRA_PHONGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHINH_SACH_TRA_PHONG = ((CHINH_SACH_TRA_PHONGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaChinhSach {
                get {
                    return ((string)(this[this.tableCHINH_SACH_TRA_PHONG.MaChinhSachColumn]));
                }
                set {
                    this[this.tableCHINH_SACH_TRA_PHONG.MaChinhSachColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThoiGianQuiDinh {
                get {
                    try {
                        return ((string)(this[this.tableCHINH_SACH_TRA_PHONG.ThoiGianQuiDinhColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ThoiGianQuiDinh\' in table \'CHINH_SACH_TRA_PHONG\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCHINH_SACH_TRA_PHONG.ThoiGianQuiDinhColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PhuThu {
                get {
                    try {
                        return ((double)(this[this.tableCHINH_SACH_TRA_PHONG.PhuThuColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PhuThu\' in table \'CHINH_SACH_TRA_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHINH_SACH_TRA_PHONG.PhuThuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThoiGianQuiDinhNull() {
                return this.IsNull(this.tableCHINH_SACH_TRA_PHONG.ThoiGianQuiDinhColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThoiGianQuiDinhNull() {
                this[this.tableCHINH_SACH_TRA_PHONG.ThoiGianQuiDinhColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhuThuNull() {
                return this.IsNull(this.tableCHINH_SACH_TRA_PHONG.PhuThuColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhuThuNull() {
                this[this.tableCHINH_SACH_TRA_PHONG.PhuThuColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_HOA_DONRow[] GetCHI_TIET_HOA_DONRows() {
                return ((CHI_TIET_HOA_DONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CHI_TIET_HOA_DON_CHINH_SACH_TRA_PHONG"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DANH_SACH_SU_DUNG_DICH_VURow : System.Data.DataRow {
            
            private DANH_SACH_SU_DUNG_DICH_VUDataTable tableDANH_SACH_SU_DUNG_DICH_VU;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DANH_SACH_SU_DUNG_DICH_VURow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDANH_SACH_SU_DUNG_DICH_VU = ((DANH_SACH_SU_DUNG_DICH_VUDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaSuDungDvu {
                get {
                    return ((string)(this[this.tableDANH_SACH_SU_DUNG_DICH_VU.MaSuDungDvuColumn]));
                }
                set {
                    this[this.tableDANH_SACH_SU_DUNG_DICH_VU.MaSuDungDvuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaDichVu {
                get {
                    return ((string)(this[this.tableDANH_SACH_SU_DUNG_DICH_VU.MaDichVuColumn]));
                }
                set {
                    this[this.tableDANH_SACH_SU_DUNG_DICH_VU.MaDichVuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaNhanPhong {
                get {
                    return ((string)(this[this.tableDANH_SACH_SU_DUNG_DICH_VU.MaNhanPhongColumn]));
                }
                set {
                    this[this.tableDANH_SACH_SU_DUNG_DICH_VU.MaNhanPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SoLuong {
                get {
                    try {
                        return ((int)(this[this.tableDANH_SACH_SU_DUNG_DICH_VU.SoLuongColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SoLuong\' in table \'DANH_SACH_SU_DUNG_DICH_VU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDANH_SACH_SU_DUNG_DICH_VU.SoLuongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICH_VURow DICH_VURow {
                get {
                    return ((DICH_VURow)(this.GetParentRow(this.Table.ParentRelations["FK_DANH_SACH_SU_DUNG_DICH_VU_DICH_VU"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DANH_SACH_SU_DUNG_DICH_VU_DICH_VU"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_NHAN_PHONGRow PHIEU_NHAN_PHONGRow {
                get {
                    return ((PHIEU_NHAN_PHONGRow)(this.GetParentRow(this.Table.ParentRelations["FK_DANH_SACH_SU_DUNG_DICH_VU_PHIEU_NHAN_PHONG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DANH_SACH_SU_DUNG_DICH_VU_PHIEU_NHAN_PHONG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoLuongNull() {
                return this.IsNull(this.tableDANH_SACH_SU_DUNG_DICH_VU.SoLuongColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoLuongNull() {
                this[this.tableDANH_SACH_SU_DUNG_DICH_VU.SoLuongColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_HOA_DONRow[] GetCHI_TIET_HOA_DONRows() {
                return ((CHI_TIET_HOA_DONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CHI_TIET_HOA_DON_DANH_SACH_SU_DUNG_DICH_VU1"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DICH_VURow : System.Data.DataRow {
            
            private DICH_VUDataTable tableDICH_VU;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DICH_VURow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDICH_VU = ((DICH_VUDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaDichVu {
                get {
                    return ((string)(this[this.tableDICH_VU.MaDichVuColumn]));
                }
                set {
                    this[this.tableDICH_VU.MaDichVuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiDichVu {
                get {
                    return ((string)(this[this.tableDICH_VU.MaLoaiDichVuColumn]));
                }
                set {
                    this[this.tableDICH_VU.MaLoaiDichVuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaDonVi {
                get {
                    return ((string)(this[this.tableDICH_VU.MaDonViColumn]));
                }
                set {
                    this[this.tableDICH_VU.MaDonViColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DonGia {
                get {
                    try {
                        return ((double)(this[this.tableDICH_VU.DonGiaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DonGia\' in table \'DICH_VU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDICH_VU.DonGiaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DON_VIRow DON_VIRow {
                get {
                    return ((DON_VIRow)(this.GetParentRow(this.Table.ParentRelations["FK_DICH_VU_DON_VI"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DICH_VU_DON_VI"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DICH_VURow LOAI_DICH_VURow {
                get {
                    return ((LOAI_DICH_VURow)(this.GetParentRow(this.Table.ParentRelations["FK_DICH_VU_LOAI_DICH_VU"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DICH_VU_LOAI_DICH_VU"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDonGiaNull() {
                return this.IsNull(this.tableDICH_VU.DonGiaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDonGiaNull() {
                this[this.tableDICH_VU.DonGiaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANH_SACH_SU_DUNG_DICH_VURow[] GetDANH_SACH_SU_DUNG_DICH_VURows() {
                return ((DANH_SACH_SU_DUNG_DICH_VURow[])(base.GetChildRows(this.Table.ChildRelations["FK_DANH_SACH_SU_DUNG_DICH_VU_DICH_VU"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DON_VIRow : System.Data.DataRow {
            
            private DON_VIDataTable tableDON_VI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DON_VIRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDON_VI = ((DON_VIDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaDonVi {
                get {
                    return ((string)(this[this.tableDON_VI.MaDonViColumn]));
                }
                set {
                    this[this.tableDON_VI.MaDonViColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenDonVi {
                get {
                    try {
                        return ((string)(this[this.tableDON_VI.TenDonViColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TenDonVi\' in table \'DON_VI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDON_VI.TenDonViColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenDonViNull() {
                return this.IsNull(this.tableDON_VI.TenDonViColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenDonViNull() {
                this[this.tableDON_VI.TenDonViColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICH_VURow[] GetDICH_VURows() {
                return ((DICH_VURow[])(base.GetChildRows(this.Table.ChildRelations["FK_DICH_VU_DON_VI"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HOA_DONRow : System.Data.DataRow {
            
            private HOA_DONDataTable tableHOA_DON;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HOA_DONRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHOA_DON = ((HOA_DONDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaHoaDon {
                get {
                    return ((string)(this[this.tableHOA_DON.MaHoaDonColumn]));
                }
                set {
                    this[this.tableHOA_DON.MaHoaDonColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NhanVienLap {
                get {
                    try {
                        return ((string)(this[this.tableHOA_DON.NhanVienLapColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NhanVienLap\' in table \'HOA_DON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHOA_DON.NhanVienLapColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaKhachHang {
                get {
                    return ((string)(this[this.tableHOA_DON.MaKhachHangColumn]));
                }
                set {
                    this[this.tableHOA_DON.MaKhachHangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaNhanPhong {
                get {
                    return ((string)(this[this.tableHOA_DON.MaNhanPhongColumn]));
                }
                set {
                    this[this.tableHOA_DON.MaNhanPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TongTien {
                get {
                    try {
                        return ((double)(this[this.tableHOA_DON.TongTienColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TongTien\' in table \'HOA_DON\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHOA_DON.TongTienColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayLap {
                get {
                    return ((System.DateTime)(this[this.tableHOA_DON.NgayLapColumn]));
                }
                set {
                    this[this.tableHOA_DON.NgayLapColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow KHACH_HANGRow {
                get {
                    return ((KHACH_HANGRow)(this.GetParentRow(this.Table.ParentRelations["FK_HOA_DON_KHACH_HANG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_HOA_DON_KHACH_HANG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_NHAN_PHONGRow PHIEU_NHAN_PHONGRow {
                get {
                    return ((PHIEU_NHAN_PHONGRow)(this.GetParentRow(this.Table.ParentRelations["FK_HOA_DON_PHIEU_NHAN_PHONG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_HOA_DON_PHIEU_NHAN_PHONG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNhanVienLapNull() {
                return this.IsNull(this.tableHOA_DON.NhanVienLapColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNhanVienLapNull() {
                this[this.tableHOA_DON.NhanVienLapColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTongTienNull() {
                return this.IsNull(this.tableHOA_DON.TongTienColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTongTienNull() {
                this[this.tableHOA_DON.TongTienColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_HOA_DONRow[] GetCHI_TIET_HOA_DONRows() {
                return ((CHI_TIET_HOA_DONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CHI_TIET_HOA_DON_HOA_DON"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KHACH_HANGRow : System.Data.DataRow {
            
            private KHACH_HANGDataTable tableKHACH_HANG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KHACH_HANGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKHACH_HANG = ((KHACH_HANGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaKhachHang {
                get {
                    return ((string)(this[this.tableKHACH_HANG.MaKhachHangColumn]));
                }
                set {
                    this[this.tableKHACH_HANG.MaKhachHangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenKhachHang {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_HANG.TenKhachHangColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TenKhachHang\' in table \'KHACH_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_HANG.TenKhachHangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMND {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_HANG.CMNDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CMND\' in table \'KHACH_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_HANG.CMNDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GioiTinh {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_HANG.GioiTinhColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GioiTinh\' in table \'KHACH_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_HANG.GioiTinhColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiaChi {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_HANG.DiaChiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DiaChi\' in table \'KHACH_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_HANG.DiaChiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DienThoai {
                get {
                    try {
                        return ((int)(this[this.tableKHACH_HANG.DienThoaiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DienThoai\' in table \'KHACH_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_HANG.DienThoaiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QuocTich {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_HANG.QuocTichColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'QuocTich\' in table \'KHACH_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_HANG.QuocTichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenKhachHangNull() {
                return this.IsNull(this.tableKHACH_HANG.TenKhachHangColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenKhachHangNull() {
                this[this.tableKHACH_HANG.TenKhachHangColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMNDNull() {
                return this.IsNull(this.tableKHACH_HANG.CMNDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMNDNull() {
                this[this.tableKHACH_HANG.CMNDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGioiTinhNull() {
                return this.IsNull(this.tableKHACH_HANG.GioiTinhColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGioiTinhNull() {
                this[this.tableKHACH_HANG.GioiTinhColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiaChiNull() {
                return this.IsNull(this.tableKHACH_HANG.DiaChiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiaChiNull() {
                this[this.tableKHACH_HANG.DiaChiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDienThoaiNull() {
                return this.IsNull(this.tableKHACH_HANG.DienThoaiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDienThoaiNull() {
                this[this.tableKHACH_HANG.DienThoaiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuocTichNull() {
                return this.IsNull(this.tableKHACH_HANG.QuocTichColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuocTichNull() {
                this[this.tableKHACH_HANG.QuocTichColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow[] GetHOA_DONRows() {
                return ((HOA_DONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_HOA_DON_KHACH_HANG"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_NHAN_PHONGRow[] GetPHIEU_NHAN_PHONGRows() {
                return ((PHIEU_NHAN_PHONGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PHIEU_NHAN_PHONG_KHACH_HANG"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow[] GetPHIEU_THUE_PHONGRows() {
                return ((PHIEU_THUE_PHONGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PHIEU_THUE_PHONG_KHACH_HANG"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LOAI_DICH_VURow : System.Data.DataRow {
            
            private LOAI_DICH_VUDataTable tableLOAI_DICH_VU;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_DICH_VURow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLOAI_DICH_VU = ((LOAI_DICH_VUDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiDichVu {
                get {
                    return ((string)(this[this.tableLOAI_DICH_VU.MaLoaiDichVuColumn]));
                }
                set {
                    this[this.tableLOAI_DICH_VU.MaLoaiDichVuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenLoaiDichVu {
                get {
                    try {
                        return ((string)(this[this.tableLOAI_DICH_VU.TenLoaiDichVuColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TenLoaiDichVu\' in table \'LOAI_DICH_VU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_DICH_VU.TenLoaiDichVuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenLoaiDichVuNull() {
                return this.IsNull(this.tableLOAI_DICH_VU.TenLoaiDichVuColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenLoaiDichVuNull() {
                this[this.tableLOAI_DICH_VU.TenLoaiDichVuColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICH_VURow[] GetDICH_VURows() {
                return ((DICH_VURow[])(base.GetChildRows(this.Table.ChildRelations["FK_DICH_VU_LOAI_DICH_VU"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LOAI_NGUOI_DUNGRow : System.Data.DataRow {
            
            private LOAI_NGUOI_DUNGDataTable tableLOAI_NGUOI_DUNG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_NGUOI_DUNGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLOAI_NGUOI_DUNG = ((LOAI_NGUOI_DUNGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LoaiNguoiDung {
                get {
                    return ((string)(this[this.tableLOAI_NGUOI_DUNG.LoaiNguoiDungColumn]));
                }
                set {
                    this[this.tableLOAI_NGUOI_DUNG.LoaiNguoiDungColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOI_DUNGRow[] GetNGUOI_DUNGRows() {
                return ((NGUOI_DUNGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_NGUOI_DUNG_LOAI_NGUOI_DUNG"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LOAI_PHONGRow : System.Data.DataRow {
            
            private LOAI_PHONGDataTable tableLOAI_PHONG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_PHONGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLOAI_PHONG = ((LOAI_PHONGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiPhong {
                get {
                    return ((string)(this[this.tableLOAI_PHONG.MaLoaiPhongColumn]));
                }
                set {
                    this[this.tableLOAI_PHONG.MaLoaiPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenLoaiPhong {
                get {
                    try {
                        return ((string)(this[this.tableLOAI_PHONG.TenLoaiPhongColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TenLoaiPhong\' in table \'LOAI_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_PHONG.TenLoaiPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DonGia {
                get {
                    try {
                        return ((double)(this[this.tableLOAI_PHONG.DonGiaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DonGia\' in table \'LOAI_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_PHONG.DonGiaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SoNguoiChuan {
                get {
                    try {
                        return ((int)(this[this.tableLOAI_PHONG.SoNguoiChuanColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SoNguoiChuan\' in table \'LOAI_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_PHONG.SoNguoiChuanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SoNguoiToiDa {
                get {
                    try {
                        return ((int)(this[this.tableLOAI_PHONG.SoNguoiToiDaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SoNguoiToiDa\' in table \'LOAI_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_PHONG.SoNguoiToiDaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TyLeTang {
                get {
                    try {
                        return ((double)(this[this.tableLOAI_PHONG.TyLeTangColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TyLeTang\' in table \'LOAI_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_PHONG.TyLeTangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenLoaiPhongNull() {
                return this.IsNull(this.tableLOAI_PHONG.TenLoaiPhongColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenLoaiPhongNull() {
                this[this.tableLOAI_PHONG.TenLoaiPhongColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDonGiaNull() {
                return this.IsNull(this.tableLOAI_PHONG.DonGiaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDonGiaNull() {
                this[this.tableLOAI_PHONG.DonGiaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoNguoiChuanNull() {
                return this.IsNull(this.tableLOAI_PHONG.SoNguoiChuanColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoNguoiChuanNull() {
                this[this.tableLOAI_PHONG.SoNguoiChuanColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoNguoiToiDaNull() {
                return this.IsNull(this.tableLOAI_PHONG.SoNguoiToiDaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoNguoiToiDaNull() {
                this[this.tableLOAI_PHONG.SoNguoiToiDaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTyLeTangNull() {
                return this.IsNull(this.tableLOAI_PHONG.TyLeTangColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTyLeTangNull() {
                this[this.tableLOAI_PHONG.TyLeTangColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow[] GetPHONGRows() {
                return ((PHONGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PHONG_LOAI_PHONG"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THIET_BIRow[] GetTHIET_BIRows() {
                return ((THIET_BIRow[])(base.GetChildRows(this.Table.ChildRelations["FK_THIET_BI_LOAI_PHONG"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LOAI_TINH_TRANGRow : System.Data.DataRow {
            
            private LOAI_TINH_TRANGDataTable tableLOAI_TINH_TRANG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_TINH_TRANGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLOAI_TINH_TRANG = ((LOAI_TINH_TRANGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiTinhTrangPhong {
                get {
                    return ((string)(this[this.tableLOAI_TINH_TRANG.MaLoaiTinhTrangPhongColumn]));
                }
                set {
                    this[this.tableLOAI_TINH_TRANG.MaLoaiTinhTrangPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenLoaiTinhTrang {
                get {
                    try {
                        return ((string)(this[this.tableLOAI_TINH_TRANG.TenLoaiTinhTrangColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TenLoaiTinhTrang\' in table \'LOAI_TINH_TRANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_TINH_TRANG.TenLoaiTinhTrangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenLoaiTinhTrangNull() {
                return this.IsNull(this.tableLOAI_TINH_TRANG.TenLoaiTinhTrangColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenLoaiTinhTrangNull() {
                this[this.tableLOAI_TINH_TRANG.TenLoaiTinhTrangColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow[] GetPHONGRows() {
                return ((PHONGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PHONG_LOAI_TINH_TRANG"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MAT_DO_SU_DUNG_PHONGRow : System.Data.DataRow {
            
            private MAT_DO_SU_DUNG_PHONGDataTable tableMAT_DO_SU_DUNG_PHONG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MAT_DO_SU_DUNG_PHONGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMAT_DO_SU_DUNG_PHONG = ((MAT_DO_SU_DUNG_PHONGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaMatDo {
                get {
                    return ((string)(this[this.tableMAT_DO_SU_DUNG_PHONG.MaMatDoColumn]));
                }
                set {
                    this[this.tableMAT_DO_SU_DUNG_PHONG.MaMatDoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TongNgay {
                get {
                    try {
                        return ((int)(this[this.tableMAT_DO_SU_DUNG_PHONG.TongNgayColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TongNgay\' in table \'MAT_DO_SU_DUNG_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAT_DO_SU_DUNG_PHONG.TongNgayColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Thang {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableMAT_DO_SU_DUNG_PHONG.ThangColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Thang\' in table \'MAT_DO_SU_DUNG_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAT_DO_SU_DUNG_PHONG.ThangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTongNgayNull() {
                return this.IsNull(this.tableMAT_DO_SU_DUNG_PHONG.TongNgayColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTongNgayNull() {
                this[this.tableMAT_DO_SU_DUNG_PHONG.TongNgayColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThangNull() {
                return this.IsNull(this.tableMAT_DO_SU_DUNG_PHONG.ThangColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThangNull() {
                this[this.tableMAT_DO_SU_DUNG_PHONG.ThangColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NGUOI_DUNGRow : System.Data.DataRow {
            
            private NGUOI_DUNGDataTable tableNGUOI_DUNG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NGUOI_DUNGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNGUOI_DUNG = ((NGUOI_DUNGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenDangNhap {
                get {
                    return ((string)(this[this.tableNGUOI_DUNG.TenDangNhapColumn]));
                }
                set {
                    this[this.tableNGUOI_DUNG.TenDangNhapColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MatKhau {
                get {
                    return ((string)(this[this.tableNGUOI_DUNG.MatKhauColumn]));
                }
                set {
                    this[this.tableNGUOI_DUNG.MatKhauColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LoaiNguoiDung {
                get {
                    return ((string)(this[this.tableNGUOI_DUNG.LoaiNguoiDungColumn]));
                }
                set {
                    this[this.tableNGUOI_DUNG.LoaiNguoiDungColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NGUOI_DUNGRow LOAI_NGUOI_DUNGRow {
                get {
                    return ((LOAI_NGUOI_DUNGRow)(this.GetParentRow(this.Table.ParentRelations["FK_NGUOI_DUNG_LOAI_NGUOI_DUNG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_NGUOI_DUNG_LOAI_NGUOI_DUNG"]);
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PHIEU_NHAN_PHONGRow : System.Data.DataRow {
            
            private PHIEU_NHAN_PHONGDataTable tablePHIEU_NHAN_PHONG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHIEU_NHAN_PHONGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePHIEU_NHAN_PHONG = ((PHIEU_NHAN_PHONGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaNhanPhong {
                get {
                    return ((string)(this[this.tablePHIEU_NHAN_PHONG.MaNhanPhongColumn]));
                }
                set {
                    this[this.tablePHIEU_NHAN_PHONG.MaNhanPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaPhieuThue {
                get {
                    return ((string)(this[this.tablePHIEU_NHAN_PHONG.MaPhieuThueColumn]));
                }
                set {
                    this[this.tablePHIEU_NHAN_PHONG.MaPhieuThueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaKhachHang {
                get {
                    return ((string)(this[this.tablePHIEU_NHAN_PHONG.MaKhachHangColumn]));
                }
                set {
                    this[this.tablePHIEU_NHAN_PHONG.MaKhachHangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow KHACH_HANGRow {
                get {
                    return ((KHACH_HANGRow)(this.GetParentRow(this.Table.ParentRelations["FK_PHIEU_NHAN_PHONG_KHACH_HANG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PHIEU_NHAN_PHONG_KHACH_HANG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow PHIEU_THUE_PHONGRow {
                get {
                    return ((PHIEU_THUE_PHONGRow)(this.GetParentRow(this.Table.ParentRelations["FK_PHIEU_NHAN_PHONG_PHIEU_THUE_PHONG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PHIEU_NHAN_PHONG_PHIEU_THUE_PHONG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_NHAN_PHONGRow[] GetCHI_TIET_PHIEU_NHAN_PHONGRows() {
                return ((CHI_TIET_PHIEU_NHAN_PHONGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CHI_TIET_PHIEU_NHAN_PHONG_PHIEU_NHAN_PHONG"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANH_SACH_SU_DUNG_DICH_VURow[] GetDANH_SACH_SU_DUNG_DICH_VURows() {
                return ((DANH_SACH_SU_DUNG_DICH_VURow[])(base.GetChildRows(this.Table.ChildRelations["FK_DANH_SACH_SU_DUNG_DICH_VU_PHIEU_NHAN_PHONG"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow[] GetHOA_DONRows() {
                return ((HOA_DONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_HOA_DON_PHIEU_NHAN_PHONG"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PHIEU_THUE_PHONGRow : System.Data.DataRow {
            
            private PHIEU_THUE_PHONGDataTable tablePHIEU_THUE_PHONG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHIEU_THUE_PHONGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePHIEU_THUE_PHONG = ((PHIEU_THUE_PHONGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaPhieuThue {
                get {
                    return ((string)(this[this.tablePHIEU_THUE_PHONG.MaPhieuThueColumn]));
                }
                set {
                    this[this.tablePHIEU_THUE_PHONG.MaPhieuThueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaKhachHang {
                get {
                    return ((string)(this[this.tablePHIEU_THUE_PHONG.MaKhachHangColumn]));
                }
                set {
                    this[this.tablePHIEU_THUE_PHONG.MaKhachHangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow KHACH_HANGRow {
                get {
                    return ((KHACH_HANGRow)(this.GetParentRow(this.Table.ParentRelations["FK_PHIEU_THUE_PHONG_KHACH_HANG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PHIEU_THUE_PHONG_KHACH_HANG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_THUE_PHONGRow[] GetCHI_TIET_PHIEU_THUE_PHONGRows() {
                return ((CHI_TIET_PHIEU_THUE_PHONGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CHI_TIET_PHIEU_THUE_PHONG_PHIEU_THUE_PHONG"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_NHAN_PHONGRow[] GetPHIEU_NHAN_PHONGRows() {
                return ((PHIEU_NHAN_PHONGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PHIEU_NHAN_PHONG_PHIEU_THUE_PHONG"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PHONGRow : System.Data.DataRow {
            
            private PHONGDataTable tablePHONG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHONGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePHONG = ((PHONGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaPhong {
                get {
                    return ((string)(this[this.tablePHONG.MaPhongColumn]));
                }
                set {
                    this[this.tablePHONG.MaPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiPhong {
                get {
                    return ((string)(this[this.tablePHONG.MaLoaiPhongColumn]));
                }
                set {
                    this[this.tablePHONG.MaLoaiPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiTinhTrangPhong {
                get {
                    return ((string)(this[this.tablePHONG.MaLoaiTinhTrangPhongColumn]));
                }
                set {
                    this[this.tablePHONG.MaLoaiTinhTrangPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GhiChu {
                get {
                    try {
                        return ((string)(this[this.tablePHONG.GhiChuColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GhiChu\' in table \'PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHONG.GhiChuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRow LOAI_PHONGRow {
                get {
                    return ((LOAI_PHONGRow)(this.GetParentRow(this.Table.ParentRelations["FK_PHONG_LOAI_PHONG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PHONG_LOAI_PHONG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TINH_TRANGRow LOAI_TINH_TRANGRow {
                get {
                    return ((LOAI_TINH_TRANGRow)(this.GetParentRow(this.Table.ParentRelations["FK_PHONG_LOAI_TINH_TRANG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PHONG_LOAI_TINH_TRANG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGhiChuNull() {
                return this.IsNull(this.tablePHONG.GhiChuColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGhiChuNull() {
                this[this.tablePHONG.GhiChuColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_HOA_DONRow[] GetCHI_TIET_HOA_DONRows() {
                return ((CHI_TIET_HOA_DONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CHI_TIET_HOA_DON_PHONG"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_NHAN_PHONGRow[] GetCHI_TIET_PHIEU_NHAN_PHONGRows() {
                return ((CHI_TIET_PHIEU_NHAN_PHONGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CHI_TIET_PHIEU_NHAN_PHONG_PHONG"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_THUE_PHONGRow[] GetCHI_TIET_PHIEU_THUE_PHONGRows() {
                return ((CHI_TIET_PHIEU_THUE_PHONGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CHI_TIET_PHIEU_THUE_PHONG_PHONG"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class QUI_DINHRow : System.Data.DataRow {
            
            private QUI_DINHDataTable tableQUI_DINH;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QUI_DINHRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQUI_DINH = ((QUI_DINHDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenQuiDinh {
                get {
                    try {
                        return ((string)(this[this.tableQUI_DINH.TenQuiDinhColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TenQuiDinh\' in table \'QUI_DINH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUI_DINH.TenQuiDinhColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoTa {
                get {
                    try {
                        return ((string)(this[this.tableQUI_DINH.MoTaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MoTa\' in table \'QUI_DINH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUI_DINH.MoTaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenQuiDinhNull() {
                return this.IsNull(this.tableQUI_DINH.TenQuiDinhColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenQuiDinhNull() {
                this[this.tableQUI_DINH.TenQuiDinhColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoTaNull() {
                return this.IsNull(this.tableQUI_DINH.MoTaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoTaNull() {
                this[this.tableQUI_DINH.MoTaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class THAM_SORow : System.Data.DataRow {
            
            private THAM_SODataTable tableTHAM_SO;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal THAM_SORow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTHAM_SO = ((THAM_SODataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PhieuDangKy {
                get {
                    return ((int)(this[this.tableTHAM_SO.PhieuDangKyColumn]));
                }
                set {
                    this[this.tableTHAM_SO.PhieuDangKyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PhieuNhan {
                get {
                    return ((int)(this[this.tableTHAM_SO.PhieuNhanColumn]));
                }
                set {
                    this[this.tableTHAM_SO.PhieuNhanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HoaDon {
                get {
                    try {
                        return ((int)(this[this.tableTHAM_SO.HoaDonColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HoaDon\' in table \'THAM_SO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHAM_SO.HoaDonColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHoaDonNull() {
                return this.IsNull(this.tableTHAM_SO.HoaDonColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHoaDonNull() {
                this[this.tableTHAM_SO.HoaDonColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class THIET_BIRow : System.Data.DataRow {
            
            private THIET_BIDataTable tableTHIET_BI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal THIET_BIRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTHIET_BI = ((THIET_BIDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaThietBi {
                get {
                    return ((string)(this[this.tableTHIET_BI.MaThietBiColumn]));
                }
                set {
                    this[this.tableTHIET_BI.MaThietBiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenThietBi {
                get {
                    try {
                        return ((string)(this[this.tableTHIET_BI.TenThietBiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TenThietBi\' in table \'THIET_BI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHIET_BI.TenThietBiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiPhong {
                get {
                    return ((string)(this[this.tableTHIET_BI.MaLoaiPhongColumn]));
                }
                set {
                    this[this.tableTHIET_BI.MaLoaiPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SoLuong {
                get {
                    try {
                        return ((int)(this[this.tableTHIET_BI.SoLuongColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SoLuong\' in table \'THIET_BI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHIET_BI.SoLuongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRow LOAI_PHONGRow {
                get {
                    return ((LOAI_PHONGRow)(this.GetParentRow(this.Table.ParentRelations["FK_THIET_BI_LOAI_PHONG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_THIET_BI_LOAI_PHONG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenThietBiNull() {
                return this.IsNull(this.tableTHIET_BI.TenThietBiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenThietBiNull() {
                this[this.tableTHIET_BI.TenThietBiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoLuongNull() {
                return this.IsNull(this.tableTHIET_BI.SoLuongColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoLuongNull() {
                this[this.tableTHIET_BI.SoLuongColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BAO_CAO_DOANH_THURowChangeEvent : System.EventArgs {
            
            private BAO_CAO_DOANH_THURow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAO_CAO_DOANH_THURowChangeEvent(BAO_CAO_DOANH_THURow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAO_CAO_DOANH_THURow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CHI_TIET_BAO_CAO_DOANH_THURowChangeEvent : System.EventArgs {
            
            private CHI_TIET_BAO_CAO_DOANH_THURow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_BAO_CAO_DOANH_THURowChangeEvent(CHI_TIET_BAO_CAO_DOANH_THURow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_BAO_CAO_DOANH_THURow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CHI_TIET_HOA_DONRowChangeEvent : System.EventArgs {
            
            private CHI_TIET_HOA_DONRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_HOA_DONRowChangeEvent(CHI_TIET_HOA_DONRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_HOA_DONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChangeEvent : System.EventArgs {
            
            private CHI_TIET_MAT_DO_SU_DUNG_PHONGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_MAT_DO_SU_DUNG_PHONGRowChangeEvent(CHI_TIET_MAT_DO_SU_DUNG_PHONGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_MAT_DO_SU_DUNG_PHONGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CHI_TIET_PHIEU_NHAN_PHONGRowChangeEvent : System.EventArgs {
            
            private CHI_TIET_PHIEU_NHAN_PHONGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_NHAN_PHONGRowChangeEvent(CHI_TIET_PHIEU_NHAN_PHONGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_NHAN_PHONGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CHI_TIET_PHIEU_THUE_PHONGRowChangeEvent : System.EventArgs {
            
            private CHI_TIET_PHIEU_THUE_PHONGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_THUE_PHONGRowChangeEvent(CHI_TIET_PHIEU_THUE_PHONGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PHIEU_THUE_PHONGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CHINH_SACH_TRA_PHONGRowChangeEvent : System.EventArgs {
            
            private CHINH_SACH_TRA_PHONGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHINH_SACH_TRA_PHONGRowChangeEvent(CHINH_SACH_TRA_PHONGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHINH_SACH_TRA_PHONGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DANH_SACH_SU_DUNG_DICH_VURowChangeEvent : System.EventArgs {
            
            private DANH_SACH_SU_DUNG_DICH_VURow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANH_SACH_SU_DUNG_DICH_VURowChangeEvent(DANH_SACH_SU_DUNG_DICH_VURow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANH_SACH_SU_DUNG_DICH_VURow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DICH_VURowChangeEvent : System.EventArgs {
            
            private DICH_VURow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICH_VURowChangeEvent(DICH_VURow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICH_VURow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DON_VIRowChangeEvent : System.EventArgs {
            
            private DON_VIRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DON_VIRowChangeEvent(DON_VIRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DON_VIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HOA_DONRowChangeEvent : System.EventArgs {
            
            private HOA_DONRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRowChangeEvent(HOA_DONRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOA_DONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KHACH_HANGRowChangeEvent : System.EventArgs {
            
            private KHACH_HANGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRowChangeEvent(KHACH_HANGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LOAI_DICH_VURowChangeEvent : System.EventArgs {
            
            private LOAI_DICH_VURow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DICH_VURowChangeEvent(LOAI_DICH_VURow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_DICH_VURow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LOAI_NGUOI_DUNGRowChangeEvent : System.EventArgs {
            
            private LOAI_NGUOI_DUNGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NGUOI_DUNGRowChangeEvent(LOAI_NGUOI_DUNGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_NGUOI_DUNGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LOAI_PHONGRowChangeEvent : System.EventArgs {
            
            private LOAI_PHONGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRowChangeEvent(LOAI_PHONGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LOAI_TINH_TRANGRowChangeEvent : System.EventArgs {
            
            private LOAI_TINH_TRANGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TINH_TRANGRowChangeEvent(LOAI_TINH_TRANGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TINH_TRANGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MAT_DO_SU_DUNG_PHONGRowChangeEvent : System.EventArgs {
            
            private MAT_DO_SU_DUNG_PHONGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_DO_SU_DUNG_PHONGRowChangeEvent(MAT_DO_SU_DUNG_PHONGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAT_DO_SU_DUNG_PHONGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NGUOI_DUNGRowChangeEvent : System.EventArgs {
            
            private NGUOI_DUNGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOI_DUNGRowChangeEvent(NGUOI_DUNGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOI_DUNGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PHIEU_NHAN_PHONGRowChangeEvent : System.EventArgs {
            
            private PHIEU_NHAN_PHONGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_NHAN_PHONGRowChangeEvent(PHIEU_NHAN_PHONGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_NHAN_PHONGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PHIEU_THUE_PHONGRowChangeEvent : System.EventArgs {
            
            private PHIEU_THUE_PHONGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRowChangeEvent(PHIEU_THUE_PHONGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PHONGRowChangeEvent : System.EventArgs {
            
            private PHONGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRowChangeEvent(PHONGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class QUI_DINHRowChangeEvent : System.EventArgs {
            
            private QUI_DINHRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUI_DINHRowChangeEvent(QUI_DINHRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUI_DINHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class THAM_SORowChangeEvent : System.EventArgs {
            
            private THAM_SORow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THAM_SORowChangeEvent(THAM_SORow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THAM_SORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class THIET_BIRowChangeEvent : System.EventArgs {
            
            private THIET_BIRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THIET_BIRowChangeEvent(THIET_BIRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THIET_BIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace QUANLYKHACHSAN.QUANLYKHACHSANKIMANHDataSetTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BAO_CAO_DOANH_THUTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BAO_CAO_DOANH_THUTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BAO_CAO_DOANH_THU";
            tableMapping.ColumnMappings.Add("MaDoanhThu", "MaDoanhThu");
            tableMapping.ColumnMappings.Add("Thang", "Thang");
            tableMapping.ColumnMappings.Add("TongDoanhThu", "TongDoanhThu");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[BAO_CAO_DOANH_THU] WHERE (([MaDoanhThu] = @Original_MaDoanhThu) AND ((@IsNull_Thang = 1 AND [Thang] IS NULL) OR ([Thang] = @Original_Thang)) AND ((@IsNull_TongDoanhThu = 1 AND [TongDoanhThu] IS NULL) OR ([TongDoanhThu] = @Original_TongDoanhThu)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaDoanhThu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDoanhThu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Thang", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Thang", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Thang", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Thang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TongDoanhThu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TongDoanhThu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TongDoanhThu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TongDoanhThu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BAO_CAO_DOANH_THU] ([MaDoanhThu], [Thang], [TongDoanhThu]) VAL" +
                "UES (@MaDoanhThu, @Thang, @TongDoanhThu);\r\nSELECT MaDoanhThu, Thang, TongDoanhTh" +
                "u FROM BAO_CAO_DOANH_THU WHERE (MaDoanhThu = @MaDoanhThu)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaDoanhThu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDoanhThu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Thang", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Thang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TongDoanhThu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TongDoanhThu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[BAO_CAO_DOANH_THU] SET [MaDoanhThu] = @MaDoanhThu, [Thang] = @Thang, [TongDoanhThu] = @TongDoanhThu WHERE (([MaDoanhThu] = @Original_MaDoanhThu) AND ((@IsNull_Thang = 1 AND [Thang] IS NULL) OR ([Thang] = @Original_Thang)) AND ((@IsNull_TongDoanhThu = 1 AND [TongDoanhThu] IS NULL) OR ([TongDoanhThu] = @Original_TongDoanhThu)));
SELECT MaDoanhThu, Thang, TongDoanhThu FROM BAO_CAO_DOANH_THU WHERE (MaDoanhThu = @MaDoanhThu)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaDoanhThu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDoanhThu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Thang", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Thang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TongDoanhThu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TongDoanhThu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaDoanhThu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDoanhThu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Thang", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Thang", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Thang", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Thang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TongDoanhThu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TongDoanhThu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TongDoanhThu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TongDoanhThu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaDoanhThu, Thang, TongDoanhThu FROM dbo.BAO_CAO_DOANH_THU";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.BAO_CAO_DOANH_THUDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.BAO_CAO_DOANH_THUDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.BAO_CAO_DOANH_THUDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.BAO_CAO_DOANH_THUDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.BAO_CAO_DOANH_THUDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "BAO_CAO_DOANH_THU");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaDoanhThu, System.Nullable<System.DateTime> Original_Thang, System.Nullable<double> Original_TongDoanhThu) {
            if ((Original_MaDoanhThu == null)) {
                throw new System.ArgumentNullException("Original_MaDoanhThu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaDoanhThu));
            }
            if ((Original_Thang.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Thang.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_TongDoanhThu.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_TongDoanhThu.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaDoanhThu, System.Nullable<System.DateTime> Thang, System.Nullable<double> TongDoanhThu) {
            if ((MaDoanhThu == null)) {
                throw new System.ArgumentNullException("MaDoanhThu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaDoanhThu));
            }
            if ((Thang.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Thang.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((TongDoanhThu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(TongDoanhThu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaDoanhThu, System.Nullable<System.DateTime> Thang, System.Nullable<double> TongDoanhThu, string Original_MaDoanhThu, System.Nullable<System.DateTime> Original_Thang, System.Nullable<double> Original_TongDoanhThu) {
            if ((MaDoanhThu == null)) {
                throw new System.ArgumentNullException("MaDoanhThu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaDoanhThu));
            }
            if ((Thang.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Thang.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((TongDoanhThu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(TongDoanhThu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_MaDoanhThu == null)) {
                throw new System.ArgumentNullException("Original_MaDoanhThu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_MaDoanhThu));
            }
            if ((Original_Thang.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_Thang.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_TongDoanhThu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Original_TongDoanhThu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CHI_TIET_BAO_CAO_DOANH_THUTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CHI_TIET_BAO_CAO_DOANH_THUTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CHI_TIET_BAO_CAO_DOANH_THU";
            tableMapping.ColumnMappings.Add("MaChiTietDoanhThu", "MaChiTietDoanhThu");
            tableMapping.ColumnMappings.Add("MaDoanhThu", "MaDoanhThu");
            tableMapping.ColumnMappings.Add("MaLoaiPhong", "MaLoaiPhong");
            tableMapping.ColumnMappings.Add("DoanhThu", "DoanhThu");
            tableMapping.ColumnMappings.Add("TyLe", "TyLe");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CHI_TIET_BAO_CAO_DOANH_THU] WHERE (([MaChiTietDoanhThu] = @Original_MaChiTietDoanhThu) AND ([MaDoanhThu] = @Original_MaDoanhThu) AND ([MaLoaiPhong] = @Original_MaLoaiPhong) AND ((@IsNull_DoanhThu = 1 AND [DoanhThu] IS NULL) OR ([DoanhThu] = @Original_DoanhThu)) AND ((@IsNull_TyLe = 1 AND [TyLe] IS NULL) OR ([TyLe] = @Original_TyLe)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaChiTietDoanhThu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChiTietDoanhThu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaDoanhThu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDoanhThu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DoanhThu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DoanhThu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DoanhThu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "DoanhThu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TyLe", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLe", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TyLe", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLe", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CHI_TIET_BAO_CAO_DOANH_THU] ([MaChiTietDoanhThu], [MaDoanhThu], [MaLoaiPhong], [DoanhThu], [TyLe]) VALUES (@MaChiTietDoanhThu, @MaDoanhThu, @MaLoaiPhong, @DoanhThu, @TyLe);
SELECT MaChiTietDoanhThu, MaDoanhThu, MaLoaiPhong, DoanhThu, TyLe FROM CHI_TIET_BAO_CAO_DOANH_THU WHERE (MaChiTietDoanhThu = @MaChiTietDoanhThu)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaChiTietDoanhThu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChiTietDoanhThu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaDoanhThu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDoanhThu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DoanhThu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "DoanhThu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TyLe", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLe", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CHI_TIET_BAO_CAO_DOANH_THU] SET [MaChiTietDoanhThu] = @MaChiTietDoanhThu, [MaDoanhThu] = @MaDoanhThu, [MaLoaiPhong] = @MaLoaiPhong, [DoanhThu] = @DoanhThu, [TyLe] = @TyLe WHERE (([MaChiTietDoanhThu] = @Original_MaChiTietDoanhThu) AND ([MaDoanhThu] = @Original_MaDoanhThu) AND ([MaLoaiPhong] = @Original_MaLoaiPhong) AND ((@IsNull_DoanhThu = 1 AND [DoanhThu] IS NULL) OR ([DoanhThu] = @Original_DoanhThu)) AND ((@IsNull_TyLe = 1 AND [TyLe] IS NULL) OR ([TyLe] = @Original_TyLe)));
SELECT MaChiTietDoanhThu, MaDoanhThu, MaLoaiPhong, DoanhThu, TyLe FROM CHI_TIET_BAO_CAO_DOANH_THU WHERE (MaChiTietDoanhThu = @MaChiTietDoanhThu)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaChiTietDoanhThu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChiTietDoanhThu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaDoanhThu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDoanhThu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DoanhThu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "DoanhThu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TyLe", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLe", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaChiTietDoanhThu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChiTietDoanhThu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaDoanhThu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDoanhThu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DoanhThu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DoanhThu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DoanhThu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "DoanhThu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TyLe", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLe", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TyLe", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLe", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaChiTietDoanhThu, MaDoanhThu, MaLoaiPhong, DoanhThu, TyLe FROM dbo.CHI_TI" +
                "ET_BAO_CAO_DOANH_THU";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.CHI_TIET_BAO_CAO_DOANH_THUDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.CHI_TIET_BAO_CAO_DOANH_THUDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.CHI_TIET_BAO_CAO_DOANH_THUDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.CHI_TIET_BAO_CAO_DOANH_THUDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.CHI_TIET_BAO_CAO_DOANH_THUDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CHI_TIET_BAO_CAO_DOANH_THU");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaChiTietDoanhThu, string Original_MaDoanhThu, string Original_MaLoaiPhong, System.Nullable<double> Original_DoanhThu, System.Nullable<double> Original_TyLe) {
            if ((Original_MaChiTietDoanhThu == null)) {
                throw new System.ArgumentNullException("Original_MaChiTietDoanhThu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaChiTietDoanhThu));
            }
            if ((Original_MaDoanhThu == null)) {
                throw new System.ArgumentNullException("Original_MaDoanhThu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaDoanhThu));
            }
            if ((Original_MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MaLoaiPhong));
            }
            if ((Original_DoanhThu.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_DoanhThu.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_TyLe.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_TyLe.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaChiTietDoanhThu, string MaDoanhThu, string MaLoaiPhong, System.Nullable<double> DoanhThu, System.Nullable<double> TyLe) {
            if ((MaChiTietDoanhThu == null)) {
                throw new System.ArgumentNullException("MaChiTietDoanhThu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaChiTietDoanhThu));
            }
            if ((MaDoanhThu == null)) {
                throw new System.ArgumentNullException("MaDoanhThu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaDoanhThu));
            }
            if ((MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("MaLoaiPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MaLoaiPhong));
            }
            if ((DoanhThu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(DoanhThu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((TyLe.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(TyLe.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaChiTietDoanhThu, string MaDoanhThu, string MaLoaiPhong, System.Nullable<double> DoanhThu, System.Nullable<double> TyLe, string Original_MaChiTietDoanhThu, string Original_MaDoanhThu, string Original_MaLoaiPhong, System.Nullable<double> Original_DoanhThu, System.Nullable<double> Original_TyLe) {
            if ((MaChiTietDoanhThu == null)) {
                throw new System.ArgumentNullException("MaChiTietDoanhThu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaChiTietDoanhThu));
            }
            if ((MaDoanhThu == null)) {
                throw new System.ArgumentNullException("MaDoanhThu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaDoanhThu));
            }
            if ((MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("MaLoaiPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MaLoaiPhong));
            }
            if ((DoanhThu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(DoanhThu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((TyLe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(TyLe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_MaChiTietDoanhThu == null)) {
                throw new System.ArgumentNullException("Original_MaChiTietDoanhThu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_MaChiTietDoanhThu));
            }
            if ((Original_MaDoanhThu == null)) {
                throw new System.ArgumentNullException("Original_MaDoanhThu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MaDoanhThu));
            }
            if ((Original_MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MaLoaiPhong));
            }
            if ((Original_DoanhThu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_DoanhThu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((Original_TyLe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(Original_TyLe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CHI_TIET_HOA_DONTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CHI_TIET_HOA_DONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CHI_TIET_HOA_DON";
            tableMapping.ColumnMappings.Add("MaHoaDon", "MaHoaDon");
            tableMapping.ColumnMappings.Add("MaPhong", "MaPhong");
            tableMapping.ColumnMappings.Add("MaSuDungDichVu", "MaSuDungDichVu");
            tableMapping.ColumnMappings.Add("MaChinhSach", "MaChinhSach");
            tableMapping.ColumnMappings.Add("TienPhong", "TienPhong");
            tableMapping.ColumnMappings.Add("TienDichVu", "TienDichVu");
            tableMapping.ColumnMappings.Add("GiamGiaKH", "GiamGiaKH");
            tableMapping.ColumnMappings.Add("HinhThucThanhToan", "HinhThucThanhToan");
            tableMapping.ColumnMappings.Add("SoDem", "SoDem");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CHI_TIET_HOA_DON] WHERE (([MaHoaDon] = @Original_MaHoaDon) AND ([MaPhong] = @Original_MaPhong) AND ([MaSuDungDichVu] = @Original_MaSuDungDichVu) AND ([MaChinhSach] = @Original_MaChinhSach) AND ((@IsNull_TienPhong = 1 AND [TienPhong] IS NULL) OR ([TienPhong] = @Original_TienPhong)) AND ((@IsNull_TienDichVu = 1 AND [TienDichVu] IS NULL) OR ([TienDichVu] = @Original_TienDichVu)) AND ((@IsNull_GiamGiaKH = 1 AND [GiamGiaKH] IS NULL) OR ([GiamGiaKH] = @Original_GiamGiaKH)) AND ((@IsNull_HinhThucThanhToan = 1 AND [HinhThucThanhToan] IS NULL) OR ([HinhThucThanhToan] = @Original_HinhThucThanhToan)) AND ((@IsNull_SoDem = 1 AND [SoDem] IS NULL) OR ([SoDem] = @Original_SoDem)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaHoaDon", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaHoaDon", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaSuDungDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSuDungDichVu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaChinhSach", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChinhSach", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TienPhong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TienPhong", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TienPhong", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TienPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TienDichVu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TienDichVu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TienDichVu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TienDichVu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GiamGiaKH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GiamGiaKH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GiamGiaKH", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "GiamGiaKH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HinhThucThanhToan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HinhThucThanhToan", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HinhThucThanhToan", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HinhThucThanhToan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoDem", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDem", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoDem", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CHI_TIET_HOA_DON] ([MaHoaDon], [MaPhong], [MaSuDungDichVu], [MaChinhSach], [TienPhong], [TienDichVu], [GiamGiaKH], [HinhThucThanhToan], [SoDem]) VALUES (@MaHoaDon, @MaPhong, @MaSuDungDichVu, @MaChinhSach, @TienPhong, @TienDichVu, @GiamGiaKH, @HinhThucThanhToan, @SoDem);
SELECT MaHoaDon, MaPhong, MaSuDungDichVu, MaChinhSach, TienPhong, TienDichVu, GiamGiaKH, HinhThucThanhToan, SoDem FROM CHI_TIET_HOA_DON WHERE (MaChinhSach = @MaChinhSach) AND (MaHoaDon = @MaHoaDon) AND (MaPhong = @MaPhong) AND (MaSuDungDichVu = @MaSuDungDichVu)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaHoaDon", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaHoaDon", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaSuDungDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSuDungDichVu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaChinhSach", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChinhSach", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TienPhong", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TienPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TienDichVu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TienDichVu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GiamGiaKH", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "GiamGiaKH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HinhThucThanhToan", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HinhThucThanhToan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoDem", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CHI_TIET_HOA_DON] SET [MaHoaDon] = @MaHoaDon, [MaPhong] = @MaPhong, [MaSuDungDichVu] = @MaSuDungDichVu, [MaChinhSach] = @MaChinhSach, [TienPhong] = @TienPhong, [TienDichVu] = @TienDichVu, [GiamGiaKH] = @GiamGiaKH, [HinhThucThanhToan] = @HinhThucThanhToan, [SoDem] = @SoDem WHERE (([MaHoaDon] = @Original_MaHoaDon) AND ([MaPhong] = @Original_MaPhong) AND ([MaSuDungDichVu] = @Original_MaSuDungDichVu) AND ([MaChinhSach] = @Original_MaChinhSach) AND ((@IsNull_TienPhong = 1 AND [TienPhong] IS NULL) OR ([TienPhong] = @Original_TienPhong)) AND ((@IsNull_TienDichVu = 1 AND [TienDichVu] IS NULL) OR ([TienDichVu] = @Original_TienDichVu)) AND ((@IsNull_GiamGiaKH = 1 AND [GiamGiaKH] IS NULL) OR ([GiamGiaKH] = @Original_GiamGiaKH)) AND ((@IsNull_HinhThucThanhToan = 1 AND [HinhThucThanhToan] IS NULL) OR ([HinhThucThanhToan] = @Original_HinhThucThanhToan)) AND ((@IsNull_SoDem = 1 AND [SoDem] IS NULL) OR ([SoDem] = @Original_SoDem)));
SELECT MaHoaDon, MaPhong, MaSuDungDichVu, MaChinhSach, TienPhong, TienDichVu, GiamGiaKH, HinhThucThanhToan, SoDem FROM CHI_TIET_HOA_DON WHERE (MaChinhSach = @MaChinhSach) AND (MaHoaDon = @MaHoaDon) AND (MaPhong = @MaPhong) AND (MaSuDungDichVu = @MaSuDungDichVu)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaHoaDon", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaHoaDon", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaSuDungDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSuDungDichVu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaChinhSach", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChinhSach", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TienPhong", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TienPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TienDichVu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TienDichVu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GiamGiaKH", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "GiamGiaKH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HinhThucThanhToan", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HinhThucThanhToan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoDem", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaHoaDon", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaHoaDon", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaSuDungDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSuDungDichVu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaChinhSach", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChinhSach", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TienPhong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TienPhong", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TienPhong", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TienPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TienDichVu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TienDichVu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TienDichVu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TienDichVu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GiamGiaKH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GiamGiaKH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GiamGiaKH", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "GiamGiaKH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HinhThucThanhToan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HinhThucThanhToan", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HinhThucThanhToan", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HinhThucThanhToan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoDem", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDem", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoDem", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaHoaDon, MaPhong, MaSuDungDichVu, MaChinhSach, TienPhong, TienDichVu, Gia" +
                "mGiaKH, HinhThucThanhToan, SoDem FROM dbo.CHI_TIET_HOA_DON";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.CHI_TIET_HOA_DONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.CHI_TIET_HOA_DONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.CHI_TIET_HOA_DONDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.CHI_TIET_HOA_DONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.CHI_TIET_HOA_DONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CHI_TIET_HOA_DON");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaHoaDon, string Original_MaPhong, string Original_MaSuDungDichVu, string Original_MaChinhSach, System.Nullable<double> Original_TienPhong, System.Nullable<double> Original_TienDichVu, System.Nullable<double> Original_GiamGiaKH, string Original_HinhThucThanhToan, System.Nullable<int> Original_SoDem) {
            if ((Original_MaHoaDon == null)) {
                throw new System.ArgumentNullException("Original_MaHoaDon");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaHoaDon));
            }
            if ((Original_MaPhong == null)) {
                throw new System.ArgumentNullException("Original_MaPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaPhong));
            }
            if ((Original_MaSuDungDichVu == null)) {
                throw new System.ArgumentNullException("Original_MaSuDungDichVu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MaSuDungDichVu));
            }
            if ((Original_MaChinhSach == null)) {
                throw new System.ArgumentNullException("Original_MaChinhSach");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_MaChinhSach));
            }
            if ((Original_TienPhong.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_TienPhong.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_TienDichVu.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_TienDichVu.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_GiamGiaKH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_GiamGiaKH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((Original_HinhThucThanhToan == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_HinhThucThanhToan));
            }
            if ((Original_SoDem.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_SoDem.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaHoaDon, string MaPhong, string MaSuDungDichVu, string MaChinhSach, System.Nullable<double> TienPhong, System.Nullable<double> TienDichVu, System.Nullable<double> GiamGiaKH, string HinhThucThanhToan, System.Nullable<int> SoDem) {
            if ((MaHoaDon == null)) {
                throw new System.ArgumentNullException("MaHoaDon");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaHoaDon));
            }
            if ((MaPhong == null)) {
                throw new System.ArgumentNullException("MaPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaPhong));
            }
            if ((MaSuDungDichVu == null)) {
                throw new System.ArgumentNullException("MaSuDungDichVu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MaSuDungDichVu));
            }
            if ((MaChinhSach == null)) {
                throw new System.ArgumentNullException("MaChinhSach");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MaChinhSach));
            }
            if ((TienPhong.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(TienPhong.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((TienDichVu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(TienDichVu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((GiamGiaKH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(GiamGiaKH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((HinhThucThanhToan == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(HinhThucThanhToan));
            }
            if ((SoDem.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(SoDem.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MaHoaDon, 
                    string MaPhong, 
                    string MaSuDungDichVu, 
                    string MaChinhSach, 
                    System.Nullable<double> TienPhong, 
                    System.Nullable<double> TienDichVu, 
                    System.Nullable<double> GiamGiaKH, 
                    string HinhThucThanhToan, 
                    System.Nullable<int> SoDem, 
                    string Original_MaHoaDon, 
                    string Original_MaPhong, 
                    string Original_MaSuDungDichVu, 
                    string Original_MaChinhSach, 
                    System.Nullable<double> Original_TienPhong, 
                    System.Nullable<double> Original_TienDichVu, 
                    System.Nullable<double> Original_GiamGiaKH, 
                    string Original_HinhThucThanhToan, 
                    System.Nullable<int> Original_SoDem) {
            if ((MaHoaDon == null)) {
                throw new System.ArgumentNullException("MaHoaDon");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaHoaDon));
            }
            if ((MaPhong == null)) {
                throw new System.ArgumentNullException("MaPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaPhong));
            }
            if ((MaSuDungDichVu == null)) {
                throw new System.ArgumentNullException("MaSuDungDichVu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MaSuDungDichVu));
            }
            if ((MaChinhSach == null)) {
                throw new System.ArgumentNullException("MaChinhSach");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MaChinhSach));
            }
            if ((TienPhong.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(TienPhong.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((TienDichVu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(TienDichVu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((GiamGiaKH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(GiamGiaKH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((HinhThucThanhToan == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(HinhThucThanhToan));
            }
            if ((SoDem.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(SoDem.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_MaHoaDon == null)) {
                throw new System.ArgumentNullException("Original_MaHoaDon");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_MaHoaDon));
            }
            if ((Original_MaPhong == null)) {
                throw new System.ArgumentNullException("Original_MaPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_MaPhong));
            }
            if ((Original_MaSuDungDichVu == null)) {
                throw new System.ArgumentNullException("Original_MaSuDungDichVu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_MaSuDungDichVu));
            }
            if ((Original_MaChinhSach == null)) {
                throw new System.ArgumentNullException("Original_MaChinhSach");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_MaChinhSach));
            }
            if ((Original_TienPhong.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Original_TienPhong.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_TienDichVu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Original_TienDichVu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_GiamGiaKH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Original_GiamGiaKH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_HinhThucThanhToan == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_HinhThucThanhToan));
            }
            if ((Original_SoDem.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_SoDem.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CHI_TIET_MAT_DO_SU_DUNG_PHONGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CHI_TIET_MAT_DO_SU_DUNG_PHONGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CHI_TIET_MAT_DO_SU_DUNG_PHONG";
            tableMapping.ColumnMappings.Add("MaChiTietMatDo", "MaChiTietMatDo");
            tableMapping.ColumnMappings.Add("MaMatDo", "MaMatDo");
            tableMapping.ColumnMappings.Add("MaPhong", "MaPhong");
            tableMapping.ColumnMappings.Add("SoNgayThue", "SoNgayThue");
            tableMapping.ColumnMappings.Add("TyLe", "TyLe");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CHI_TIET_MAT_DO_SU_DUNG_PHONG] WHERE (([MaChiTietMatDo] = @Original_MaChiTietMatDo) AND ([MaMatDo] = @Original_MaMatDo) AND ([MaPhong] = @Original_MaPhong) AND ((@IsNull_SoNgayThue = 1 AND [SoNgayThue] IS NULL) OR ([SoNgayThue] = @Original_SoNgayThue)) AND ((@IsNull_TyLe = 1 AND [TyLe] IS NULL) OR ([TyLe] = @Original_TyLe)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaChiTietMatDo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChiTietMatDo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaMatDo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaMatDo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoNgayThue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNgayThue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoNgayThue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNgayThue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TyLe", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLe", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TyLe", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLe", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CHI_TIET_MAT_DO_SU_DUNG_PHONG] ([MaChiTietMatDo], [MaMatDo], [MaPhong], [SoNgayThue], [TyLe]) VALUES (@MaChiTietMatDo, @MaMatDo, @MaPhong, @SoNgayThue, @TyLe);
SELECT MaChiTietMatDo, MaMatDo, MaPhong, SoNgayThue, TyLe FROM CHI_TIET_MAT_DO_SU_DUNG_PHONG WHERE (MaChiTietMatDo = @MaChiTietMatDo)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaChiTietMatDo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChiTietMatDo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaMatDo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaMatDo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoNgayThue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNgayThue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TyLe", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLe", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CHI_TIET_MAT_DO_SU_DUNG_PHONG] SET [MaChiTietMatDo] = @MaChiTietMatDo, [MaMatDo] = @MaMatDo, [MaPhong] = @MaPhong, [SoNgayThue] = @SoNgayThue, [TyLe] = @TyLe WHERE (([MaChiTietMatDo] = @Original_MaChiTietMatDo) AND ([MaMatDo] = @Original_MaMatDo) AND ([MaPhong] = @Original_MaPhong) AND ((@IsNull_SoNgayThue = 1 AND [SoNgayThue] IS NULL) OR ([SoNgayThue] = @Original_SoNgayThue)) AND ((@IsNull_TyLe = 1 AND [TyLe] IS NULL) OR ([TyLe] = @Original_TyLe)));
SELECT MaChiTietMatDo, MaMatDo, MaPhong, SoNgayThue, TyLe FROM CHI_TIET_MAT_DO_SU_DUNG_PHONG WHERE (MaChiTietMatDo = @MaChiTietMatDo)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaChiTietMatDo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChiTietMatDo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaMatDo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaMatDo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoNgayThue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNgayThue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TyLe", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLe", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaChiTietMatDo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChiTietMatDo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaMatDo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaMatDo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoNgayThue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNgayThue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoNgayThue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNgayThue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TyLe", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLe", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TyLe", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLe", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaChiTietMatDo, MaMatDo, MaPhong, SoNgayThue, TyLe FROM dbo.CHI_TIET_MAT_D" +
                "O_SU_DUNG_PHONG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.CHI_TIET_MAT_DO_SU_DUNG_PHONGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CHI_TIET_MAT_DO_SU_DUNG_PHONG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaChiTietMatDo, string Original_MaMatDo, string Original_MaPhong, System.Nullable<int> Original_SoNgayThue, System.Nullable<double> Original_TyLe) {
            if ((Original_MaChiTietMatDo == null)) {
                throw new System.ArgumentNullException("Original_MaChiTietMatDo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaChiTietMatDo));
            }
            if ((Original_MaMatDo == null)) {
                throw new System.ArgumentNullException("Original_MaMatDo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaMatDo));
            }
            if ((Original_MaPhong == null)) {
                throw new System.ArgumentNullException("Original_MaPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MaPhong));
            }
            if ((Original_SoNgayThue.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_SoNgayThue.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_TyLe.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_TyLe.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaChiTietMatDo, string MaMatDo, string MaPhong, System.Nullable<int> SoNgayThue, System.Nullable<double> TyLe) {
            if ((MaChiTietMatDo == null)) {
                throw new System.ArgumentNullException("MaChiTietMatDo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaChiTietMatDo));
            }
            if ((MaMatDo == null)) {
                throw new System.ArgumentNullException("MaMatDo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaMatDo));
            }
            if ((MaPhong == null)) {
                throw new System.ArgumentNullException("MaPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MaPhong));
            }
            if ((SoNgayThue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(SoNgayThue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((TyLe.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(TyLe.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaChiTietMatDo, string MaMatDo, string MaPhong, System.Nullable<int> SoNgayThue, System.Nullable<double> TyLe, string Original_MaChiTietMatDo, string Original_MaMatDo, string Original_MaPhong, System.Nullable<int> Original_SoNgayThue, System.Nullable<double> Original_TyLe) {
            if ((MaChiTietMatDo == null)) {
                throw new System.ArgumentNullException("MaChiTietMatDo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaChiTietMatDo));
            }
            if ((MaMatDo == null)) {
                throw new System.ArgumentNullException("MaMatDo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaMatDo));
            }
            if ((MaPhong == null)) {
                throw new System.ArgumentNullException("MaPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MaPhong));
            }
            if ((SoNgayThue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(SoNgayThue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((TyLe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(TyLe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_MaChiTietMatDo == null)) {
                throw new System.ArgumentNullException("Original_MaChiTietMatDo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_MaChiTietMatDo));
            }
            if ((Original_MaMatDo == null)) {
                throw new System.ArgumentNullException("Original_MaMatDo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MaMatDo));
            }
            if ((Original_MaPhong == null)) {
                throw new System.ArgumentNullException("Original_MaPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MaPhong));
            }
            if ((Original_SoNgayThue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_SoNgayThue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((Original_TyLe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(Original_TyLe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CHI_TIET_PHIEU_NHAN_PHONGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CHI_TIET_PHIEU_NHAN_PHONGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CHI_TIET_PHIEU_NHAN_PHONG";
            tableMapping.ColumnMappings.Add("STT", "STT");
            tableMapping.ColumnMappings.Add("MaNhanPhong", "MaNhanPhong");
            tableMapping.ColumnMappings.Add("MaPhong", "MaPhong");
            tableMapping.ColumnMappings.Add("HoTenKhachHang", "HoTenKhachHang");
            tableMapping.ColumnMappings.Add("CMND", "CMND");
            tableMapping.ColumnMappings.Add("NgayNhan", "NgayNhan");
            tableMapping.ColumnMappings.Add("NgayTraDuKien", "NgayTraDuKien");
            tableMapping.ColumnMappings.Add("NgayTraThucTe", "NgayTraThucTe");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CHI_TIET_PHIEU_NHAN_PHONG] WHERE (([STT] = @Original_STT) AND ([MaNhanPhong] = @Original_MaNhanPhong) AND ([MaPhong] = @Original_MaPhong) AND ((@IsNull_HoTenKhachHang = 1 AND [HoTenKhachHang] IS NULL) OR ([HoTenKhachHang] = @Original_HoTenKhachHang)) AND ((@IsNull_CMND = 1 AND [CMND] IS NULL) OR ([CMND] = @Original_CMND)) AND ((@IsNull_NgayNhan = 1 AND [NgayNhan] IS NULL) OR ([NgayNhan] = @Original_NgayNhan)) AND ((@IsNull_NgayTraDuKien = 1 AND [NgayTraDuKien] IS NULL) OR ([NgayTraDuKien] = @Original_NgayTraDuKien)) AND ((@IsNull_NgayTraThucTe = 1 AND [NgayTraThucTe] IS NULL) OR ([NgayTraThucTe] = @Original_NgayTraThucTe)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STT", System.Data.SqlDbType.BigInt, 0, System.Data.ParameterDirection.Input, 0, 0, "STT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HoTenKhachHang", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HoTenKhachHang", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HoTenKhachHang", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HoTenKhachHang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CMND", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CMND", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayNhan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhan", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayNhan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayTraDuKien", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTraDuKien", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayTraDuKien", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTraDuKien", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayTraThucTe", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTraThucTe", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayTraThucTe", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTraThucTe", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CHI_TIET_PHIEU_NHAN_PHONG] ([STT], [MaNhanPhong], [MaPhong], [HoTenKhachHang], [CMND], [NgayNhan], [NgayTraDuKien], [NgayTraThucTe]) VALUES (@STT, @MaNhanPhong, @MaPhong, @HoTenKhachHang, @CMND, @NgayNhan, @NgayTraDuKien, @NgayTraThucTe);
SELECT STT, MaNhanPhong, MaPhong, HoTenKhachHang, CMND, NgayNhan, NgayTraDuKien, NgayTraThucTe FROM CHI_TIET_PHIEU_NHAN_PHONG WHERE (MaNhanPhong = @MaNhanPhong) AND (MaPhong = @MaPhong)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STT", System.Data.SqlDbType.BigInt, 0, System.Data.ParameterDirection.Input, 0, 0, "STT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HoTenKhachHang", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HoTenKhachHang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CMND", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayNhan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayTraDuKien", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTraDuKien", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayTraThucTe", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTraThucTe", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CHI_TIET_PHIEU_NHAN_PHONG] SET [STT] = @STT, [MaNhanPhong] = @MaNhanPhong, [MaPhong] = @MaPhong, [HoTenKhachHang] = @HoTenKhachHang, [CMND] = @CMND, [NgayNhan] = @NgayNhan, [NgayTraDuKien] = @NgayTraDuKien, [NgayTraThucTe] = @NgayTraThucTe WHERE (([STT] = @Original_STT) AND ([MaNhanPhong] = @Original_MaNhanPhong) AND ([MaPhong] = @Original_MaPhong) AND ((@IsNull_HoTenKhachHang = 1 AND [HoTenKhachHang] IS NULL) OR ([HoTenKhachHang] = @Original_HoTenKhachHang)) AND ((@IsNull_CMND = 1 AND [CMND] IS NULL) OR ([CMND] = @Original_CMND)) AND ((@IsNull_NgayNhan = 1 AND [NgayNhan] IS NULL) OR ([NgayNhan] = @Original_NgayNhan)) AND ((@IsNull_NgayTraDuKien = 1 AND [NgayTraDuKien] IS NULL) OR ([NgayTraDuKien] = @Original_NgayTraDuKien)) AND ((@IsNull_NgayTraThucTe = 1 AND [NgayTraThucTe] IS NULL) OR ([NgayTraThucTe] = @Original_NgayTraThucTe)));
SELECT STT, MaNhanPhong, MaPhong, HoTenKhachHang, CMND, NgayNhan, NgayTraDuKien, NgayTraThucTe FROM CHI_TIET_PHIEU_NHAN_PHONG WHERE (MaNhanPhong = @MaNhanPhong) AND (MaPhong = @MaPhong)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STT", System.Data.SqlDbType.BigInt, 0, System.Data.ParameterDirection.Input, 0, 0, "STT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HoTenKhachHang", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HoTenKhachHang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CMND", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayNhan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayTraDuKien", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTraDuKien", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayTraThucTe", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTraThucTe", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STT", System.Data.SqlDbType.BigInt, 0, System.Data.ParameterDirection.Input, 0, 0, "STT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HoTenKhachHang", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HoTenKhachHang", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HoTenKhachHang", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HoTenKhachHang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CMND", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CMND", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayNhan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhan", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayNhan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayTraDuKien", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTraDuKien", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayTraDuKien", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTraDuKien", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayTraThucTe", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTraThucTe", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayTraThucTe", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTraThucTe", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT STT, MaNhanPhong, MaPhong, HoTenKhachHang, CMND, NgayNhan, NgayTraDuKien, " +
                "NgayTraThucTe FROM dbo.CHI_TIET_PHIEU_NHAN_PHONG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.CHI_TIET_PHIEU_NHAN_PHONGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.CHI_TIET_PHIEU_NHAN_PHONGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.CHI_TIET_PHIEU_NHAN_PHONGDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.CHI_TIET_PHIEU_NHAN_PHONGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.CHI_TIET_PHIEU_NHAN_PHONGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CHI_TIET_PHIEU_NHAN_PHONG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_STT, string Original_MaNhanPhong, string Original_MaPhong, string Original_HoTenKhachHang, string Original_CMND, System.Nullable<System.DateTime> Original_NgayNhan, System.Nullable<System.DateTime> Original_NgayTraDuKien, System.Nullable<System.DateTime> Original_NgayTraThucTe) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_STT));
            if ((Original_MaNhanPhong == null)) {
                throw new System.ArgumentNullException("Original_MaNhanPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaNhanPhong));
            }
            if ((Original_MaPhong == null)) {
                throw new System.ArgumentNullException("Original_MaPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MaPhong));
            }
            if ((Original_HoTenKhachHang == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_HoTenKhachHang));
            }
            if ((Original_CMND == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_CMND));
            }
            if ((Original_NgayNhan.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_NgayNhan.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_NgayTraDuKien.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_NgayTraDuKien.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_NgayTraThucTe.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_NgayTraThucTe.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long STT, string MaNhanPhong, string MaPhong, string HoTenKhachHang, string CMND, System.Nullable<System.DateTime> NgayNhan, System.Nullable<System.DateTime> NgayTraDuKien, System.Nullable<System.DateTime> NgayTraThucTe) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(STT));
            if ((MaNhanPhong == null)) {
                throw new System.ArgumentNullException("MaNhanPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaNhanPhong));
            }
            if ((MaPhong == null)) {
                throw new System.ArgumentNullException("MaPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MaPhong));
            }
            if ((HoTenKhachHang == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(HoTenKhachHang));
            }
            if ((CMND == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CMND));
            }
            if ((NgayNhan.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(NgayNhan.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((NgayTraDuKien.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(NgayTraDuKien.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((NgayTraThucTe.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(NgayTraThucTe.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long STT, 
                    string MaNhanPhong, 
                    string MaPhong, 
                    string HoTenKhachHang, 
                    string CMND, 
                    System.Nullable<System.DateTime> NgayNhan, 
                    System.Nullable<System.DateTime> NgayTraDuKien, 
                    System.Nullable<System.DateTime> NgayTraThucTe, 
                    long Original_STT, 
                    string Original_MaNhanPhong, 
                    string Original_MaPhong, 
                    string Original_HoTenKhachHang, 
                    string Original_CMND, 
                    System.Nullable<System.DateTime> Original_NgayNhan, 
                    System.Nullable<System.DateTime> Original_NgayTraDuKien, 
                    System.Nullable<System.DateTime> Original_NgayTraThucTe) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(STT));
            if ((MaNhanPhong == null)) {
                throw new System.ArgumentNullException("MaNhanPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaNhanPhong));
            }
            if ((MaPhong == null)) {
                throw new System.ArgumentNullException("MaPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MaPhong));
            }
            if ((HoTenKhachHang == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(HoTenKhachHang));
            }
            if ((CMND == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CMND));
            }
            if ((NgayNhan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(NgayNhan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((NgayTraDuKien.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(NgayTraDuKien.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((NgayTraThucTe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(NgayTraThucTe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(Original_STT));
            if ((Original_MaNhanPhong == null)) {
                throw new System.ArgumentNullException("Original_MaNhanPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_MaNhanPhong));
            }
            if ((Original_MaPhong == null)) {
                throw new System.ArgumentNullException("Original_MaPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_MaPhong));
            }
            if ((Original_HoTenKhachHang == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_HoTenKhachHang));
            }
            if ((Original_CMND == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_CMND));
            }
            if ((Original_NgayNhan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_NgayNhan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_NgayTraDuKien.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_NgayTraDuKien.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_NgayTraThucTe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_NgayTraThucTe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CHI_TIET_PHIEU_THUE_PHONGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CHI_TIET_PHIEU_THUE_PHONGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CHI_TIET_PHIEU_THUE_PHONG";
            tableMapping.ColumnMappings.Add("STT", "STT");
            tableMapping.ColumnMappings.Add("MaPhieuThue", "MaPhieuThue");
            tableMapping.ColumnMappings.Add("MaPhong", "MaPhong");
            tableMapping.ColumnMappings.Add("NgayDangKy", "NgayDangKy");
            tableMapping.ColumnMappings.Add("NgayNhan", "NgayNhan");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CHI_TIET_PHIEU_THUE_PHONG] WHERE (([STT] = @Original_STT) AND ([MaPhieuThue] = @Original_MaPhieuThue) AND ([MaPhong] = @Original_MaPhong) AND ((@IsNull_NgayDangKy = 1 AND [NgayDangKy] IS NULL) OR ([NgayDangKy] = @Original_NgayDangKy)) AND ((@IsNull_NgayNhan = 1 AND [NgayNhan] IS NULL) OR ([NgayNhan] = @Original_NgayNhan)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STT", System.Data.SqlDbType.BigInt, 0, System.Data.ParameterDirection.Input, 0, 0, "STT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhieuThue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhieuThue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayDangKy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayDangKy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayDangKy", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayDangKy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayNhan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhan", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayNhan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CHI_TIET_PHIEU_THUE_PHONG] ([STT], [MaPhieuThue], [MaPhong], [NgayDangKy], [NgayNhan]) VALUES (@STT, @MaPhieuThue, @MaPhong, @NgayDangKy, @NgayNhan);
SELECT STT, MaPhieuThue, MaPhong, NgayDangKy, NgayNhan FROM CHI_TIET_PHIEU_THUE_PHONG WHERE (MaPhieuThue = @MaPhieuThue) AND (MaPhong = @MaPhong)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STT", System.Data.SqlDbType.BigInt, 0, System.Data.ParameterDirection.Input, 0, 0, "STT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhieuThue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhieuThue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayDangKy", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayDangKy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayNhan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CHI_TIET_PHIEU_THUE_PHONG] SET [STT] = @STT, [MaPhieuThue] = @MaPhieuThue, [MaPhong] = @MaPhong, [NgayDangKy] = @NgayDangKy, [NgayNhan] = @NgayNhan WHERE (([STT] = @Original_STT) AND ([MaPhieuThue] = @Original_MaPhieuThue) AND ([MaPhong] = @Original_MaPhong) AND ((@IsNull_NgayDangKy = 1 AND [NgayDangKy] IS NULL) OR ([NgayDangKy] = @Original_NgayDangKy)) AND ((@IsNull_NgayNhan = 1 AND [NgayNhan] IS NULL) OR ([NgayNhan] = @Original_NgayNhan)));
SELECT STT, MaPhieuThue, MaPhong, NgayDangKy, NgayNhan FROM CHI_TIET_PHIEU_THUE_PHONG WHERE (MaPhieuThue = @MaPhieuThue) AND (MaPhong = @MaPhong)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STT", System.Data.SqlDbType.BigInt, 0, System.Data.ParameterDirection.Input, 0, 0, "STT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhieuThue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhieuThue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayDangKy", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayDangKy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayNhan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STT", System.Data.SqlDbType.BigInt, 0, System.Data.ParameterDirection.Input, 0, 0, "STT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhieuThue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhieuThue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayDangKy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayDangKy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayDangKy", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayDangKy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayNhan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhan", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayNhan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT STT, MaPhieuThue, MaPhong, NgayDangKy, NgayNhan FROM dbo.CHI_TIET_PHIEU_TH" +
                "UE_PHONG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.CHI_TIET_PHIEU_THUE_PHONGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.CHI_TIET_PHIEU_THUE_PHONGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.CHI_TIET_PHIEU_THUE_PHONGDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.CHI_TIET_PHIEU_THUE_PHONGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.CHI_TIET_PHIEU_THUE_PHONGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CHI_TIET_PHIEU_THUE_PHONG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_STT, string Original_MaPhieuThue, string Original_MaPhong, System.Nullable<System.DateTime> Original_NgayDangKy, System.Nullable<System.DateTime> Original_NgayNhan) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_STT));
            if ((Original_MaPhieuThue == null)) {
                throw new System.ArgumentNullException("Original_MaPhieuThue");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaPhieuThue));
            }
            if ((Original_MaPhong == null)) {
                throw new System.ArgumentNullException("Original_MaPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MaPhong));
            }
            if ((Original_NgayDangKy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_NgayDangKy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_NgayNhan.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_NgayNhan.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long STT, string MaPhieuThue, string MaPhong, System.Nullable<System.DateTime> NgayDangKy, System.Nullable<System.DateTime> NgayNhan) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(STT));
            if ((MaPhieuThue == null)) {
                throw new System.ArgumentNullException("MaPhieuThue");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaPhieuThue));
            }
            if ((MaPhong == null)) {
                throw new System.ArgumentNullException("MaPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MaPhong));
            }
            if ((NgayDangKy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(NgayDangKy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((NgayNhan.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(NgayNhan.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long STT, string MaPhieuThue, string MaPhong, System.Nullable<System.DateTime> NgayDangKy, System.Nullable<System.DateTime> NgayNhan, long Original_STT, string Original_MaPhieuThue, string Original_MaPhong, System.Nullable<System.DateTime> Original_NgayDangKy, System.Nullable<System.DateTime> Original_NgayNhan) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(STT));
            if ((MaPhieuThue == null)) {
                throw new System.ArgumentNullException("MaPhieuThue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaPhieuThue));
            }
            if ((MaPhong == null)) {
                throw new System.ArgumentNullException("MaPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MaPhong));
            }
            if ((NgayDangKy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(NgayDangKy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((NgayNhan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(NgayNhan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(Original_STT));
            if ((Original_MaPhieuThue == null)) {
                throw new System.ArgumentNullException("Original_MaPhieuThue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MaPhieuThue));
            }
            if ((Original_MaPhong == null)) {
                throw new System.ArgumentNullException("Original_MaPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MaPhong));
            }
            if ((Original_NgayDangKy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_NgayDangKy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((Original_NgayNhan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_NgayNhan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CHINH_SACH_TRA_PHONGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CHINH_SACH_TRA_PHONGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CHINH_SACH_TRA_PHONG";
            tableMapping.ColumnMappings.Add("MaChinhSach", "MaChinhSach");
            tableMapping.ColumnMappings.Add("ThoiGianQuiDinh", "ThoiGianQuiDinh");
            tableMapping.ColumnMappings.Add("PhuThu", "PhuThu");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CHINH_SACH_TRA_PHONG] WHERE (([MaChinhSach] = @Original_MaChinhSach) AND ((@IsNull_ThoiGianQuiDinh = 1 AND [ThoiGianQuiDinh] IS NULL) OR ([ThoiGianQuiDinh] = @Original_ThoiGianQuiDinh)) AND ((@IsNull_PhuThu = 1 AND [PhuThu] IS NULL) OR ([PhuThu] = @Original_PhuThu)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaChinhSach", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChinhSach", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ThoiGianQuiDinh", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ThoiGianQuiDinh", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ThoiGianQuiDinh", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ThoiGianQuiDinh", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PhuThu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PhuThu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PhuThu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "PhuThu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CHINH_SACH_TRA_PHONG] ([MaChinhSach], [ThoiGianQuiDinh], [PhuT" +
                "hu]) VALUES (@MaChinhSach, @ThoiGianQuiDinh, @PhuThu);\r\nSELECT MaChinhSach, Thoi" +
                "GianQuiDinh, PhuThu FROM CHINH_SACH_TRA_PHONG WHERE (MaChinhSach = @MaChinhSach)" +
                "";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaChinhSach", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChinhSach", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ThoiGianQuiDinh", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ThoiGianQuiDinh", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PhuThu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "PhuThu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CHINH_SACH_TRA_PHONG] SET [MaChinhSach] = @MaChinhSach, [ThoiGianQuiDinh] = @ThoiGianQuiDinh, [PhuThu] = @PhuThu WHERE (([MaChinhSach] = @Original_MaChinhSach) AND ((@IsNull_ThoiGianQuiDinh = 1 AND [ThoiGianQuiDinh] IS NULL) OR ([ThoiGianQuiDinh] = @Original_ThoiGianQuiDinh)) AND ((@IsNull_PhuThu = 1 AND [PhuThu] IS NULL) OR ([PhuThu] = @Original_PhuThu)));
SELECT MaChinhSach, ThoiGianQuiDinh, PhuThu FROM CHINH_SACH_TRA_PHONG WHERE (MaChinhSach = @MaChinhSach)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaChinhSach", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChinhSach", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ThoiGianQuiDinh", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ThoiGianQuiDinh", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PhuThu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "PhuThu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaChinhSach", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaChinhSach", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ThoiGianQuiDinh", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ThoiGianQuiDinh", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ThoiGianQuiDinh", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ThoiGianQuiDinh", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PhuThu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PhuThu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PhuThu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "PhuThu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaChinhSach, ThoiGianQuiDinh, PhuThu FROM dbo.CHINH_SACH_TRA_PHONG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.CHINH_SACH_TRA_PHONGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.CHINH_SACH_TRA_PHONGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.CHINH_SACH_TRA_PHONGDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.CHINH_SACH_TRA_PHONGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.CHINH_SACH_TRA_PHONGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CHINH_SACH_TRA_PHONG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaChinhSach, string Original_ThoiGianQuiDinh, System.Nullable<double> Original_PhuThu) {
            if ((Original_MaChinhSach == null)) {
                throw new System.ArgumentNullException("Original_MaChinhSach");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaChinhSach));
            }
            if ((Original_ThoiGianQuiDinh == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ThoiGianQuiDinh));
            }
            if ((Original_PhuThu.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_PhuThu.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaChinhSach, string ThoiGianQuiDinh, System.Nullable<double> PhuThu) {
            if ((MaChinhSach == null)) {
                throw new System.ArgumentNullException("MaChinhSach");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaChinhSach));
            }
            if ((ThoiGianQuiDinh == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ThoiGianQuiDinh));
            }
            if ((PhuThu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(PhuThu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaChinhSach, string ThoiGianQuiDinh, System.Nullable<double> PhuThu, string Original_MaChinhSach, string Original_ThoiGianQuiDinh, System.Nullable<double> Original_PhuThu) {
            if ((MaChinhSach == null)) {
                throw new System.ArgumentNullException("MaChinhSach");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaChinhSach));
            }
            if ((ThoiGianQuiDinh == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ThoiGianQuiDinh));
            }
            if ((PhuThu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(PhuThu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_MaChinhSach == null)) {
                throw new System.ArgumentNullException("Original_MaChinhSach");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_MaChinhSach));
            }
            if ((Original_ThoiGianQuiDinh == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_ThoiGianQuiDinh));
            }
            if ((Original_PhuThu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Original_PhuThu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DANH_SACH_SU_DUNG_DICH_VUTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DANH_SACH_SU_DUNG_DICH_VUTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DANH_SACH_SU_DUNG_DICH_VU";
            tableMapping.ColumnMappings.Add("MaSuDungDvu", "MaSuDungDvu");
            tableMapping.ColumnMappings.Add("MaDichVu", "MaDichVu");
            tableMapping.ColumnMappings.Add("MaNhanPhong", "MaNhanPhong");
            tableMapping.ColumnMappings.Add("SoLuong", "SoLuong");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DANH_SACH_SU_DUNG_DICH_VU] WHERE (([MaSuDungDvu] = @Original_MaSuDungDvu) AND ([MaDichVu] = @Original_MaDichVu) AND ([MaNhanPhong] = @Original_MaNhanPhong) AND ((@IsNull_SoLuong = 1 AND [SoLuong] IS NULL) OR ([SoLuong] = @Original_SoLuong)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaSuDungDvu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSuDungDvu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDichVu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoLuong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoLuong", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoLuong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoLuong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DANH_SACH_SU_DUNG_DICH_VU] ([MaSuDungDvu], [MaDichVu], [MaNhanPhong], [SoLuong]) VALUES (@MaSuDungDvu, @MaDichVu, @MaNhanPhong, @SoLuong);
SELECT MaSuDungDvu, MaDichVu, MaNhanPhong, SoLuong FROM DANH_SACH_SU_DUNG_DICH_VU WHERE (MaSuDungDvu = @MaSuDungDvu)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaSuDungDvu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSuDungDvu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDichVu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoLuong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoLuong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DANH_SACH_SU_DUNG_DICH_VU] SET [MaSuDungDvu] = @MaSuDungDvu, [MaDichVu] = @MaDichVu, [MaNhanPhong] = @MaNhanPhong, [SoLuong] = @SoLuong WHERE (([MaSuDungDvu] = @Original_MaSuDungDvu) AND ([MaDichVu] = @Original_MaDichVu) AND ([MaNhanPhong] = @Original_MaNhanPhong) AND ((@IsNull_SoLuong = 1 AND [SoLuong] IS NULL) OR ([SoLuong] = @Original_SoLuong)));
SELECT MaSuDungDvu, MaDichVu, MaNhanPhong, SoLuong FROM DANH_SACH_SU_DUNG_DICH_VU WHERE (MaSuDungDvu = @MaSuDungDvu)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaSuDungDvu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSuDungDvu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDichVu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoLuong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoLuong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaSuDungDvu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSuDungDvu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDichVu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoLuong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoLuong", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoLuong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoLuong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaSuDungDvu, MaDichVu, MaNhanPhong, SoLuong FROM dbo.DANH_SACH_SU_DUNG_DIC" +
                "H_VU";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.DANH_SACH_SU_DUNG_DICH_VUDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.DANH_SACH_SU_DUNG_DICH_VUDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.DANH_SACH_SU_DUNG_DICH_VUDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.DANH_SACH_SU_DUNG_DICH_VUDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.DANH_SACH_SU_DUNG_DICH_VUDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DANH_SACH_SU_DUNG_DICH_VU");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaSuDungDvu, string Original_MaDichVu, string Original_MaNhanPhong, System.Nullable<int> Original_SoLuong) {
            if ((Original_MaSuDungDvu == null)) {
                throw new System.ArgumentNullException("Original_MaSuDungDvu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaSuDungDvu));
            }
            if ((Original_MaDichVu == null)) {
                throw new System.ArgumentNullException("Original_MaDichVu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaDichVu));
            }
            if ((Original_MaNhanPhong == null)) {
                throw new System.ArgumentNullException("Original_MaNhanPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MaNhanPhong));
            }
            if ((Original_SoLuong.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_SoLuong.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaSuDungDvu, string MaDichVu, string MaNhanPhong, System.Nullable<int> SoLuong) {
            if ((MaSuDungDvu == null)) {
                throw new System.ArgumentNullException("MaSuDungDvu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaSuDungDvu));
            }
            if ((MaDichVu == null)) {
                throw new System.ArgumentNullException("MaDichVu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaDichVu));
            }
            if ((MaNhanPhong == null)) {
                throw new System.ArgumentNullException("MaNhanPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MaNhanPhong));
            }
            if ((SoLuong.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(SoLuong.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaSuDungDvu, string MaDichVu, string MaNhanPhong, System.Nullable<int> SoLuong, string Original_MaSuDungDvu, string Original_MaDichVu, string Original_MaNhanPhong, System.Nullable<int> Original_SoLuong) {
            if ((MaSuDungDvu == null)) {
                throw new System.ArgumentNullException("MaSuDungDvu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaSuDungDvu));
            }
            if ((MaDichVu == null)) {
                throw new System.ArgumentNullException("MaDichVu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaDichVu));
            }
            if ((MaNhanPhong == null)) {
                throw new System.ArgumentNullException("MaNhanPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MaNhanPhong));
            }
            if ((SoLuong.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(SoLuong.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Original_MaSuDungDvu == null)) {
                throw new System.ArgumentNullException("Original_MaSuDungDvu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_MaSuDungDvu));
            }
            if ((Original_MaDichVu == null)) {
                throw new System.ArgumentNullException("Original_MaDichVu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_MaDichVu));
            }
            if ((Original_MaNhanPhong == null)) {
                throw new System.ArgumentNullException("Original_MaNhanPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MaNhanPhong));
            }
            if ((Original_SoLuong.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_SoLuong.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DICH_VUTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DICH_VUTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DICH_VU";
            tableMapping.ColumnMappings.Add("MaDichVu", "MaDichVu");
            tableMapping.ColumnMappings.Add("MaLoaiDichVu", "MaLoaiDichVu");
            tableMapping.ColumnMappings.Add("MaDonVi", "MaDonVi");
            tableMapping.ColumnMappings.Add("DonGia", "DonGia");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[DICH_VU] WHERE (([MaDichVu] = @Original_MaDichVu) AND ([MaLoai" +
                "DichVu] = @Original_MaLoaiDichVu) AND ([MaDonVi] = @Original_MaDonVi) AND ((@IsN" +
                "ull_DonGia = 1 AND [DonGia] IS NULL) OR ([DonGia] = @Original_DonGia)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDichVu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiDichVu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaDonVi", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDonVi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DonGia", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DonGia", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DonGia", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "DonGia", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[DICH_VU] ([MaDichVu], [MaLoaiDichVu], [MaDonVi], [DonGia]) VAL" +
                "UES (@MaDichVu, @MaLoaiDichVu, @MaDonVi, @DonGia);\r\nSELECT MaDichVu, MaLoaiDichV" +
                "u, MaDonVi, DonGia FROM DICH_VU WHERE (MaDichVu = @MaDichVu)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDichVu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiDichVu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaDonVi", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDonVi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DonGia", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "DonGia", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DICH_VU] SET [MaDichVu] = @MaDichVu, [MaLoaiDichVu] = @MaLoaiDichVu, [MaDonVi] = @MaDonVi, [DonGia] = @DonGia WHERE (([MaDichVu] = @Original_MaDichVu) AND ([MaLoaiDichVu] = @Original_MaLoaiDichVu) AND ([MaDonVi] = @Original_MaDonVi) AND ((@IsNull_DonGia = 1 AND [DonGia] IS NULL) OR ([DonGia] = @Original_DonGia)));
SELECT MaDichVu, MaLoaiDichVu, MaDonVi, DonGia FROM DICH_VU WHERE (MaDichVu = @MaDichVu)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDichVu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiDichVu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaDonVi", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDonVi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DonGia", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "DonGia", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDichVu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiDichVu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaDonVi", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDonVi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DonGia", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DonGia", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DonGia", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "DonGia", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaDichVu, MaLoaiDichVu, MaDonVi, DonGia FROM dbo.DICH_VU";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.DICH_VUDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.DICH_VUDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.DICH_VUDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.DICH_VUDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.DICH_VUDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DICH_VU");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaDichVu, string Original_MaLoaiDichVu, string Original_MaDonVi, System.Nullable<double> Original_DonGia) {
            if ((Original_MaDichVu == null)) {
                throw new System.ArgumentNullException("Original_MaDichVu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaDichVu));
            }
            if ((Original_MaLoaiDichVu == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiDichVu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaLoaiDichVu));
            }
            if ((Original_MaDonVi == null)) {
                throw new System.ArgumentNullException("Original_MaDonVi");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MaDonVi));
            }
            if ((Original_DonGia.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_DonGia.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaDichVu, string MaLoaiDichVu, string MaDonVi, System.Nullable<double> DonGia) {
            if ((MaDichVu == null)) {
                throw new System.ArgumentNullException("MaDichVu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaDichVu));
            }
            if ((MaLoaiDichVu == null)) {
                throw new System.ArgumentNullException("MaLoaiDichVu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaLoaiDichVu));
            }
            if ((MaDonVi == null)) {
                throw new System.ArgumentNullException("MaDonVi");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MaDonVi));
            }
            if ((DonGia.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(DonGia.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaDichVu, string MaLoaiDichVu, string MaDonVi, System.Nullable<double> DonGia, string Original_MaDichVu, string Original_MaLoaiDichVu, string Original_MaDonVi, System.Nullable<double> Original_DonGia) {
            if ((MaDichVu == null)) {
                throw new System.ArgumentNullException("MaDichVu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaDichVu));
            }
            if ((MaLoaiDichVu == null)) {
                throw new System.ArgumentNullException("MaLoaiDichVu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaLoaiDichVu));
            }
            if ((MaDonVi == null)) {
                throw new System.ArgumentNullException("MaDonVi");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MaDonVi));
            }
            if ((DonGia.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(DonGia.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Original_MaDichVu == null)) {
                throw new System.ArgumentNullException("Original_MaDichVu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_MaDichVu));
            }
            if ((Original_MaLoaiDichVu == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiDichVu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_MaLoaiDichVu));
            }
            if ((Original_MaDonVi == null)) {
                throw new System.ArgumentNullException("Original_MaDonVi");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MaDonVi));
            }
            if ((Original_DonGia.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Original_DonGia.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DON_VITableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DON_VITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DON_VI";
            tableMapping.ColumnMappings.Add("MaDonVi", "MaDonVi");
            tableMapping.ColumnMappings.Add("TenDonVi", "TenDonVi");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[DON_VI] WHERE (([MaDonVi] = @Original_MaDonVi) AND ((@IsNull_T" +
                "enDonVi = 1 AND [TenDonVi] IS NULL) OR ([TenDonVi] = @Original_TenDonVi)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaDonVi", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDonVi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TenDonVi", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TenDonVi", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenDonVi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenDonVi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[DON_VI] ([MaDonVi], [TenDonVi]) VALUES (@MaDonVi, @TenDonVi);\r" +
                "\nSELECT MaDonVi, TenDonVi FROM DON_VI WHERE (MaDonVi = @MaDonVi)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaDonVi", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDonVi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenDonVi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenDonVi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DON_VI] SET [MaDonVi] = @MaDonVi, [TenDonVi] = @TenDonVi WHERE (([MaDonVi] = @Original_MaDonVi) AND ((@IsNull_TenDonVi = 1 AND [TenDonVi] IS NULL) OR ([TenDonVi] = @Original_TenDonVi)));
SELECT MaDonVi, TenDonVi FROM DON_VI WHERE (MaDonVi = @MaDonVi)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaDonVi", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDonVi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenDonVi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenDonVi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaDonVi", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaDonVi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TenDonVi", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TenDonVi", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenDonVi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenDonVi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaDonVi, TenDonVi FROM dbo.DON_VI";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.DON_VIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.DON_VIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.DON_VIDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.DON_VIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.DON_VIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DON_VI");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaDonVi, string Original_TenDonVi) {
            if ((Original_MaDonVi == null)) {
                throw new System.ArgumentNullException("Original_MaDonVi");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaDonVi));
            }
            if ((Original_TenDonVi == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TenDonVi));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaDonVi, string TenDonVi) {
            if ((MaDonVi == null)) {
                throw new System.ArgumentNullException("MaDonVi");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaDonVi));
            }
            if ((TenDonVi == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TenDonVi));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaDonVi, string TenDonVi, string Original_MaDonVi, string Original_TenDonVi) {
            if ((MaDonVi == null)) {
                throw new System.ArgumentNullException("MaDonVi");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaDonVi));
            }
            if ((TenDonVi == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TenDonVi));
            }
            if ((Original_MaDonVi == null)) {
                throw new System.ArgumentNullException("Original_MaDonVi");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_MaDonVi));
            }
            if ((Original_TenDonVi == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_TenDonVi));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HOA_DONTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HOA_DONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HOA_DON";
            tableMapping.ColumnMappings.Add("MaHoaDon", "MaHoaDon");
            tableMapping.ColumnMappings.Add("NhanVienLap", "NhanVienLap");
            tableMapping.ColumnMappings.Add("MaKhachHang", "MaKhachHang");
            tableMapping.ColumnMappings.Add("MaNhanPhong", "MaNhanPhong");
            tableMapping.ColumnMappings.Add("TongTien", "TongTien");
            tableMapping.ColumnMappings.Add("NgayLap", "NgayLap");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[HOA_DON] WHERE (([MaHoaDon] = @Original_MaHoaDon) AND ((@IsNull_NhanVienLap = 1 AND [NhanVienLap] IS NULL) OR ([NhanVienLap] = @Original_NhanVienLap)) AND ([MaKhachHang] = @Original_MaKhachHang) AND ([MaNhanPhong] = @Original_MaNhanPhong) AND ((@IsNull_TongTien = 1 AND [TongTien] IS NULL) OR ([TongTien] = @Original_TongTien)) AND ([NgayLap] = @Original_NgayLap))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaHoaDon", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaHoaDon", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NhanVienLap", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NhanVienLap", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NhanVienLap", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NhanVienLap", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TongTien", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TongTien", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TongTien", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TongTien", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayLap", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayLap", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[HOA_DON] ([MaHoaDon], [NhanVienLap], [MaKhachHang], [MaNhanPhong], [TongTien], [NgayLap]) VALUES (@MaHoaDon, @NhanVienLap, @MaKhachHang, @MaNhanPhong, @TongTien, @NgayLap);
SELECT MaHoaDon, NhanVienLap, MaKhachHang, MaNhanPhong, TongTien, NgayLap FROM HOA_DON WHERE (MaHoaDon = @MaHoaDon)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaHoaDon", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaHoaDon", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NhanVienLap", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NhanVienLap", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TongTien", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TongTien", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayLap", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayLap", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[HOA_DON] SET [MaHoaDon] = @MaHoaDon, [NhanVienLap] = @NhanVienLap, [MaKhachHang] = @MaKhachHang, [MaNhanPhong] = @MaNhanPhong, [TongTien] = @TongTien, [NgayLap] = @NgayLap WHERE (([MaHoaDon] = @Original_MaHoaDon) AND ((@IsNull_NhanVienLap = 1 AND [NhanVienLap] IS NULL) OR ([NhanVienLap] = @Original_NhanVienLap)) AND ([MaKhachHang] = @Original_MaKhachHang) AND ([MaNhanPhong] = @Original_MaNhanPhong) AND ((@IsNull_TongTien = 1 AND [TongTien] IS NULL) OR ([TongTien] = @Original_TongTien)) AND ([NgayLap] = @Original_NgayLap));
SELECT MaHoaDon, NhanVienLap, MaKhachHang, MaNhanPhong, TongTien, NgayLap FROM HOA_DON WHERE (MaHoaDon = @MaHoaDon)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaHoaDon", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaHoaDon", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NhanVienLap", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NhanVienLap", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TongTien", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TongTien", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayLap", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayLap", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaHoaDon", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaHoaDon", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NhanVienLap", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NhanVienLap", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NhanVienLap", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NhanVienLap", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TongTien", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TongTien", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TongTien", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TongTien", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayLap", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayLap", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaHoaDon, NhanVienLap, MaKhachHang, MaNhanPhong, TongTien, NgayLap FROM db" +
                "o.HOA_DON";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.HOA_DONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.HOA_DONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.HOA_DONDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.HOA_DONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.HOA_DONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HOA_DON");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaHoaDon, string Original_NhanVienLap, string Original_MaKhachHang, string Original_MaNhanPhong, System.Nullable<double> Original_TongTien, System.DateTime Original_NgayLap) {
            if ((Original_MaHoaDon == null)) {
                throw new System.ArgumentNullException("Original_MaHoaDon");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaHoaDon));
            }
            if ((Original_NhanVienLap == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NhanVienLap));
            }
            if ((Original_MaKhachHang == null)) {
                throw new System.ArgumentNullException("Original_MaKhachHang");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_MaKhachHang));
            }
            if ((Original_MaNhanPhong == null)) {
                throw new System.ArgumentNullException("Original_MaNhanPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_MaNhanPhong));
            }
            if ((Original_TongTien.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_TongTien.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_NgayLap));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaHoaDon, string NhanVienLap, string MaKhachHang, string MaNhanPhong, System.Nullable<double> TongTien, System.DateTime NgayLap) {
            if ((MaHoaDon == null)) {
                throw new System.ArgumentNullException("MaHoaDon");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaHoaDon));
            }
            if ((NhanVienLap == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NhanVienLap));
            }
            if ((MaKhachHang == null)) {
                throw new System.ArgumentNullException("MaKhachHang");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MaKhachHang));
            }
            if ((MaNhanPhong == null)) {
                throw new System.ArgumentNullException("MaNhanPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MaNhanPhong));
            }
            if ((TongTien.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(TongTien.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(NgayLap));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaHoaDon, string NhanVienLap, string MaKhachHang, string MaNhanPhong, System.Nullable<double> TongTien, System.DateTime NgayLap, string Original_MaHoaDon, string Original_NhanVienLap, string Original_MaKhachHang, string Original_MaNhanPhong, System.Nullable<double> Original_TongTien, System.DateTime Original_NgayLap) {
            if ((MaHoaDon == null)) {
                throw new System.ArgumentNullException("MaHoaDon");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaHoaDon));
            }
            if ((NhanVienLap == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NhanVienLap));
            }
            if ((MaKhachHang == null)) {
                throw new System.ArgumentNullException("MaKhachHang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MaKhachHang));
            }
            if ((MaNhanPhong == null)) {
                throw new System.ArgumentNullException("MaNhanPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MaNhanPhong));
            }
            if ((TongTien.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(TongTien.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(NgayLap));
            if ((Original_MaHoaDon == null)) {
                throw new System.ArgumentNullException("Original_MaHoaDon");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MaHoaDon));
            }
            if ((Original_NhanVienLap == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_NhanVienLap));
            }
            if ((Original_MaKhachHang == null)) {
                throw new System.ArgumentNullException("Original_MaKhachHang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_MaKhachHang));
            }
            if ((Original_MaNhanPhong == null)) {
                throw new System.ArgumentNullException("Original_MaNhanPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_MaNhanPhong));
            }
            if ((Original_TongTien.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Original_TongTien.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_NgayLap));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KHACH_HANGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KHACH_HANGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KHACH_HANG";
            tableMapping.ColumnMappings.Add("MaKhachHang", "MaKhachHang");
            tableMapping.ColumnMappings.Add("TenKhachHang", "TenKhachHang");
            tableMapping.ColumnMappings.Add("CMND", "CMND");
            tableMapping.ColumnMappings.Add("GioiTinh", "GioiTinh");
            tableMapping.ColumnMappings.Add("DiaChi", "DiaChi");
            tableMapping.ColumnMappings.Add("DienThoai", "DienThoai");
            tableMapping.ColumnMappings.Add("QuocTich", "QuocTich");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[KHACH_HANG] WHERE (([MaKhachHang] = @Original_MaKhachHang) AND ((@IsNull_TenKhachHang = 1 AND [TenKhachHang] IS NULL) OR ([TenKhachHang] = @Original_TenKhachHang)) AND ((@IsNull_CMND = 1 AND [CMND] IS NULL) OR ([CMND] = @Original_CMND)) AND ((@IsNull_GioiTinh = 1 AND [GioiTinh] IS NULL) OR ([GioiTinh] = @Original_GioiTinh)) AND ((@IsNull_DiaChi = 1 AND [DiaChi] IS NULL) OR ([DiaChi] = @Original_DiaChi)) AND ((@IsNull_DienThoai = 1 AND [DienThoai] IS NULL) OR ([DienThoai] = @Original_DienThoai)) AND ((@IsNull_QuocTich = 1 AND [QuocTich] IS NULL) OR ([QuocTich] = @Original_QuocTich)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TenKhachHang", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TenKhachHang", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenKhachHang", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenKhachHang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CMND", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CMND", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GioiTinh", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GioiTinh", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GioiTinh", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GioiTinh", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DiaChi", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaChi", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DiaChi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaChi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DienThoai", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DienThoai", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_QuocTich", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "QuocTich", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_QuocTich", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "QuocTich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[KHACH_HANG] ([MaKhachHang], [TenKhachHang], [CMND], [GioiTinh], [DiaChi], [DienThoai], [QuocTich]) VALUES (@MaKhachHang, @TenKhachHang, @CMND, @GioiTinh, @DiaChi, @DienThoai, @QuocTich);
SELECT MaKhachHang, TenKhachHang, CMND, GioiTinh, DiaChi, DienThoai, QuocTich FROM KHACH_HANG WHERE (MaKhachHang = @MaKhachHang)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenKhachHang", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenKhachHang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CMND", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GioiTinh", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GioiTinh", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DiaChi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaChi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DienThoai", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@QuocTich", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "QuocTich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[KHACH_HANG] SET [MaKhachHang] = @MaKhachHang, [TenKhachHang] = @TenKhachHang, [CMND] = @CMND, [GioiTinh] = @GioiTinh, [DiaChi] = @DiaChi, [DienThoai] = @DienThoai, [QuocTich] = @QuocTich WHERE (([MaKhachHang] = @Original_MaKhachHang) AND ((@IsNull_TenKhachHang = 1 AND [TenKhachHang] IS NULL) OR ([TenKhachHang] = @Original_TenKhachHang)) AND ((@IsNull_CMND = 1 AND [CMND] IS NULL) OR ([CMND] = @Original_CMND)) AND ((@IsNull_GioiTinh = 1 AND [GioiTinh] IS NULL) OR ([GioiTinh] = @Original_GioiTinh)) AND ((@IsNull_DiaChi = 1 AND [DiaChi] IS NULL) OR ([DiaChi] = @Original_DiaChi)) AND ((@IsNull_DienThoai = 1 AND [DienThoai] IS NULL) OR ([DienThoai] = @Original_DienThoai)) AND ((@IsNull_QuocTich = 1 AND [QuocTich] IS NULL) OR ([QuocTich] = @Original_QuocTich)));
SELECT MaKhachHang, TenKhachHang, CMND, GioiTinh, DiaChi, DienThoai, QuocTich FROM KHACH_HANG WHERE (MaKhachHang = @MaKhachHang)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenKhachHang", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenKhachHang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CMND", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GioiTinh", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GioiTinh", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DiaChi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaChi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DienThoai", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@QuocTich", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "QuocTich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TenKhachHang", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TenKhachHang", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenKhachHang", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenKhachHang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CMND", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CMND", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GioiTinh", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GioiTinh", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GioiTinh", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GioiTinh", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DiaChi", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaChi", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DiaChi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaChi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DienThoai", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DienThoai", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_QuocTich", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "QuocTich", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_QuocTich", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "QuocTich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaKhachHang, TenKhachHang, CMND, GioiTinh, DiaChi, DienThoai, QuocTich FRO" +
                "M dbo.KHACH_HANG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.KHACH_HANGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.KHACH_HANGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.KHACH_HANGDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.KHACH_HANGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.KHACH_HANGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "KHACH_HANG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaKhachHang, string Original_TenKhachHang, string Original_CMND, string Original_GioiTinh, string Original_DiaChi, System.Nullable<int> Original_DienThoai, string Original_QuocTich) {
            if ((Original_MaKhachHang == null)) {
                throw new System.ArgumentNullException("Original_MaKhachHang");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaKhachHang));
            }
            if ((Original_TenKhachHang == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TenKhachHang));
            }
            if ((Original_CMND == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CMND));
            }
            if ((Original_GioiTinh == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_GioiTinh));
            }
            if ((Original_DiaChi == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DiaChi));
            }
            if ((Original_DienThoai.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_DienThoai.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_QuocTich == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_QuocTich));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaKhachHang, string TenKhachHang, string CMND, string GioiTinh, string DiaChi, System.Nullable<int> DienThoai, string QuocTich) {
            if ((MaKhachHang == null)) {
                throw new System.ArgumentNullException("MaKhachHang");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaKhachHang));
            }
            if ((TenKhachHang == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TenKhachHang));
            }
            if ((CMND == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CMND));
            }
            if ((GioiTinh == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(GioiTinh));
            }
            if ((DiaChi == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DiaChi));
            }
            if ((DienThoai.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(DienThoai.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((QuocTich == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(QuocTich));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaKhachHang, string TenKhachHang, string CMND, string GioiTinh, string DiaChi, System.Nullable<int> DienThoai, string QuocTich, string Original_MaKhachHang, string Original_TenKhachHang, string Original_CMND, string Original_GioiTinh, string Original_DiaChi, System.Nullable<int> Original_DienThoai, string Original_QuocTich) {
            if ((MaKhachHang == null)) {
                throw new System.ArgumentNullException("MaKhachHang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaKhachHang));
            }
            if ((TenKhachHang == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TenKhachHang));
            }
            if ((CMND == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CMND));
            }
            if ((GioiTinh == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(GioiTinh));
            }
            if ((DiaChi == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DiaChi));
            }
            if ((DienThoai.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(DienThoai.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((QuocTich == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(QuocTich));
            }
            if ((Original_MaKhachHang == null)) {
                throw new System.ArgumentNullException("Original_MaKhachHang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MaKhachHang));
            }
            if ((Original_TenKhachHang == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_TenKhachHang));
            }
            if ((Original_CMND == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_CMND));
            }
            if ((Original_GioiTinh == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_GioiTinh));
            }
            if ((Original_DiaChi == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_DiaChi));
            }
            if ((Original_DienThoai.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_DienThoai.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((Original_QuocTich == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_QuocTich));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LOAI_DICH_VUTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LOAI_DICH_VUTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LOAI_DICH_VU";
            tableMapping.ColumnMappings.Add("MaLoaiDichVu", "MaLoaiDichVu");
            tableMapping.ColumnMappings.Add("TenLoaiDichVu", "TenLoaiDichVu");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[LOAI_DICH_VU] WHERE (([MaLoaiDichVu] = @Original_MaLoaiDichVu)" +
                " AND ((@IsNull_TenLoaiDichVu = 1 AND [TenLoaiDichVu] IS NULL) OR ([TenLoaiDichVu" +
                "] = @Original_TenLoaiDichVu)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiDichVu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TenLoaiDichVu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiDichVu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenLoaiDichVu", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiDichVu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[LOAI_DICH_VU] ([MaLoaiDichVu], [TenLoaiDichVu]) VALUES (@MaLoa" +
                "iDichVu, @TenLoaiDichVu);\r\nSELECT MaLoaiDichVu, TenLoaiDichVu FROM LOAI_DICH_VU " +
                "WHERE (MaLoaiDichVu = @MaLoaiDichVu)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiDichVu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenLoaiDichVu", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiDichVu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LOAI_DICH_VU] SET [MaLoaiDichVu] = @MaLoaiDichVu, [TenLoaiDichVu] = @TenLoaiDichVu WHERE (([MaLoaiDichVu] = @Original_MaLoaiDichVu) AND ((@IsNull_TenLoaiDichVu = 1 AND [TenLoaiDichVu] IS NULL) OR ([TenLoaiDichVu] = @Original_TenLoaiDichVu)));
SELECT MaLoaiDichVu, TenLoaiDichVu FROM LOAI_DICH_VU WHERE (MaLoaiDichVu = @MaLoaiDichVu)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiDichVu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenLoaiDichVu", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiDichVu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiDichVu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiDichVu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TenLoaiDichVu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiDichVu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenLoaiDichVu", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiDichVu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaLoaiDichVu, TenLoaiDichVu FROM dbo.LOAI_DICH_VU";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.LOAI_DICH_VUDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.LOAI_DICH_VUDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.LOAI_DICH_VUDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.LOAI_DICH_VUDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.LOAI_DICH_VUDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "LOAI_DICH_VU");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaLoaiDichVu, string Original_TenLoaiDichVu) {
            if ((Original_MaLoaiDichVu == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiDichVu");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaLoaiDichVu));
            }
            if ((Original_TenLoaiDichVu == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TenLoaiDichVu));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaLoaiDichVu, string TenLoaiDichVu) {
            if ((MaLoaiDichVu == null)) {
                throw new System.ArgumentNullException("MaLoaiDichVu");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaLoaiDichVu));
            }
            if ((TenLoaiDichVu == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TenLoaiDichVu));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaLoaiDichVu, string TenLoaiDichVu, string Original_MaLoaiDichVu, string Original_TenLoaiDichVu) {
            if ((MaLoaiDichVu == null)) {
                throw new System.ArgumentNullException("MaLoaiDichVu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaLoaiDichVu));
            }
            if ((TenLoaiDichVu == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TenLoaiDichVu));
            }
            if ((Original_MaLoaiDichVu == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiDichVu");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_MaLoaiDichVu));
            }
            if ((Original_TenLoaiDichVu == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_TenLoaiDichVu));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LOAI_NGUOI_DUNGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LOAI_NGUOI_DUNGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LOAI_NGUOI_DUNG";
            tableMapping.ColumnMappings.Add("LoaiNguoiDung", "LoaiNguoiDung");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[LOAI_NGUOI_DUNG] WHERE (([LoaiNguoiDung] = @Original_LoaiNguoi" +
                "Dung))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LoaiNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LoaiNguoiDung", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[LOAI_NGUOI_DUNG] ([LoaiNguoiDung]) VALUES (@LoaiNguoiDung);\r\nS" +
                "ELECT LoaiNguoiDung FROM LOAI_NGUOI_DUNG WHERE (LoaiNguoiDung = @LoaiNguoiDung)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LoaiNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LoaiNguoiDung", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[LOAI_NGUOI_DUNG] SET [LoaiNguoiDung] = @LoaiNguoiDung WHERE (([Loai" +
                "NguoiDung] = @Original_LoaiNguoiDung));\r\nSELECT LoaiNguoiDung FROM LOAI_NGUOI_DU" +
                "NG WHERE (LoaiNguoiDung = @LoaiNguoiDung)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LoaiNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LoaiNguoiDung", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LoaiNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LoaiNguoiDung", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT LoaiNguoiDung FROM dbo.LOAI_NGUOI_DUNG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.LOAI_NGUOI_DUNGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.LOAI_NGUOI_DUNGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.LOAI_NGUOI_DUNGDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.LOAI_NGUOI_DUNGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.LOAI_NGUOI_DUNGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "LOAI_NGUOI_DUNG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_LoaiNguoiDung) {
            if ((Original_LoaiNguoiDung == null)) {
                throw new System.ArgumentNullException("Original_LoaiNguoiDung");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_LoaiNguoiDung));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string LoaiNguoiDung) {
            if ((LoaiNguoiDung == null)) {
                throw new System.ArgumentNullException("LoaiNguoiDung");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(LoaiNguoiDung));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string LoaiNguoiDung, string Original_LoaiNguoiDung) {
            if ((LoaiNguoiDung == null)) {
                throw new System.ArgumentNullException("LoaiNguoiDung");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(LoaiNguoiDung));
            }
            if ((Original_LoaiNguoiDung == null)) {
                throw new System.ArgumentNullException("Original_LoaiNguoiDung");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Original_LoaiNguoiDung));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LOAI_PHONGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LOAI_PHONGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LOAI_PHONG";
            tableMapping.ColumnMappings.Add("MaLoaiPhong", "MaLoaiPhong");
            tableMapping.ColumnMappings.Add("TenLoaiPhong", "TenLoaiPhong");
            tableMapping.ColumnMappings.Add("DonGia", "DonGia");
            tableMapping.ColumnMappings.Add("SoNguoiChuan", "SoNguoiChuan");
            tableMapping.ColumnMappings.Add("SoNguoiToiDa", "SoNguoiToiDa");
            tableMapping.ColumnMappings.Add("TyLeTang", "TyLeTang");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[LOAI_PHONG] WHERE (([MaLoaiPhong] = @Original_MaLoaiPhong) AND ((@IsNull_TenLoaiPhong = 1 AND [TenLoaiPhong] IS NULL) OR ([TenLoaiPhong] = @Original_TenLoaiPhong)) AND ((@IsNull_DonGia = 1 AND [DonGia] IS NULL) OR ([DonGia] = @Original_DonGia)) AND ((@IsNull_SoNguoiChuan = 1 AND [SoNguoiChuan] IS NULL) OR ([SoNguoiChuan] = @Original_SoNguoiChuan)) AND ((@IsNull_SoNguoiToiDa = 1 AND [SoNguoiToiDa] IS NULL) OR ([SoNguoiToiDa] = @Original_SoNguoiToiDa)) AND ((@IsNull_TyLeTang = 1 AND [TyLeTang] IS NULL) OR ([TyLeTang] = @Original_TyLeTang)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TenLoaiPhong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiPhong", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenLoaiPhong", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DonGia", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DonGia", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DonGia", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "DonGia", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoNguoiChuan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNguoiChuan", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoNguoiChuan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNguoiChuan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoNguoiToiDa", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNguoiToiDa", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoNguoiToiDa", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNguoiToiDa", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TyLeTang", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLeTang", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TyLeTang", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLeTang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LOAI_PHONG] ([MaLoaiPhong], [TenLoaiPhong], [DonGia], [SoNguoiChuan], [SoNguoiToiDa], [TyLeTang]) VALUES (@MaLoaiPhong, @TenLoaiPhong, @DonGia, @SoNguoiChuan, @SoNguoiToiDa, @TyLeTang);
SELECT MaLoaiPhong, TenLoaiPhong, DonGia, SoNguoiChuan, SoNguoiToiDa, TyLeTang FROM LOAI_PHONG WHERE (MaLoaiPhong = @MaLoaiPhong)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenLoaiPhong", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DonGia", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "DonGia", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoNguoiChuan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNguoiChuan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoNguoiToiDa", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNguoiToiDa", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TyLeTang", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLeTang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LOAI_PHONG] SET [MaLoaiPhong] = @MaLoaiPhong, [TenLoaiPhong] = @TenLoaiPhong, [DonGia] = @DonGia, [SoNguoiChuan] = @SoNguoiChuan, [SoNguoiToiDa] = @SoNguoiToiDa, [TyLeTang] = @TyLeTang WHERE (([MaLoaiPhong] = @Original_MaLoaiPhong) AND ((@IsNull_TenLoaiPhong = 1 AND [TenLoaiPhong] IS NULL) OR ([TenLoaiPhong] = @Original_TenLoaiPhong)) AND ((@IsNull_DonGia = 1 AND [DonGia] IS NULL) OR ([DonGia] = @Original_DonGia)) AND ((@IsNull_SoNguoiChuan = 1 AND [SoNguoiChuan] IS NULL) OR ([SoNguoiChuan] = @Original_SoNguoiChuan)) AND ((@IsNull_SoNguoiToiDa = 1 AND [SoNguoiToiDa] IS NULL) OR ([SoNguoiToiDa] = @Original_SoNguoiToiDa)) AND ((@IsNull_TyLeTang = 1 AND [TyLeTang] IS NULL) OR ([TyLeTang] = @Original_TyLeTang)));
SELECT MaLoaiPhong, TenLoaiPhong, DonGia, SoNguoiChuan, SoNguoiToiDa, TyLeTang FROM LOAI_PHONG WHERE (MaLoaiPhong = @MaLoaiPhong)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenLoaiPhong", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DonGia", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "DonGia", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoNguoiChuan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNguoiChuan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoNguoiToiDa", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNguoiToiDa", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TyLeTang", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLeTang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TenLoaiPhong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiPhong", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenLoaiPhong", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DonGia", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DonGia", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DonGia", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "DonGia", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoNguoiChuan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNguoiChuan", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoNguoiChuan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNguoiChuan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoNguoiToiDa", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNguoiToiDa", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoNguoiToiDa", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoNguoiToiDa", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TyLeTang", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLeTang", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TyLeTang", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "TyLeTang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaLoaiPhong, TenLoaiPhong, DonGia, SoNguoiChuan, SoNguoiToiDa, TyLeTang FR" +
                "OM dbo.LOAI_PHONG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.LOAI_PHONGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.LOAI_PHONGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.LOAI_PHONGDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.LOAI_PHONGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.LOAI_PHONGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "LOAI_PHONG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaLoaiPhong, string Original_TenLoaiPhong, System.Nullable<double> Original_DonGia, System.Nullable<int> Original_SoNguoiChuan, System.Nullable<int> Original_SoNguoiToiDa, System.Nullable<double> Original_TyLeTang) {
            if ((Original_MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaLoaiPhong));
            }
            if ((Original_TenLoaiPhong == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TenLoaiPhong));
            }
            if ((Original_DonGia.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_DonGia.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_SoNguoiChuan.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_SoNguoiChuan.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_SoNguoiToiDa.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_SoNguoiToiDa.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_TyLeTang.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_TyLeTang.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaLoaiPhong, string TenLoaiPhong, System.Nullable<double> DonGia, System.Nullable<int> SoNguoiChuan, System.Nullable<int> SoNguoiToiDa, System.Nullable<double> TyLeTang) {
            if ((MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("MaLoaiPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaLoaiPhong));
            }
            if ((TenLoaiPhong == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TenLoaiPhong));
            }
            if ((DonGia.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(DonGia.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((SoNguoiChuan.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(SoNguoiChuan.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((SoNguoiToiDa.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(SoNguoiToiDa.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((TyLeTang.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(TyLeTang.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaLoaiPhong, string TenLoaiPhong, System.Nullable<double> DonGia, System.Nullable<int> SoNguoiChuan, System.Nullable<int> SoNguoiToiDa, System.Nullable<double> TyLeTang, string Original_MaLoaiPhong, string Original_TenLoaiPhong, System.Nullable<double> Original_DonGia, System.Nullable<int> Original_SoNguoiChuan, System.Nullable<int> Original_SoNguoiToiDa, System.Nullable<double> Original_TyLeTang) {
            if ((MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("MaLoaiPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaLoaiPhong));
            }
            if ((TenLoaiPhong == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TenLoaiPhong));
            }
            if ((DonGia.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(DonGia.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((SoNguoiChuan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(SoNguoiChuan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((SoNguoiToiDa.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(SoNguoiToiDa.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((TyLeTang.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(TyLeTang.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MaLoaiPhong));
            }
            if ((Original_TenLoaiPhong == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_TenLoaiPhong));
            }
            if ((Original_DonGia.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_DonGia.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_SoNguoiChuan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_SoNguoiChuan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_SoNguoiToiDa.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_SoNguoiToiDa.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_TyLeTang.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Original_TyLeTang.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LOAI_TINH_TRANGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LOAI_TINH_TRANGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LOAI_TINH_TRANG";
            tableMapping.ColumnMappings.Add("MaLoaiTinhTrangPhong", "MaLoaiTinhTrangPhong");
            tableMapping.ColumnMappings.Add("TenLoaiTinhTrang", "TenLoaiTinhTrang");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[LOAI_TINH_TRANG] WHERE (([MaLoaiTinhTrangPhong] = @Original_Ma" +
                "LoaiTinhTrangPhong) AND ((@IsNull_TenLoaiTinhTrang = 1 AND [TenLoaiTinhTrang] IS" +
                " NULL) OR ([TenLoaiTinhTrang] = @Original_TenLoaiTinhTrang)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTinhTrangPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTinhTrangPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TenLoaiTinhTrang", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiTinhTrang", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenLoaiTinhTrang", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiTinhTrang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[LOAI_TINH_TRANG] ([MaLoaiTinhTrangPhong], [TenLoaiTinhTrang]) " +
                "VALUES (@MaLoaiTinhTrangPhong, @TenLoaiTinhTrang);\r\nSELECT MaLoaiTinhTrangPhong," +
                " TenLoaiTinhTrang FROM LOAI_TINH_TRANG WHERE (MaLoaiTinhTrangPhong = @MaLoaiTinh" +
                "TrangPhong)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTinhTrangPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTinhTrangPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenLoaiTinhTrang", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiTinhTrang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LOAI_TINH_TRANG] SET [MaLoaiTinhTrangPhong] = @MaLoaiTinhTrangPhong, [TenLoaiTinhTrang] = @TenLoaiTinhTrang WHERE (([MaLoaiTinhTrangPhong] = @Original_MaLoaiTinhTrangPhong) AND ((@IsNull_TenLoaiTinhTrang = 1 AND [TenLoaiTinhTrang] IS NULL) OR ([TenLoaiTinhTrang] = @Original_TenLoaiTinhTrang)));
SELECT MaLoaiTinhTrangPhong, TenLoaiTinhTrang FROM LOAI_TINH_TRANG WHERE (MaLoaiTinhTrangPhong = @MaLoaiTinhTrangPhong)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTinhTrangPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTinhTrangPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenLoaiTinhTrang", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiTinhTrang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTinhTrangPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTinhTrangPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TenLoaiTinhTrang", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiTinhTrang", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenLoaiTinhTrang", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiTinhTrang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaLoaiTinhTrangPhong, TenLoaiTinhTrang FROM dbo.LOAI_TINH_TRANG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.LOAI_TINH_TRANGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.LOAI_TINH_TRANGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.LOAI_TINH_TRANGDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.LOAI_TINH_TRANGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.LOAI_TINH_TRANGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "LOAI_TINH_TRANG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaLoaiTinhTrangPhong, string Original_TenLoaiTinhTrang) {
            if ((Original_MaLoaiTinhTrangPhong == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTinhTrangPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaLoaiTinhTrangPhong));
            }
            if ((Original_TenLoaiTinhTrang == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TenLoaiTinhTrang));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaLoaiTinhTrangPhong, string TenLoaiTinhTrang) {
            if ((MaLoaiTinhTrangPhong == null)) {
                throw new System.ArgumentNullException("MaLoaiTinhTrangPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaLoaiTinhTrangPhong));
            }
            if ((TenLoaiTinhTrang == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TenLoaiTinhTrang));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaLoaiTinhTrangPhong, string TenLoaiTinhTrang, string Original_MaLoaiTinhTrangPhong, string Original_TenLoaiTinhTrang) {
            if ((MaLoaiTinhTrangPhong == null)) {
                throw new System.ArgumentNullException("MaLoaiTinhTrangPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaLoaiTinhTrangPhong));
            }
            if ((TenLoaiTinhTrang == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TenLoaiTinhTrang));
            }
            if ((Original_MaLoaiTinhTrangPhong == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTinhTrangPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_MaLoaiTinhTrangPhong));
            }
            if ((Original_TenLoaiTinhTrang == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_TenLoaiTinhTrang));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MAT_DO_SU_DUNG_PHONGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MAT_DO_SU_DUNG_PHONGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MAT_DO_SU_DUNG_PHONG";
            tableMapping.ColumnMappings.Add("MaMatDo", "MaMatDo");
            tableMapping.ColumnMappings.Add("TongNgay", "TongNgay");
            tableMapping.ColumnMappings.Add("Thang", "Thang");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[MAT_DO_SU_DUNG_PHONG] WHERE (([MaMatDo] = @Original_MaMatDo) A" +
                "ND ((@IsNull_TongNgay = 1 AND [TongNgay] IS NULL) OR ([TongNgay] = @Original_Ton" +
                "gNgay)) AND ((@IsNull_Thang = 1 AND [Thang] IS NULL) OR ([Thang] = @Original_Tha" +
                "ng)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaMatDo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaMatDo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TongNgay", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TongNgay", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TongNgay", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TongNgay", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Thang", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Thang", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Thang", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Thang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[MAT_DO_SU_DUNG_PHONG] ([MaMatDo], [TongNgay], [Thang]) VALUES " +
                "(@MaMatDo, @TongNgay, @Thang);\r\nSELECT MaMatDo, TongNgay, Thang FROM MAT_DO_SU_D" +
                "UNG_PHONG WHERE (MaMatDo = @MaMatDo)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaMatDo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaMatDo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TongNgay", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TongNgay", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Thang", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Thang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MAT_DO_SU_DUNG_PHONG] SET [MaMatDo] = @MaMatDo, [TongNgay] = @TongNgay, [Thang] = @Thang WHERE (([MaMatDo] = @Original_MaMatDo) AND ((@IsNull_TongNgay = 1 AND [TongNgay] IS NULL) OR ([TongNgay] = @Original_TongNgay)) AND ((@IsNull_Thang = 1 AND [Thang] IS NULL) OR ([Thang] = @Original_Thang)));
SELECT MaMatDo, TongNgay, Thang FROM MAT_DO_SU_DUNG_PHONG WHERE (MaMatDo = @MaMatDo)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaMatDo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaMatDo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TongNgay", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TongNgay", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Thang", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Thang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaMatDo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaMatDo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TongNgay", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TongNgay", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TongNgay", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TongNgay", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Thang", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Thang", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Thang", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Thang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaMatDo, TongNgay, Thang FROM dbo.MAT_DO_SU_DUNG_PHONG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.MAT_DO_SU_DUNG_PHONGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.MAT_DO_SU_DUNG_PHONGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.MAT_DO_SU_DUNG_PHONGDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.MAT_DO_SU_DUNG_PHONGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.MAT_DO_SU_DUNG_PHONGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "MAT_DO_SU_DUNG_PHONG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaMatDo, System.Nullable<int> Original_TongNgay, System.Nullable<System.DateTime> Original_Thang) {
            if ((Original_MaMatDo == null)) {
                throw new System.ArgumentNullException("Original_MaMatDo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaMatDo));
            }
            if ((Original_TongNgay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_TongNgay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_Thang.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Thang.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaMatDo, System.Nullable<int> TongNgay, System.Nullable<System.DateTime> Thang) {
            if ((MaMatDo == null)) {
                throw new System.ArgumentNullException("MaMatDo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaMatDo));
            }
            if ((TongNgay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(TongNgay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((Thang.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Thang.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaMatDo, System.Nullable<int> TongNgay, System.Nullable<System.DateTime> Thang, string Original_MaMatDo, System.Nullable<int> Original_TongNgay, System.Nullable<System.DateTime> Original_Thang) {
            if ((MaMatDo == null)) {
                throw new System.ArgumentNullException("MaMatDo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaMatDo));
            }
            if ((TongNgay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(TongNgay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((Thang.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Thang.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_MaMatDo == null)) {
                throw new System.ArgumentNullException("Original_MaMatDo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_MaMatDo));
            }
            if ((Original_TongNgay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_TongNgay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_Thang.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_Thang.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NGUOI_DUNGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NGUOI_DUNGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NGUOI_DUNG";
            tableMapping.ColumnMappings.Add("TenDangNhap", "TenDangNhap");
            tableMapping.ColumnMappings.Add("MatKhau", "MatKhau");
            tableMapping.ColumnMappings.Add("LoaiNguoiDung", "LoaiNguoiDung");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[NGUOI_DUNG] ([TenDangNhap], [MatKhau], [LoaiNguoiDung]) VALUES" +
                " (@TenDangNhap, @MatKhau, @LoaiNguoiDung)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenDangNhap", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenDangNhap", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MatKhau", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MatKhau", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LoaiNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LoaiNguoiDung", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TenDangNhap, MatKhau, LoaiNguoiDung FROM dbo.NGUOI_DUNG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.NGUOI_DUNGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.NGUOI_DUNGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.NGUOI_DUNGDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.NGUOI_DUNGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.NGUOI_DUNGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "NGUOI_DUNG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TenDangNhap, string MatKhau, string LoaiNguoiDung) {
            if ((TenDangNhap == null)) {
                throw new System.ArgumentNullException("TenDangNhap");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TenDangNhap));
            }
            if ((MatKhau == null)) {
                throw new System.ArgumentNullException("MatKhau");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MatKhau));
            }
            if ((LoaiNguoiDung == null)) {
                throw new System.ArgumentNullException("LoaiNguoiDung");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LoaiNguoiDung));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PHIEU_NHAN_PHONGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PHIEU_NHAN_PHONGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PHIEU_NHAN_PHONG";
            tableMapping.ColumnMappings.Add("MaNhanPhong", "MaNhanPhong");
            tableMapping.ColumnMappings.Add("MaPhieuThue", "MaPhieuThue");
            tableMapping.ColumnMappings.Add("MaKhachHang", "MaKhachHang");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PHIEU_NHAN_PHONG] WHERE (([MaNhanPhong] = @Original_MaNhanPhon" +
                "g) AND ([MaPhieuThue] = @Original_MaPhieuThue) AND ([MaKhachHang] = @Original_Ma" +
                "KhachHang))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhieuThue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhieuThue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PHIEU_NHAN_PHONG] ([MaNhanPhong], [MaPhieuThue], [MaKhachHang]" +
                ") VALUES (@MaNhanPhong, @MaPhieuThue, @MaKhachHang);\r\nSELECT MaNhanPhong, MaPhie" +
                "uThue, MaKhachHang FROM PHIEU_NHAN_PHONG WHERE (MaNhanPhong = @MaNhanPhong)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhieuThue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhieuThue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PHIEU_NHAN_PHONG] SET [MaNhanPhong] = @MaNhanPhong, [MaPhieuThue] = @MaPhieuThue, [MaKhachHang] = @MaKhachHang WHERE (([MaNhanPhong] = @Original_MaNhanPhong) AND ([MaPhieuThue] = @Original_MaPhieuThue) AND ([MaKhachHang] = @Original_MaKhachHang));
SELECT MaNhanPhong, MaPhieuThue, MaKhachHang FROM PHIEU_NHAN_PHONG WHERE (MaNhanPhong = @MaNhanPhong)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhieuThue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhieuThue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNhanPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhanPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhieuThue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhieuThue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaNhanPhong, MaPhieuThue, MaKhachHang FROM dbo.PHIEU_NHAN_PHONG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.PHIEU_NHAN_PHONGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.PHIEU_NHAN_PHONGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.PHIEU_NHAN_PHONGDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.PHIEU_NHAN_PHONGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.PHIEU_NHAN_PHONGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PHIEU_NHAN_PHONG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaNhanPhong, string Original_MaPhieuThue, string Original_MaKhachHang) {
            if ((Original_MaNhanPhong == null)) {
                throw new System.ArgumentNullException("Original_MaNhanPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaNhanPhong));
            }
            if ((Original_MaPhieuThue == null)) {
                throw new System.ArgumentNullException("Original_MaPhieuThue");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaPhieuThue));
            }
            if ((Original_MaKhachHang == null)) {
                throw new System.ArgumentNullException("Original_MaKhachHang");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MaKhachHang));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaNhanPhong, string MaPhieuThue, string MaKhachHang) {
            if ((MaNhanPhong == null)) {
                throw new System.ArgumentNullException("MaNhanPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaNhanPhong));
            }
            if ((MaPhieuThue == null)) {
                throw new System.ArgumentNullException("MaPhieuThue");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaPhieuThue));
            }
            if ((MaKhachHang == null)) {
                throw new System.ArgumentNullException("MaKhachHang");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MaKhachHang));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaNhanPhong, string MaPhieuThue, string MaKhachHang, string Original_MaNhanPhong, string Original_MaPhieuThue, string Original_MaKhachHang) {
            if ((MaNhanPhong == null)) {
                throw new System.ArgumentNullException("MaNhanPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaNhanPhong));
            }
            if ((MaPhieuThue == null)) {
                throw new System.ArgumentNullException("MaPhieuThue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaPhieuThue));
            }
            if ((MaKhachHang == null)) {
                throw new System.ArgumentNullException("MaKhachHang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MaKhachHang));
            }
            if ((Original_MaNhanPhong == null)) {
                throw new System.ArgumentNullException("Original_MaNhanPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_MaNhanPhong));
            }
            if ((Original_MaPhieuThue == null)) {
                throw new System.ArgumentNullException("Original_MaPhieuThue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_MaPhieuThue));
            }
            if ((Original_MaKhachHang == null)) {
                throw new System.ArgumentNullException("Original_MaKhachHang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_MaKhachHang));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PHIEU_THUE_PHONGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PHIEU_THUE_PHONGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PHIEU_THUE_PHONG";
            tableMapping.ColumnMappings.Add("MaPhieuThue", "MaPhieuThue");
            tableMapping.ColumnMappings.Add("MaKhachHang", "MaKhachHang");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PHIEU_THUE_PHONG] WHERE (([MaPhieuThue] = @Original_MaPhieuThu" +
                "e) AND ([MaKhachHang] = @Original_MaKhachHang))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhieuThue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhieuThue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PHIEU_THUE_PHONG] ([MaPhieuThue], [MaKhachHang]) VALUES (@MaPh" +
                "ieuThue, @MaKhachHang);\r\nSELECT MaPhieuThue, MaKhachHang FROM PHIEU_THUE_PHONG W" +
                "HERE (MaPhieuThue = @MaPhieuThue)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhieuThue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhieuThue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PHIEU_THUE_PHONG] SET [MaPhieuThue] = @MaPhieuThue, [MaKhachHang] = @MaKhachHang WHERE (([MaPhieuThue] = @Original_MaPhieuThue) AND ([MaKhachHang] = @Original_MaKhachHang));
SELECT MaPhieuThue, MaKhachHang FROM PHIEU_THUE_PHONG WHERE (MaPhieuThue = @MaPhieuThue)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhieuThue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhieuThue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhieuThue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhieuThue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKhachHang", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKhachHang", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaPhieuThue, MaKhachHang FROM dbo.PHIEU_THUE_PHONG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.PHIEU_THUE_PHONGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.PHIEU_THUE_PHONGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.PHIEU_THUE_PHONGDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.PHIEU_THUE_PHONGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.PHIEU_THUE_PHONGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PHIEU_THUE_PHONG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaPhieuThue, string Original_MaKhachHang) {
            if ((Original_MaPhieuThue == null)) {
                throw new System.ArgumentNullException("Original_MaPhieuThue");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaPhieuThue));
            }
            if ((Original_MaKhachHang == null)) {
                throw new System.ArgumentNullException("Original_MaKhachHang");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaKhachHang));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaPhieuThue, string MaKhachHang) {
            if ((MaPhieuThue == null)) {
                throw new System.ArgumentNullException("MaPhieuThue");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaPhieuThue));
            }
            if ((MaKhachHang == null)) {
                throw new System.ArgumentNullException("MaKhachHang");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaKhachHang));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaPhieuThue, string MaKhachHang, string Original_MaPhieuThue, string Original_MaKhachHang) {
            if ((MaPhieuThue == null)) {
                throw new System.ArgumentNullException("MaPhieuThue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaPhieuThue));
            }
            if ((MaKhachHang == null)) {
                throw new System.ArgumentNullException("MaKhachHang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaKhachHang));
            }
            if ((Original_MaPhieuThue == null)) {
                throw new System.ArgumentNullException("Original_MaPhieuThue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_MaPhieuThue));
            }
            if ((Original_MaKhachHang == null)) {
                throw new System.ArgumentNullException("Original_MaKhachHang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_MaKhachHang));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PHONGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PHONGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PHONG";
            tableMapping.ColumnMappings.Add("MaPhong", "MaPhong");
            tableMapping.ColumnMappings.Add("MaLoaiPhong", "MaLoaiPhong");
            tableMapping.ColumnMappings.Add("MaLoaiTinhTrangPhong", "MaLoaiTinhTrangPhong");
            tableMapping.ColumnMappings.Add("GhiChu", "GhiChu");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PHONG] WHERE (([MaPhong] = @Original_MaPhong) AND ([MaLoaiPhon" +
                "g] = @Original_MaLoaiPhong) AND ([MaLoaiTinhTrangPhong] = @Original_MaLoaiTinhTr" +
                "angPhong) AND ((@IsNull_GhiChu = 1 AND [GhiChu] IS NULL) OR ([GhiChu] = @Origina" +
                "l_GhiChu)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTinhTrangPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTinhTrangPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GhiChu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GhiChu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GhiChu", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GhiChu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PHONG] ([MaPhong], [MaLoaiPhong], [MaLoaiTinhTrangPhong], [Ghi" +
                "Chu]) VALUES (@MaPhong, @MaLoaiPhong, @MaLoaiTinhTrangPhong, @GhiChu);\r\nSELECT M" +
                "aPhong, MaLoaiPhong, MaLoaiTinhTrangPhong, GhiChu FROM PHONG WHERE (MaPhong = @M" +
                "aPhong)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTinhTrangPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTinhTrangPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GhiChu", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GhiChu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PHONG] SET [MaPhong] = @MaPhong, [MaLoaiPhong] = @MaLoaiPhong, [MaLoaiTinhTrangPhong] = @MaLoaiTinhTrangPhong, [GhiChu] = @GhiChu WHERE (([MaPhong] = @Original_MaPhong) AND ([MaLoaiPhong] = @Original_MaLoaiPhong) AND ([MaLoaiTinhTrangPhong] = @Original_MaLoaiTinhTrangPhong) AND ((@IsNull_GhiChu = 1 AND [GhiChu] IS NULL) OR ([GhiChu] = @Original_GhiChu)));
SELECT MaPhong, MaLoaiPhong, MaLoaiTinhTrangPhong, GhiChu FROM PHONG WHERE (MaPhong = @MaPhong)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTinhTrangPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTinhTrangPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GhiChu", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GhiChu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTinhTrangPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTinhTrangPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GhiChu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GhiChu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GhiChu", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GhiChu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaPhong, MaLoaiPhong, MaLoaiTinhTrangPhong, GhiChu FROM dbo.PHONG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.PHONGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.PHONGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.PHONGDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.PHONGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.PHONGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PHONG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaPhong, string Original_MaLoaiPhong, string Original_MaLoaiTinhTrangPhong, string Original_GhiChu) {
            if ((Original_MaPhong == null)) {
                throw new System.ArgumentNullException("Original_MaPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaPhong));
            }
            if ((Original_MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaLoaiPhong));
            }
            if ((Original_MaLoaiTinhTrangPhong == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTinhTrangPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MaLoaiTinhTrangPhong));
            }
            if ((Original_GhiChu == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_GhiChu));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaPhong, string MaLoaiPhong, string MaLoaiTinhTrangPhong, string GhiChu) {
            if ((MaPhong == null)) {
                throw new System.ArgumentNullException("MaPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaPhong));
            }
            if ((MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("MaLoaiPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaLoaiPhong));
            }
            if ((MaLoaiTinhTrangPhong == null)) {
                throw new System.ArgumentNullException("MaLoaiTinhTrangPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MaLoaiTinhTrangPhong));
            }
            if ((GhiChu == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(GhiChu));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaPhong, string MaLoaiPhong, string MaLoaiTinhTrangPhong, string GhiChu, string Original_MaPhong, string Original_MaLoaiPhong, string Original_MaLoaiTinhTrangPhong, string Original_GhiChu) {
            if ((MaPhong == null)) {
                throw new System.ArgumentNullException("MaPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaPhong));
            }
            if ((MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("MaLoaiPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaLoaiPhong));
            }
            if ((MaLoaiTinhTrangPhong == null)) {
                throw new System.ArgumentNullException("MaLoaiTinhTrangPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MaLoaiTinhTrangPhong));
            }
            if ((GhiChu == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(GhiChu));
            }
            if ((Original_MaPhong == null)) {
                throw new System.ArgumentNullException("Original_MaPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_MaPhong));
            }
            if ((Original_MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_MaLoaiPhong));
            }
            if ((Original_MaLoaiTinhTrangPhong == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTinhTrangPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MaLoaiTinhTrangPhong));
            }
            if ((Original_GhiChu == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_GhiChu));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QUI_DINHTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QUI_DINHTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QUI_DINH";
            tableMapping.ColumnMappings.Add("TenQuiDinh", "TenQuiDinh");
            tableMapping.ColumnMappings.Add("MoTa", "MoTa");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[QUI_DINH] ([TenQuiDinh], [MoTa]) VALUES (@TenQuiDinh, @MoTa)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenQuiDinh", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenQuiDinh", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MoTa", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MoTa", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TenQuiDinh, MoTa FROM dbo.QUI_DINH";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.QUI_DINHDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.QUI_DINHDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.QUI_DINHDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.QUI_DINHDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.QUI_DINHDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "QUI_DINH");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TenQuiDinh, string MoTa) {
            if ((TenQuiDinh == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TenQuiDinh));
            }
            if ((MoTa == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MoTa));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class THAM_SOTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public THAM_SOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "THAM_SO";
            tableMapping.ColumnMappings.Add("PhieuDangKy", "PhieuDangKy");
            tableMapping.ColumnMappings.Add("PhieuNhan", "PhieuNhan");
            tableMapping.ColumnMappings.Add("HoaDon", "HoaDon");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[THAM_SO] ([PhieuDangKy], [PhieuNhan], [HoaDon]) VALUES (@Phieu" +
                "DangKy, @PhieuNhan, @HoaDon)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PhieuDangKy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PhieuDangKy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PhieuNhan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PhieuNhan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HoaDon", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HoaDon", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PhieuDangKy, PhieuNhan, HoaDon FROM dbo.THAM_SO";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.THAM_SODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.THAM_SODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.THAM_SODataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.THAM_SODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.THAM_SODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "THAM_SO");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int PhieuDangKy, int PhieuNhan, System.Nullable<int> HoaDon) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(PhieuDangKy));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(PhieuNhan));
            if ((HoaDon.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(HoaDon.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class THIET_BITableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public THIET_BITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "THIET_BI";
            tableMapping.ColumnMappings.Add("MaThietBi", "MaThietBi");
            tableMapping.ColumnMappings.Add("TenThietBi", "TenThietBi");
            tableMapping.ColumnMappings.Add("MaLoaiPhong", "MaLoaiPhong");
            tableMapping.ColumnMappings.Add("SoLuong", "SoLuong");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[THIET_BI] WHERE (([MaThietBi] = @Original_MaThietBi) AND ((@IsNull_TenThietBi = 1 AND [TenThietBi] IS NULL) OR ([TenThietBi] = @Original_TenThietBi)) AND ([MaLoaiPhong] = @Original_MaLoaiPhong) AND ((@IsNull_SoLuong = 1 AND [SoLuong] IS NULL) OR ([SoLuong] = @Original_SoLuong)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaThietBi", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaThietBi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TenThietBi", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TenThietBi", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenThietBi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenThietBi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoLuong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoLuong", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoLuong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoLuong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[THIET_BI] ([MaThietBi], [TenThietBi], [MaLoaiPhong], [SoLuong]" +
                ") VALUES (@MaThietBi, @TenThietBi, @MaLoaiPhong, @SoLuong);\r\nSELECT MaThietBi, T" +
                "enThietBi, MaLoaiPhong, SoLuong FROM THIET_BI WHERE (MaThietBi = @MaThietBi)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaThietBi", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaThietBi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenThietBi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenThietBi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoLuong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoLuong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[THIET_BI] SET [MaThietBi] = @MaThietBi, [TenThietBi] = @TenThietBi, [MaLoaiPhong] = @MaLoaiPhong, [SoLuong] = @SoLuong WHERE (([MaThietBi] = @Original_MaThietBi) AND ((@IsNull_TenThietBi = 1 AND [TenThietBi] IS NULL) OR ([TenThietBi] = @Original_TenThietBi)) AND ([MaLoaiPhong] = @Original_MaLoaiPhong) AND ((@IsNull_SoLuong = 1 AND [SoLuong] IS NULL) OR ([SoLuong] = @Original_SoLuong)));
SELECT MaThietBi, TenThietBi, MaLoaiPhong, SoLuong FROM THIET_BI WHERE (MaThietBi = @MaThietBi)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaThietBi", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaThietBi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenThietBi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenThietBi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoLuong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoLuong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaThietBi", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaThietBi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TenThietBi", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TenThietBi", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenThietBi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenThietBi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiPhong", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoLuong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoLuong", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoLuong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoLuong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QUANLYKHACHSAN.Properties.Settings.Default.QUANLYKHACHSANKIMANHConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MaThietBi, TenThietBi, MaLoaiPhong, SoLuong FROM dbo.THIET_BI";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QUANLYKHACHSANKIMANHDataSet.THIET_BIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QUANLYKHACHSANKIMANHDataSet.THIET_BIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QUANLYKHACHSANKIMANHDataSet.THIET_BIDataTable dataTable = new QUANLYKHACHSANKIMANHDataSet.THIET_BIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet.THIET_BIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QUANLYKHACHSANKIMANHDataSet dataSet) {
            return this.Adapter.Update(dataSet, "THIET_BI");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaThietBi, string Original_TenThietBi, string Original_MaLoaiPhong, System.Nullable<int> Original_SoLuong) {
            if ((Original_MaThietBi == null)) {
                throw new System.ArgumentNullException("Original_MaThietBi");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaThietBi));
            }
            if ((Original_TenThietBi == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TenThietBi));
            }
            if ((Original_MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_MaLoaiPhong));
            }
            if ((Original_SoLuong.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_SoLuong.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaThietBi, string TenThietBi, string MaLoaiPhong, System.Nullable<int> SoLuong) {
            if ((MaThietBi == null)) {
                throw new System.ArgumentNullException("MaThietBi");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaThietBi));
            }
            if ((TenThietBi == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TenThietBi));
            }
            if ((MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("MaLoaiPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MaLoaiPhong));
            }
            if ((SoLuong.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(SoLuong.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaThietBi, string TenThietBi, string MaLoaiPhong, System.Nullable<int> SoLuong, string Original_MaThietBi, string Original_TenThietBi, string Original_MaLoaiPhong, System.Nullable<int> Original_SoLuong) {
            if ((MaThietBi == null)) {
                throw new System.ArgumentNullException("MaThietBi");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaThietBi));
            }
            if ((TenThietBi == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TenThietBi));
            }
            if ((MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("MaLoaiPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MaLoaiPhong));
            }
            if ((SoLuong.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(SoLuong.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Original_MaThietBi == null)) {
                throw new System.ArgumentNullException("Original_MaThietBi");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_MaThietBi));
            }
            if ((Original_TenThietBi == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TenThietBi));
            }
            if ((Original_MaLoaiPhong == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MaLoaiPhong));
            }
            if ((Original_SoLuong.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_SoLuong.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591